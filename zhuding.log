2019-04-26 10:24:05.831  INFO 9400 --- [main] com.foreseers.tj.DatingApplication       : Starting DatingApplication on SC-201807131407 with PID 9400 (E:\workspace\dating\target\classes started by Administrator in E:\workspace\dating)
2019-04-26 10:24:05.835  INFO 9400 --- [main] com.foreseers.tj.DatingApplication       : No active profile set, falling back to default profiles: default
2019-04-26 10:24:06.625  INFO 9400 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2019-04-26 10:24:06.639  INFO 9400 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2019-04-26 10:24:06.639  INFO 9400 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/9.0.13
2019-04-26 10:24:06.644  INFO 9400 --- [main] o.a.catalina.core.AprLifecycleListener   : The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/bin/server;C:/Program Files/Java/bin;C:/Program Files/Java/lib/amd64;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Common Files\Microsoft Shared\Windows Live;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Common Files\Autodesk Shared\;C:\Program Files (x86)\Autodesk\Backburner\;C:\Program Files (x86)\GtkSharp\2.12\bin;D:\Program Files\TortoiseSVN\bin;C:\Program Files\Java8\jdk1.8.0_191\bin;C:\Program Files\Java8\jdk1.8.0_191\jre\bin;C:\Program Files\MySQL\MySQL Server 5.5\bin;D:\redis\;C:\Program Files\Common Files\Microsoft Shared\Windows Live;D:\maven\apache-maven-3.6.0\bin;;D:\eclipse\eclipse;;.]
2019-04-26 10:24:06.699  INFO 9400 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2019-04-26 10:24:06.699  INFO 9400 --- [main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 838 ms
2019-04-26 10:24:07.447  INFO 9400 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2019-04-26 10:24:07.603  INFO 9400 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService 'taskScheduler'
2019-04-26 10:24:07.656  INFO 9400 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2019-04-26 10:24:07.658  INFO 9400 --- [main] com.foreseers.tj.DatingApplication       : Started DatingApplication in 2.1 seconds (JVM running for 2.594)
2019-04-26 10:26:55.434  INFO 9400 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-04-26 10:26:55.435  INFO 9400 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2019-04-26 10:26:55.439  INFO 9400 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 4 ms
2019-04-26 10:26:55.481  INFO 9400 --- [http-nio-8080-exec-1] com.zaxxer.hikari.HikariDataSource       : localhost - Starting...
2019-04-26 10:26:55.605  INFO 9400 --- [http-nio-8080-exec-2] c.foreseers.tj.action.UserCanumsAction   : 获取用户的擦字子数方法
2019-04-26 10:26:55.605  INFO 9400 --- [http-nio-8080-exec-3] c.foreseers.tj.action.UserCanumsAction   : 进入更新擦子数方法
2019-04-26 10:26:55.607  INFO 9400 --- [http-nio-8080-exec-4] com.foreseers.tj.action.UserMatAction    : 进入推荐附近的人的方法
2019-04-26 10:26:55.607  INFO 9400 --- [http-nio-8080-exec-4] com.foreseers.tj.action.UserMatAction    : 请求参数：country:null
2019-04-26 10:26:55.607  INFO 9400 --- [http-nio-8080-exec-4] com.foreseers.tj.action.UserMatAction    : 请求参数：city:null
2019-04-26 10:26:55.607  INFO 9400 --- [http-nio-8080-exec-4] com.foreseers.tj.action.UserMatAction    : 请求参数：area:null
2019-04-26 10:26:55.607  INFO 9400 --- [http-nio-8080-exec-4] com.foreseers.tj.action.UserMatAction    : 请求参数：facebook:100002
2019-04-26 10:26:55.607  INFO 9400 --- [http-nio-8080-exec-4] com.foreseers.tj.action.UserMatAction    : 请求参数：经度:39.177829
2019-04-26 10:26:55.607  INFO 9400 --- [http-nio-8080-exec-4] com.foreseers.tj.action.UserMatAction    : 请求参数：纬度:117.132767
2019-04-26 10:26:55.608  INFO 9400 --- [http-nio-8080-exec-4] com.foreseers.tj.action.UserMatAction    : 请求参数：sex:
2019-04-26 10:26:55.608  INFO 9400 --- [http-nio-8080-exec-4] com.foreseers.tj.action.UserMatAction    : 请求参数：筛选条件年龄:12
2019-04-26 10:26:55.608  INFO 9400 --- [http-nio-8080-exec-4] com.foreseers.tj.action.UserMatAction    : 请求参数：筛选条件年龄:50
2019-04-26 10:26:55.608  INFO 9400 --- [http-nio-8080-exec-4] com.foreseers.tj.action.UserMatAction    : 请求参数：筛选条件距离:100
2019-04-26 10:26:55.616  INFO 9400 --- [http-nio-8080-exec-5] c.foreseers.tj.action.UserCanumsAction   : 获取用户的擦字子数方法
2019-04-26 10:26:55.731  INFO 9400 --- [http-nio-8080-exec-1] com.zaxxer.hikari.HikariDataSource       : localhost - Start completed.
2019-04-26 10:26:55.785 DEBUG 9400 --- [http-nio-8080-exec-1] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 10:26:55.785 DEBUG 9400 --- [http-nio-8080-exec-2] c.f.t.m.U.selectByUserKey                : ==>  Preparing: select id, userid, everyday, vipeveryday, nums, updated, buynums, countnums, spare, spare1, spareint from user_canums where userid = ? 
2019-04-26 10:26:55.785 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 10:26:55.785 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.selectByUserKey                : ==>  Preparing: select id, userid, everyday, vipeveryday, nums, updated, buynums, countnums, spare, spare1, spareint from user_canums where userid = ? 
2019-04-26 10:26:55.804 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.U.updateByFaceIDSelective        : ==>  Preparing: update dt_user SET facebook = ?, lat = ?, lng = ? where facebook = ? 
2019-04-26 10:26:55.824 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.U.updateByFaceIDSelective        : ==> Parameters: 100002(String), 39.177829(Double), 117.132767(Double), 100002(String)
2019-04-26 10:26:55.824 DEBUG 9400 --- [http-nio-8080-exec-1] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 251(Integer)
2019-04-26 10:26:55.824 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 251(Integer)
2019-04-26 10:26:55.824 DEBUG 9400 --- [http-nio-8080-exec-2] c.f.t.m.U.selectByUserKey                : ==> Parameters: 251(Integer)
2019-04-26 10:26:55.825 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.selectByUserKey                : ==> Parameters: 251(Integer)
2019-04-26 10:26:55.830 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.U.updateByFaceIDSelective        : <==    Updates: 1
2019-04-26 10:26:55.834  INFO 9400 --- [http-nio-8080-exec-4] com.foreseers.tj.action.UserMatAction    : 将个人信息更新到数据库
2019-04-26 10:26:55.836 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.tj.mapper.UserMapper.QueryUser       : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where facebook = ? 
2019-04-26 10:26:55.836 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.tj.mapper.UserMapper.QueryUser       : ==> Parameters: 100002(String)
2019-04-26 10:26:55.853 DEBUG 9400 --- [http-nio-8080-exec-2] c.f.t.m.U.selectByUserKey                : <==      Total: 1
2019-04-26 10:26:55.853 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.tj.mapper.UserMapper.QueryUser       : <==      Total: 1
2019-04-26 10:26:55.853 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 10:26:55.854 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.selectByUserKey                : <==      Total: 1
2019-04-26 10:26:55.854 DEBUG 9400 --- [http-nio-8080-exec-1] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 10:26:55.854 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.U.selectByUserKey                : ==>  Preparing: select id, userid, everyday, vipeveryday, nums, updated, buynums, countnums, spare, spare1, spareint from user_canums where userid = ? 
2019-04-26 10:26:55.854 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.U.selectByUserKey                : ==> Parameters: 251(Integer)
2019-04-26 10:26:55.856 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.U.selectByUserKey                : <==      Total: 1
2019-04-26 10:26:55.857 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.mapper.UserMapper.QueryUserByCity  : ==>  Preparing: select id from dt_user where reservedint >= ? and reservedint <= ? and id != ? 
2019-04-26 10:26:55.858 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.mapper.UserMapper.QueryUserByCity  : ==> Parameters: 12(Integer), 50(Integer), 251(Integer)
2019-04-26 10:26:55.859 DEBUG 9400 --- [http-nio-8080-exec-1] c.f.t.m.U.selectUserFriendList           : ==>  Preparing: select id, user_id, friend_id, user_reation, firendtime, lookhead, sendpix, lookimages, spareint, spare, spare1 from user_friend WHERE user_id = ? or friend_id = ?; 
2019-04-26 10:26:55.859 DEBUG 9400 --- [http-nio-8080-exec-1] c.f.t.m.U.selectUserFriendList           : ==> Parameters: 251(String), 251(String)
2019-04-26 10:26:55.860 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.mapper.UserMapper.QueryUserByCity  : <==      Total: 4
2019-04-26 10:26:55.860 DEBUG 9400 --- [http-nio-8080-exec-1] c.f.t.m.U.selectUserFriendList           : <==      Total: 2
2019-04-26 10:26:55.861  INFO 9400 --- [http-nio-8080-exec-4] com.foreseers.tj.action.UserMatAction    : idlist:[250, 254, 255, 256]
2019-04-26 10:26:55.861  INFO 9400 --- [http-nio-8080-exec-4] com.foreseers.tj.action.UserMatAction    : 通过筛选条件筛选用户
2019-04-26 10:26:55.861  INFO 9400 --- [http-nio-8080-exec-1] c.f.t.s.impl.UserFriendServiceImpl       : 刚成为好友24小时，可以查看头像，和发送图片
2019-04-26 10:26:55.862 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 10:26:55.862 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 250(Integer)
2019-04-26 10:26:55.862 DEBUG 9400 --- [http-nio-8080-exec-1] c.f.t.m.U.updateByPrimaryKeySelective    : ==>  Preparing: update user_friend SET lookhead = ?, sendpix = ? where id = ? 
2019-04-26 10:26:55.863 DEBUG 9400 --- [http-nio-8080-exec-1] c.f.t.m.U.updateByPrimaryKeySelective    : ==> Parameters: 1(Integer), 1(Integer), 35(Integer)
2019-04-26 10:26:55.863 DEBUG 9400 --- [http-nio-8080-exec-1] c.f.t.m.U.updateByPrimaryKeySelective    : <==    Updates: 1
2019-04-26 10:26:55.864  INFO 9400 --- [http-nio-8080-exec-1] c.f.t.s.impl.UserFriendServiceImpl       : 刚成为好友8小时，可以查看头像
2019-04-26 10:26:55.864 DEBUG 9400 --- [http-nio-8080-exec-1] c.f.t.m.U.updateByPrimaryKeySelective    : ==>  Preparing: update user_friend SET lookhead = ? where id = ? 
2019-04-26 10:26:55.864 DEBUG 9400 --- [http-nio-8080-exec-1] c.f.t.m.U.updateByPrimaryKeySelective    : ==> Parameters: 1(Integer), 35(Integer)
2019-04-26 10:26:55.864 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 10:26:55.865 DEBUG 9400 --- [http-nio-8080-exec-1] c.f.t.m.U.updateByPrimaryKeySelective    : <==    Updates: 1
2019-04-26 10:26:55.866  INFO 9400 --- [http-nio-8080-exec-4] com.foreseers.tj.action.UserMatAction    : 经度：39.17696
2019-04-26 10:26:55.866  INFO 9400 --- [http-nio-8080-exec-4] com.foreseers.tj.action.UserMatAction    : 经度：117.133395
2019-04-26 10:26:55.867  INFO 9400 --- [http-nio-8080-exec-4] com.foreseers.tj.action.UserMatAction    : 距离：1
2019-04-26 10:26:55.871 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.U.updateByzhuidKeySelective      : ==>  Preparing: update dt_usermatch SET distance = ? where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:26:55.872 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.U.updateByzhuidKeySelective      : ==> Parameters: 1(Integer), 251(Integer), 250(Integer), 250(Integer), 251(Integer)
2019-04-26 10:26:55.874 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.U.updateByzhuidKeySelective      : <==    Updates: 1
2019-04-26 10:26:55.876  INFO 9400 --- [http-nio-8080-exec-4] com.foreseers.tj.action.UserMatAction    : 通过筛选条件筛选用户
2019-04-26 10:26:55.877 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 10:26:55.877 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 254(Integer)
2019-04-26 10:26:55.878 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 10:26:55.879  INFO 9400 --- [http-nio-8080-exec-4] com.foreseers.tj.action.UserMatAction    : 经度：39.17696
2019-04-26 10:26:55.879  INFO 9400 --- [http-nio-8080-exec-4] com.foreseers.tj.action.UserMatAction    : 经度：117.133395
2019-04-26 10:26:55.879  INFO 9400 --- [http-nio-8080-exec-4] com.foreseers.tj.action.UserMatAction    : 距离：1
2019-04-26 10:26:55.880 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.U.updateByzhuidKeySelective      : ==>  Preparing: update dt_usermatch SET distance = ? where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:26:55.880 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.U.updateByzhuidKeySelective      : ==> Parameters: 1(Integer), 251(Integer), 254(Integer), 254(Integer), 251(Integer)
2019-04-26 10:26:55.881 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.U.updateByzhuidKeySelective      : <==    Updates: 1
2019-04-26 10:26:55.883  INFO 9400 --- [http-nio-8080-exec-4] com.foreseers.tj.action.UserMatAction    : 通过筛选条件筛选用户
2019-04-26 10:26:55.884 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 10:26:55.884 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 255(Integer)
2019-04-26 10:26:55.886 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 10:26:55.887  INFO 9400 --- [http-nio-8080-exec-4] com.foreseers.tj.action.UserMatAction    : 经度：39.176995
2019-04-26 10:26:55.888  INFO 9400 --- [http-nio-8080-exec-4] com.foreseers.tj.action.UserMatAction    : 经度：117.133437
2019-04-26 10:26:55.889  INFO 9400 --- [http-nio-8080-exec-4] com.foreseers.tj.action.UserMatAction    : 距离：1
2019-04-26 10:26:55.890 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.U.updateByzhuidKeySelective      : ==>  Preparing: update dt_usermatch SET distance = ? where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:26:55.891 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.U.updateByzhuidKeySelective      : ==> Parameters: 1(Integer), 251(Integer), 255(Integer), 255(Integer), 251(Integer)
2019-04-26 10:26:55.891 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.U.updateByzhuidKeySelective      : <==    Updates: 1
2019-04-26 10:26:55.893  INFO 9400 --- [http-nio-8080-exec-4] com.foreseers.tj.action.UserMatAction    : 通过筛选条件筛选用户
2019-04-26 10:26:55.894 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 10:26:55.894 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 256(Integer)
2019-04-26 10:26:55.895 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 10:26:55.896  INFO 9400 --- [http-nio-8080-exec-4] com.foreseers.tj.action.UserMatAction    : 经度：39.176677
2019-04-26 10:26:55.896  INFO 9400 --- [http-nio-8080-exec-4] com.foreseers.tj.action.UserMatAction    : 经度：117.132802
2019-04-26 10:26:55.896  INFO 9400 --- [http-nio-8080-exec-4] com.foreseers.tj.action.UserMatAction    : 距离：1
2019-04-26 10:26:55.897 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.U.updateByzhuidKeySelective      : ==>  Preparing: update dt_usermatch SET distance = ? where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:26:55.897 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.U.updateByzhuidKeySelective      : ==> Parameters: 1(Integer), 251(Integer), 256(Integer), 256(Integer), 251(Integer)
2019-04-26 10:26:55.898 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.U.updateByzhuidKeySelective      : <==    Updates: 1
2019-04-26 10:26:55.900 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.tj.mapper.UserMapper.QueryUserByNUM  : ==>  Preparing: select id from (select * from dt_user where id != ? ORDER BY num desc LIMIT ? ) t ORDER BY RAND() LIMIT ?; 
2019-04-26 10:26:55.901 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.tj.mapper.UserMapper.QueryUserByNUM  : ==> Parameters: 251(Integer), 20(Integer), 2(Integer)
2019-04-26 10:26:55.902 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.tj.mapper.UserMapper.QueryUserByNUM  : <==      Total: 2
2019-04-26 10:26:55.903  INFO 9400 --- [http-nio-8080-exec-4] com.foreseers.tj.action.UserMatAction    : 推送的用户id为：252
2019-04-26 10:26:55.905 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 10:26:55.905 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 252(Integer)
2019-04-26 10:26:55.907 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 10:26:55.907  INFO 9400 --- [http-nio-8080-exec-4] com.foreseers.tj.action.UserMatAction    : 计算推送用户的距离：1
2019-04-26 10:26:55.907  INFO 9400 --- [http-nio-8080-exec-4] com.foreseers.tj.action.UserMatAction    : 重新计算推送的人距离
2019-04-26 10:26:55.908 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.U.updateByzhuidKeySelective      : ==>  Preparing: update dt_usermatch SET distance = ? where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:26:55.908 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.U.updateByzhuidKeySelective      : ==> Parameters: 1(Integer), 251(Integer), 252(Integer), 252(Integer), 251(Integer)
2019-04-26 10:26:55.909 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.U.updateByzhuidKeySelective      : <==    Updates: 1
2019-04-26 10:26:55.911 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UserDefriendMapper.getBlackList  : ==>  Preparing: select id, userid, blackid, defriendtime, updated, spare, spareint from user_defriend where userid = ? 
2019-04-26 10:26:55.911 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UserDefriendMapper.getBlackList  : ==> Parameters: 251(Integer)
2019-04-26 10:26:55.912 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UserDefriendMapper.getBlackList  : <==      Total: 0
2019-04-26 10:26:55.912  INFO 9400 --- [http-nio-8080-exec-4] com.foreseers.tj.action.UserMatAction    : 查询黑名单列表：blacks：[]
2019-04-26 10:26:55.913 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UsermatchMapper.usermatchQuery   : ==>  Preparing: select id, zhuid, congid, userscore, userdesc, commentgood, commentbad, characteristicgood, characteristicbad, mindscore, minddesc, bodyscore, bodydesc, characterscore, characterdesc, distance, spare, spare1, spare2 , commentdesc, characteristicdesc from dt_usermatch where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:26:55.913 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UsermatchMapper.usermatchQuery   : ==> Parameters: 251(Integer), 250(Integer), 250(Integer), 251(Integer)
2019-04-26 10:26:55.924 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UsermatchMapper.usermatchQuery   : <==      Total: 1
2019-04-26 10:26:55.926 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UsermatchMapper.usermatchQuery   : ==>  Preparing: select id, zhuid, congid, userscore, userdesc, commentgood, commentbad, characteristicgood, characteristicbad, mindscore, minddesc, bodyscore, bodydesc, characterscore, characterdesc, distance, spare, spare1, spare2 , commentdesc, characteristicdesc from dt_usermatch where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:26:55.927 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UsermatchMapper.usermatchQuery   : ==> Parameters: 251(Integer), 254(Integer), 254(Integer), 251(Integer)
2019-04-26 10:26:55.928 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UsermatchMapper.usermatchQuery   : <==      Total: 1
2019-04-26 10:26:55.929 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UsermatchMapper.usermatchQuery   : ==>  Preparing: select id, zhuid, congid, userscore, userdesc, commentgood, commentbad, characteristicgood, characteristicbad, mindscore, minddesc, bodyscore, bodydesc, characterscore, characterdesc, distance, spare, spare1, spare2 , commentdesc, characteristicdesc from dt_usermatch where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:26:55.929 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UsermatchMapper.usermatchQuery   : ==> Parameters: 251(Integer), 255(Integer), 255(Integer), 251(Integer)
2019-04-26 10:26:55.930 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UsermatchMapper.usermatchQuery   : <==      Total: 1
2019-04-26 10:26:55.931 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UsermatchMapper.usermatchQuery   : ==>  Preparing: select id, zhuid, congid, userscore, userdesc, commentgood, commentbad, characteristicgood, characteristicbad, mindscore, minddesc, bodyscore, bodydesc, characterscore, characterdesc, distance, spare, spare1, spare2 , commentdesc, characteristicdesc from dt_usermatch where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:26:55.931 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UsermatchMapper.usermatchQuery   : ==> Parameters: 251(Integer), 256(Integer), 256(Integer), 251(Integer)
2019-04-26 10:26:55.932 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UsermatchMapper.usermatchQuery   : <==      Total: 1
2019-04-26 10:26:55.933 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UsermatchMapper.usermatchQuery   : ==>  Preparing: select id, zhuid, congid, userscore, userdesc, commentgood, commentbad, characteristicgood, characteristicbad, mindscore, minddesc, bodyscore, bodydesc, characterscore, characterdesc, distance, spare, spare1, spare2 , commentdesc, characteristicdesc from dt_usermatch where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:26:55.933 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UsermatchMapper.usermatchQuery   : ==> Parameters: 251(Integer), 252(Integer), 252(Integer), 251(Integer)
2019-04-26 10:26:55.934 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UsermatchMapper.usermatchQuery   : <==      Total: 1
2019-04-26 10:26:55.935  INFO 9400 --- [http-nio-8080-exec-4] com.foreseers.tj.action.UserMatAction    : 命书用户ids:[]
2019-04-26 10:26:55.935  INFO 9400 --- [http-nio-8080-exec-4] com.foreseers.tj.action.UserMatAction    : 判断是否返回清晰头像
2019-04-26 10:26:55.935 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.U.selectUserFriend               : ==>  Preparing: select id, user_id, friend_id, user_reation, firendtime, lookhead, sendpix, lookimages, spareint, spare, spare1 from user_friend where (user_id = ? and friend_id = ?) or (friend_id = ? AND user_id = ?) 
2019-04-26 10:26:55.935 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.U.selectUserFriend               : ==> Parameters: 251(String), 250(String), 251(String), 250(String)
2019-04-26 10:26:55.936 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.U.selectUserFriend               : <==      Total: 1
2019-04-26 10:26:55.937  INFO 9400 --- [http-nio-8080-exec-4] com.foreseers.tj.action.UserMatAction    : 两人是好友关系，切可以返回清晰头像
2019-04-26 10:26:55.937 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 10:26:55.937 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 250(Integer)
2019-04-26 10:26:55.938 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 10:26:55.939 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UsermatchMapper.usermatchQuery   : ==>  Preparing: select id, zhuid, congid, userscore, userdesc, commentgood, commentbad, characteristicgood, characteristicbad, mindscore, minddesc, bodyscore, bodydesc, characterscore, characterdesc, distance, spare, spare1, spare2 , commentdesc, characteristicdesc from dt_usermatch where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:26:55.939 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UsermatchMapper.usermatchQuery   : ==> Parameters: 250(Integer), 251(Integer), 251(Integer), 250(Integer)
2019-04-26 10:26:55.940 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UsermatchMapper.usermatchQuery   : <==      Total: 1
2019-04-26 10:26:55.940 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.U.selectUserFriend               : ==>  Preparing: select id, user_id, friend_id, user_reation, firendtime, lookhead, sendpix, lookimages, spareint, spare, spare1 from user_friend where (user_id = ? and friend_id = ?) or (friend_id = ? AND user_id = ?) 
2019-04-26 10:26:55.940 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.U.selectUserFriend               : ==> Parameters: 251(String), 254(String), 251(String), 254(String)
2019-04-26 10:26:55.941 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.U.selectUserFriend               : <==      Total: 0
2019-04-26 10:26:55.941  INFO 9400 --- [http-nio-8080-exec-4] com.foreseers.tj.action.UserMatAction    : 两人不是好友关系，或者成为好友时间不够，判断是否使用过擦子
2019-04-26 10:26:55.943 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.U.selectByUserCaHistory          : ==>  Preparing: select id, userid, caid, usertime, userupdated, spare, spareint from user_ca_history where userid = ? and caid = ?; 
2019-04-26 10:26:55.943 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.U.selectByUserCaHistory          : ==> Parameters: 251(Integer), 254(Integer)
2019-04-26 10:26:55.944 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.U.selectByUserCaHistory          : <==      Total: 0
2019-04-26 10:26:55.945  INFO 9400 --- [http-nio-8080-exec-4] com.foreseers.tj.action.UserMatAction    : 没有使用过擦子，不能查看清晰头像
2019-04-26 10:26:55.945 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 10:26:55.945 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 254(Integer)
2019-04-26 10:26:55.946 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 10:26:55.947 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UsermatchMapper.usermatchQuery   : ==>  Preparing: select id, zhuid, congid, userscore, userdesc, commentgood, commentbad, characteristicgood, characteristicbad, mindscore, minddesc, bodyscore, bodydesc, characterscore, characterdesc, distance, spare, spare1, spare2 , commentdesc, characteristicdesc from dt_usermatch where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:26:55.947 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UsermatchMapper.usermatchQuery   : ==> Parameters: 254(Integer), 251(Integer), 251(Integer), 254(Integer)
2019-04-26 10:26:55.948 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UsermatchMapper.usermatchQuery   : <==      Total: 1
2019-04-26 10:26:55.948 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.U.selectUserFriend               : ==>  Preparing: select id, user_id, friend_id, user_reation, firendtime, lookhead, sendpix, lookimages, spareint, spare, spare1 from user_friend where (user_id = ? and friend_id = ?) or (friend_id = ? AND user_id = ?) 
2019-04-26 10:26:55.949 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.U.selectUserFriend               : ==> Parameters: 251(String), 255(String), 251(String), 255(String)
2019-04-26 10:26:55.949 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.U.selectUserFriend               : <==      Total: 0
2019-04-26 10:26:55.950  INFO 9400 --- [http-nio-8080-exec-4] com.foreseers.tj.action.UserMatAction    : 两人不是好友关系，或者成为好友时间不够，判断是否使用过擦子
2019-04-26 10:26:55.950 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.U.selectByUserCaHistory          : ==>  Preparing: select id, userid, caid, usertime, userupdated, spare, spareint from user_ca_history where userid = ? and caid = ?; 
2019-04-26 10:26:55.950 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.U.selectByUserCaHistory          : ==> Parameters: 251(Integer), 255(Integer)
2019-04-26 10:26:55.950 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.U.selectByUserCaHistory          : <==      Total: 0
2019-04-26 10:26:55.951  INFO 9400 --- [http-nio-8080-exec-4] com.foreseers.tj.action.UserMatAction    : 没有使用过擦子，不能查看清晰头像
2019-04-26 10:26:55.951 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 10:26:55.951 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 255(Integer)
2019-04-26 10:26:55.952 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 10:26:55.952 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UsermatchMapper.usermatchQuery   : ==>  Preparing: select id, zhuid, congid, userscore, userdesc, commentgood, commentbad, characteristicgood, characteristicbad, mindscore, minddesc, bodyscore, bodydesc, characterscore, characterdesc, distance, spare, spare1, spare2 , commentdesc, characteristicdesc from dt_usermatch where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:26:55.953 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UsermatchMapper.usermatchQuery   : ==> Parameters: 255(Integer), 251(Integer), 251(Integer), 255(Integer)
2019-04-26 10:26:55.953 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UsermatchMapper.usermatchQuery   : <==      Total: 1
2019-04-26 10:26:55.954 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.U.selectUserFriend               : ==>  Preparing: select id, user_id, friend_id, user_reation, firendtime, lookhead, sendpix, lookimages, spareint, spare, spare1 from user_friend where (user_id = ? and friend_id = ?) or (friend_id = ? AND user_id = ?) 
2019-04-26 10:26:55.954 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.U.selectUserFriend               : ==> Parameters: 251(String), 256(String), 251(String), 256(String)
2019-04-26 10:26:55.955 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.U.selectUserFriend               : <==      Total: 0
2019-04-26 10:26:55.955  INFO 9400 --- [http-nio-8080-exec-4] com.foreseers.tj.action.UserMatAction    : 两人不是好友关系，或者成为好友时间不够，判断是否使用过擦子
2019-04-26 10:26:55.956 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.U.selectByUserCaHistory          : ==>  Preparing: select id, userid, caid, usertime, userupdated, spare, spareint from user_ca_history where userid = ? and caid = ?; 
2019-04-26 10:26:55.956 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.U.selectByUserCaHistory          : ==> Parameters: 251(Integer), 256(Integer)
2019-04-26 10:26:55.956 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.U.selectByUserCaHistory          : <==      Total: 0
2019-04-26 10:26:55.957  INFO 9400 --- [http-nio-8080-exec-4] com.foreseers.tj.action.UserMatAction    : 没有使用过擦子，不能查看清晰头像
2019-04-26 10:26:55.957 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 10:26:55.957 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 256(Integer)
2019-04-26 10:26:55.958 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 10:26:55.958 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UsermatchMapper.usermatchQuery   : ==>  Preparing: select id, zhuid, congid, userscore, userdesc, commentgood, commentbad, characteristicgood, characteristicbad, mindscore, minddesc, bodyscore, bodydesc, characterscore, characterdesc, distance, spare, spare1, spare2 , commentdesc, characteristicdesc from dt_usermatch where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:26:55.959 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UsermatchMapper.usermatchQuery   : ==> Parameters: 256(Integer), 251(Integer), 251(Integer), 256(Integer)
2019-04-26 10:26:55.959 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UsermatchMapper.usermatchQuery   : <==      Total: 1
2019-04-26 10:26:55.960 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.U.selectUserFriend               : ==>  Preparing: select id, user_id, friend_id, user_reation, firendtime, lookhead, sendpix, lookimages, spareint, spare, spare1 from user_friend where (user_id = ? and friend_id = ?) or (friend_id = ? AND user_id = ?) 
2019-04-26 10:26:55.960 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.U.selectUserFriend               : ==> Parameters: 251(String), 252(String), 251(String), 252(String)
2019-04-26 10:26:55.961 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.U.selectUserFriend               : <==      Total: 0
2019-04-26 10:26:55.961  INFO 9400 --- [http-nio-8080-exec-4] com.foreseers.tj.action.UserMatAction    : 两人不是好友关系，或者成为好友时间不够，判断是否使用过擦子
2019-04-26 10:26:55.961 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.U.selectByUserCaHistory          : ==>  Preparing: select id, userid, caid, usertime, userupdated, spare, spareint from user_ca_history where userid = ? and caid = ?; 
2019-04-26 10:26:55.962 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.U.selectByUserCaHistory          : ==> Parameters: 251(Integer), 252(Integer)
2019-04-26 10:26:55.962 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.U.selectByUserCaHistory          : <==      Total: 0
2019-04-26 10:26:55.962  INFO 9400 --- [http-nio-8080-exec-4] com.foreseers.tj.action.UserMatAction    : 没有使用过擦子，不能查看清晰头像
2019-04-26 10:26:55.963 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 10:26:55.963 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 252(Integer)
2019-04-26 10:26:55.964 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 10:26:55.964 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UsermatchMapper.usermatchQuery   : ==>  Preparing: select id, zhuid, congid, userscore, userdesc, commentgood, commentbad, characteristicgood, characteristicbad, mindscore, minddesc, bodyscore, bodydesc, characterscore, characterdesc, distance, spare, spare1, spare2 , commentdesc, characteristicdesc from dt_usermatch where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:26:55.965 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UsermatchMapper.usermatchQuery   : ==> Parameters: 252(Integer), 251(Integer), 251(Integer), 252(Integer)
2019-04-26 10:26:55.966 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UsermatchMapper.usermatchQuery   : <==      Total: 1
2019-04-26 10:26:55.966  INFO 9400 --- [http-nio-8080-exec-4] com.foreseers.tj.action.UserMatAction    : 返回的参数：[com.foreseers.tj.model.ReturnUser@41691a93, com.foreseers.tj.model.ReturnUser@66afc0c4, com.foreseers.tj.model.ReturnUser@1c658b4, com.foreseers.tj.model.ReturnUser@62a1585d, com.foreseers.tj.model.ReturnUser@6b957b18]
2019-04-26 10:26:56.723  INFO 9400 --- [http-nio-8080-exec-6] c.foreseers.tj.action.UserFriendAction   : 进入修改用户好友相对应权限方法
2019-04-26 10:26:56.723  INFO 9400 --- [http-nio-8080-exec-6] c.foreseers.tj.action.UserFriendAction   : 请求参数：userid：251
2019-04-26 10:26:56.723  INFO 9400 --- [http-nio-8080-exec-6] c.foreseers.tj.action.UserFriendAction   : 请求参数：friendid：250
2019-04-26 10:26:56.724  INFO 9400 --- [http-nio-8080-exec-6] c.foreseers.tj.action.UserFriendAction   : 请求参数：lookhead：1
2019-04-26 10:26:56.724  INFO 9400 --- [http-nio-8080-exec-6] c.foreseers.tj.action.UserFriendAction   : 请求参数：sendpix：1
2019-04-26 10:26:56.724  INFO 9400 --- [http-nio-8080-exec-6] c.foreseers.tj.action.UserFriendAction   : 请求参数：lookimages：0
2019-04-26 10:26:56.725 DEBUG 9400 --- [http-nio-8080-exec-6] c.f.t.m.U.selectUserFriend               : ==>  Preparing: select id, user_id, friend_id, user_reation, firendtime, lookhead, sendpix, lookimages, spareint, spare, spare1 from user_friend where (user_id = ? and friend_id = ?) or (friend_id = ? AND user_id = ?) 
2019-04-26 10:26:56.725 DEBUG 9400 --- [http-nio-8080-exec-6] c.f.t.m.U.selectUserFriend               : ==> Parameters: 251(String), 250(String), 251(String), 250(String)
2019-04-26 10:26:56.726 DEBUG 9400 --- [http-nio-8080-exec-6] c.f.t.m.U.selectUserFriend               : <==      Total: 1
2019-04-26 10:26:56.727  INFO 9400 --- [http-nio-8080-exec-6] c.foreseers.tj.action.UserFriendAction   : userFriendUserFriend [Hash = 1699412510, id=35, userId=251, friendId=250, userReation=0, firendtime=2019-04-23 15:27:23, lookhead=1, sendpix=1, lookimages=0, spareint=null, spare=null, spare1=null, serialVersionUID=1]
2019-04-26 10:26:56.727  INFO 9400 --- [http-nio-8080-exec-6] c.foreseers.tj.action.UserFriendAction   : 存在好友关系
2019-04-26 10:26:56.727  INFO 9400 --- [http-nio-8080-exec-6] c.foreseers.tj.action.UserFriendAction   : 两人是好友
2019-04-26 10:26:56.727  INFO 9400 --- [http-nio-8080-exec-6] c.foreseers.tj.action.UserFriendAction   : map{uid=35, sendpix=1, lookimages=0, lookhead=1}
2019-04-26 10:26:56.728 DEBUG 9400 --- [http-nio-8080-exec-6] c.f.t.m.U.updateByPrimaryKeySelective    : ==>  Preparing: update user_friend SET lookhead = ?, sendpix = ?, lookimages = ? where id = ? 
2019-04-26 10:26:56.728 DEBUG 9400 --- [http-nio-8080-exec-6] c.f.t.m.U.updateByPrimaryKeySelective    : ==> Parameters: 1(Integer), 1(Integer), 0(Integer), 35(Integer)
2019-04-26 10:26:56.728 DEBUG 9400 --- [http-nio-8080-exec-6] c.f.t.m.U.updateByPrimaryKeySelective    : <==    Updates: 1
2019-04-26 10:26:56.732  INFO 9400 --- [http-nio-8080-exec-6] c.foreseers.tj.action.UserFriendAction   : resultsuccess
2019-04-26 10:27:01.570  INFO 9400 --- [http-nio-8080-exec-4] c.foreseers.tj.action.UserFriendAction   : 进入获得好友用户名信息方法
2019-04-26 10:27:01.570  INFO 9400 --- [http-nio-8080-exec-4] c.foreseers.tj.action.UserFriendAction   : 请求参数：userid：251
2019-04-26 10:27:01.571  INFO 9400 --- [http-nio-8080-exec-6] c.foreseers.tj.action.UserFriendAction   : 进入查询用户好友位方法
2019-04-26 10:27:01.571  INFO 9400 --- [http-nio-8080-exec-6] c.foreseers.tj.action.UserFriendAction   : 请求参数：251
2019-04-26 10:27:01.571 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UserFriendMapper.selectlist      : ==>  Preparing: select friend_id from user_friend WHERE user_id = ? and user_reation = 0 UNION ALL SELECT user_id from user_friend WHERE friend_id = ? and user_reation = 0 ; 
2019-04-26 10:27:01.571 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UserFriendMapper.selectlist      : ==> Parameters: 251(String), 251(String)
2019-04-26 10:27:01.572 DEBUG 9400 --- [http-nio-8080-exec-6] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 10:27:01.572 DEBUG 9400 --- [http-nio-8080-exec-6] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 251(Integer)
2019-04-26 10:27:01.573 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UserFriendMapper.selectlist      : <==      Total: 2
2019-04-26 10:27:01.573 DEBUG 9400 --- [http-nio-8080-exec-6] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 10:27:01.573  INFO 9400 --- [http-nio-8080-exec-6] c.foreseers.tj.action.UserFriendAction   : 剩余好友位：18
2019-04-26 10:27:01.574 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.U.selectUserFriend               : ==>  Preparing: select id, user_id, friend_id, user_reation, firendtime, lookhead, sendpix, lookimages, spareint, spare, spare1 from user_friend where (user_id = ? and friend_id = ?) or (friend_id = ? AND user_id = ?) 
2019-04-26 10:27:01.574 DEBUG 9400 --- [http-nio-8080-exec-6] c.f.t.m.UserFriendMapper.selectlist      : ==>  Preparing: select friend_id from user_friend WHERE user_id = ? and user_reation = 0 UNION ALL SELECT user_id from user_friend WHERE friend_id = ? and user_reation = 0 ; 
2019-04-26 10:27:01.574 DEBUG 9400 --- [http-nio-8080-exec-6] c.f.t.m.UserFriendMapper.selectlist      : ==> Parameters: 251(String), 251(String)
2019-04-26 10:27:01.574 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.U.selectUserFriend               : ==> Parameters: 251(String), 184(String), 251(String), 184(String)
2019-04-26 10:27:01.575 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.U.selectUserFriend               : <==      Total: 1
2019-04-26 10:27:01.575 DEBUG 9400 --- [http-nio-8080-exec-6] c.f.t.m.UserFriendMapper.selectlist      : <==      Total: 2
2019-04-26 10:27:01.576  INFO 9400 --- [http-nio-8080-exec-6] c.foreseers.tj.action.UserFriendAction   : 已使用好友位：2
2019-04-26 10:27:01.576  INFO 9400 --- [http-nio-8080-exec-6] c.foreseers.tj.action.UserFriendAction   : 返回参数：{friendNums=20, usenums=2}
2019-04-26 10:27:01.576 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 10:27:01.576 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 184(Integer)
2019-04-26 10:27:01.577 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 10:27:01.578 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.U.selectUserFriend               : ==>  Preparing: select id, user_id, friend_id, user_reation, firendtime, lookhead, sendpix, lookimages, spareint, spare, spare1 from user_friend where (user_id = ? and friend_id = ?) or (friend_id = ? AND user_id = ?) 
2019-04-26 10:27:01.578 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.U.selectUserFriend               : ==> Parameters: 251(String), 250(String), 251(String), 250(String)
2019-04-26 10:27:01.579 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.U.selectUserFriend               : <==      Total: 1
2019-04-26 10:27:01.580 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 10:27:01.580 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 250(Integer)
2019-04-26 10:27:01.583 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 10:27:01.584  INFO 9400 --- [http-nio-8080-exec-4] c.foreseers.tj.action.UserFriendAction   : 返回值：[{userid=184, userhead=http://192.168.1.73:8080/184/magazine-unlock-01-2.3.1320-_D4C2962233745AAB4EC3C5C1C7C0E001.jpg, username=郑皓}, {userid=250, userhead=http://192.168.1.73:8080/250/magazine-unlock-01-2.3.1320-_F05D75BC727D6C92ED978B9212376471.jpg, username=哦哦哦}]
2019-04-26 10:27:05.836  INFO 9400 --- [http-nio-8080-exec-10] c.foreseers.tj.action.UserCanumsAction   : 获取用户的擦字子数方法
2019-04-26 10:27:05.837 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.U.selectByUserKey                : ==>  Preparing: select id, userid, everyday, vipeveryday, nums, updated, buynums, countnums, spare, spare1, spareint from user_canums where userid = ? 
2019-04-26 10:27:05.837 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.U.selectByUserKey                : ==> Parameters: 251(Integer)
2019-04-26 10:27:05.838 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.U.selectByUserKey                : <==      Total: 1
2019-04-26 10:27:34.007  INFO 9400 --- [http-nio-8080-exec-3] c.foreseers.tj.action.UserFriendAction   : 进入查询用户好友位方法
2019-04-26 10:27:34.007  INFO 9400 --- [http-nio-8080-exec-3] c.foreseers.tj.action.UserFriendAction   : 请求参数：251
2019-04-26 10:27:34.007  INFO 9400 --- [http-nio-8080-exec-7] c.foreseers.tj.action.UserFriendAction   : 进入获得好友用户名信息方法
2019-04-26 10:27:34.007  INFO 9400 --- [http-nio-8080-exec-7] c.foreseers.tj.action.UserFriendAction   : 请求参数：userid：251
2019-04-26 10:27:34.008 DEBUG 9400 --- [http-nio-8080-exec-7] c.f.t.m.UserFriendMapper.selectlist      : ==>  Preparing: select friend_id from user_friend WHERE user_id = ? and user_reation = 0 UNION ALL SELECT user_id from user_friend WHERE friend_id = ? and user_reation = 0 ; 
2019-04-26 10:27:34.008 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 10:27:34.008 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 251(Integer)
2019-04-26 10:27:34.008 DEBUG 9400 --- [http-nio-8080-exec-7] c.f.t.m.UserFriendMapper.selectlist      : ==> Parameters: 251(String), 251(String)
2019-04-26 10:27:34.009 DEBUG 9400 --- [http-nio-8080-exec-7] c.f.t.m.UserFriendMapper.selectlist      : <==      Total: 2
2019-04-26 10:27:34.009 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 10:27:34.009 DEBUG 9400 --- [http-nio-8080-exec-7] c.f.t.m.U.selectUserFriend               : ==>  Preparing: select id, user_id, friend_id, user_reation, firendtime, lookhead, sendpix, lookimages, spareint, spare, spare1 from user_friend where (user_id = ? and friend_id = ?) or (friend_id = ? AND user_id = ?) 
2019-04-26 10:27:34.009  INFO 9400 --- [http-nio-8080-exec-3] c.foreseers.tj.action.UserFriendAction   : 剩余好友位：18
2019-04-26 10:27:34.010 DEBUG 9400 --- [http-nio-8080-exec-7] c.f.t.m.U.selectUserFriend               : ==> Parameters: 251(String), 184(String), 251(String), 184(String)
2019-04-26 10:27:34.010 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.UserFriendMapper.selectlist      : ==>  Preparing: select friend_id from user_friend WHERE user_id = ? and user_reation = 0 UNION ALL SELECT user_id from user_friend WHERE friend_id = ? and user_reation = 0 ; 
2019-04-26 10:27:34.010 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.UserFriendMapper.selectlist      : ==> Parameters: 251(String), 251(String)
2019-04-26 10:27:34.010 DEBUG 9400 --- [http-nio-8080-exec-7] c.f.t.m.U.selectUserFriend               : <==      Total: 1
2019-04-26 10:27:34.010 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.UserFriendMapper.selectlist      : <==      Total: 2
2019-04-26 10:27:34.011 DEBUG 9400 --- [http-nio-8080-exec-7] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 10:27:34.011  INFO 9400 --- [http-nio-8080-exec-3] c.foreseers.tj.action.UserFriendAction   : 已使用好友位：2
2019-04-26 10:27:34.011  INFO 9400 --- [http-nio-8080-exec-3] c.foreseers.tj.action.UserFriendAction   : 返回参数：{friendNums=20, usenums=2}
2019-04-26 10:27:34.011 DEBUG 9400 --- [http-nio-8080-exec-7] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 184(Integer)
2019-04-26 10:27:34.012 DEBUG 9400 --- [http-nio-8080-exec-7] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 10:27:34.012 DEBUG 9400 --- [http-nio-8080-exec-7] c.f.t.m.U.selectUserFriend               : ==>  Preparing: select id, user_id, friend_id, user_reation, firendtime, lookhead, sendpix, lookimages, spareint, spare, spare1 from user_friend where (user_id = ? and friend_id = ?) or (friend_id = ? AND user_id = ?) 
2019-04-26 10:27:34.012 DEBUG 9400 --- [http-nio-8080-exec-7] c.f.t.m.U.selectUserFriend               : ==> Parameters: 251(String), 250(String), 251(String), 250(String)
2019-04-26 10:27:34.013 DEBUG 9400 --- [http-nio-8080-exec-7] c.f.t.m.U.selectUserFriend               : <==      Total: 1
2019-04-26 10:27:34.013 DEBUG 9400 --- [http-nio-8080-exec-7] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 10:27:34.014 DEBUG 9400 --- [http-nio-8080-exec-7] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 250(Integer)
2019-04-26 10:27:34.014 DEBUG 9400 --- [http-nio-8080-exec-7] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 10:27:34.015  INFO 9400 --- [http-nio-8080-exec-7] c.foreseers.tj.action.UserFriendAction   : 返回值：[{userid=184, userhead=http://192.168.1.73:8080/184/magazine-unlock-01-2.3.1320-_D4C2962233745AAB4EC3C5C1C7C0E001.jpg, username=郑皓}, {userid=250, userhead=http://192.168.1.73:8080/250/magazine-unlock-01-2.3.1320-_F05D75BC727D6C92ED978B9212376471.jpg, username=哦哦哦}]
2019-04-26 10:27:36.361  INFO 9400 --- [http-nio-8080-exec-8] c.foreseers.tj.action.UserCanumsAction   : 获取用户的擦字子数方法
2019-04-26 10:27:36.361 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.U.selectByUserKey                : ==>  Preparing: select id, userid, everyday, vipeveryday, nums, updated, buynums, countnums, spare, spare1, spareint from user_canums where userid = ? 
2019-04-26 10:27:36.362 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.U.selectByUserKey                : ==> Parameters: 251(Integer)
2019-04-26 10:27:36.362 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.U.selectByUserKey                : <==      Total: 1
2019-04-26 10:27:37.551  INFO 9400 --- [http-nio-8080-exec-5] com.foreseers.tj.action.UserAction       : 进入个人中心
2019-04-26 10:27:37.551  INFO 9400 --- [http-nio-8080-exec-5] com.foreseers.tj.action.UserAction       : 请求参数：userid251
2019-04-26 10:27:37.552 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 10:27:37.552 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 251(Integer)
2019-04-26 10:27:37.553 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 10:27:37.555 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.queryByUseridlist              : ==>  Preparing: select id, userid, image, updated, facebookid, imagename, spare, spareint from user_image where userid = ? 
2019-04-26 10:27:37.556 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.queryByUseridlist              : ==> Parameters: 251(Integer)
2019-04-26 10:27:37.557 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.queryByUseridlist              : <==      Total: 3
2019-04-26 10:27:37.560 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.LifebookMapper.lifebookSelf      : ==>  Preparing: select id, userid, name, gender, date, time, isLeap, lunaryear, lunarmonth, lunarday, numerology, numerologymatch, fiveElements, horoscope, horoscopeid, horoscopename, horoscopeguardPlanets, horoscopeguardPlanetsDesc, horoscopeguardGod, horoscopeguardAngel, horoscopeguardCrystal, horoscopematch, zodiac, zodiacid, zodiacname, zodiacguardBuddha, zodiacdesc, zodiacmatch, bazi, bazimatch, star, starmatch, ziwei, ziweimatch, created, updated, status, spareint from dt_lifebook where userid = ? and spareint = 1; 
2019-04-26 10:27:37.560 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.LifebookMapper.lifebookSelf      : ==> Parameters: 251(Integer)
2019-04-26 10:27:37.564 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.LifebookMapper.lifebookSelf      : <==      Total: 1
2019-04-26 10:27:37.569  INFO 9400 --- [http-nio-8080-exec-5] com.foreseers.tj.action.UserAction       : 返回的参数：ReturnImage [countnum=3, listimage=[http://192.168.1.73:8080/251/20190425100706345755.jpg, http://192.168.1.73:8080/251/20190425100742606270.jpg, http://192.168.1.73:8080/251/20190425114903981479.jpg], age=0, vipday=0, lifeuserid=137]
2019-04-26 10:27:41.295 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.L.selectByPrimaryKey             : ==>  Preparing: select id, userid, name, gender, date, time, isLeap, lunaryear, lunarmonth, lunarday, numerology, numerologymatch, fiveElements, horoscope, horoscopeid, horoscopename, horoscopeguardPlanets, horoscopeguardPlanetsDesc, horoscopeguardGod, horoscopeguardAngel, horoscopeguardCrystal, horoscopematch, zodiac, zodiacid, zodiacname, zodiacguardBuddha, zodiacdesc, zodiacmatch, bazi, bazimatch, star, starmatch, ziwei, ziweimatch, created, updated, status, spareint , horoscopemyth from dt_lifebook where id = ? 
2019-04-26 10:27:41.295 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.L.selectByPrimaryKey             : ==> Parameters: 137(Integer)
2019-04-26 10:27:41.296 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.L.selectByPrimaryKey             : <==      Total: 1
2019-04-26 10:27:42.450  INFO 9400 --- [http-nio-8080-exec-9] c.foreseers.tj.action.UserCanumsAction   : 获取用户的擦字子数方法
2019-04-26 10:27:42.451 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.U.selectByUserKey                : ==>  Preparing: select id, userid, everyday, vipeveryday, nums, updated, buynums, countnums, spare, spare1, spareint from user_canums where userid = ? 
2019-04-26 10:27:42.451 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.U.selectByUserKey                : ==> Parameters: 251(Integer)
2019-04-26 10:27:42.452 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.U.selectByUserKey                : <==      Total: 1
2019-04-26 10:27:44.141  INFO 9400 --- [http-nio-8080-exec-10] c.f.tj.action.UserLookHistoryAction      : 进入展示谁看过我列表
2019-04-26 10:27:44.141  INFO 9400 --- [http-nio-8080-exec-10] c.f.tj.action.UserLookHistoryAction      : 请求参数：userid251
2019-04-26 10:27:44.141  INFO 9400 --- [http-nio-8080-exec-3] c.f.tj.action.UserCaHistoryAction        : 进入谁擦过我好友列表
2019-04-26 10:27:44.142  INFO 9400 --- [http-nio-8080-exec-3] c.f.tj.action.UserCaHistoryAction        : 请求参数：caid251
2019-04-26 10:27:44.142 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.U.selectByUserid                 : ==>  Preparing: select id, userid, lookid, looktime, lookupdated, spare, spareint from user_look_history where lookid = ? 
2019-04-26 10:27:44.142 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.U.selectByUserid                 : ==> Parameters: 251(Integer)
2019-04-26 10:27:44.142 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.U.userCaHistoryService           : ==>  Preparing: select id, userid, caid, usertime, userupdated, spare, spareint from user_ca_history where caid = ?; 
2019-04-26 10:27:44.142 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.U.userCaHistoryService           : ==> Parameters: 251(Integer)
2019-04-26 10:27:44.143 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.U.userCaHistoryService           : <==      Total: 1
2019-04-26 10:27:44.143 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.U.selectByUserid                 : <==      Total: 3
2019-04-26 10:27:44.144  INFO 9400 --- [http-nio-8080-exec-10] c.f.t.s.impl.UserLookHistoryServiceImpl  : UserLookHistorys:[UserLookHistory [Hash = 2001948199, id=93, userid=184, lookid=251, looktime=2019-04-22, lookupdated=Mon Apr 22 11:43:52 CST 2019, spare=null, spareint=null, serialVersionUID=1], UserLookHistory [Hash = -1232319097, id=96, userid=250, lookid=251, looktime=2019-04-23, lookupdated=Tue Apr 23 15:16:32 CST 2019, spare=null, spareint=null, serialVersionUID=1], UserLookHistory [Hash = 1124856066, id=99, userid=256, lookid=251, looktime=2019-04-25, lookupdated=Thu Apr 25 10:35:20 CST 2019, spare=null, spareint=null, serialVersionUID=1]]
2019-04-26 10:27:44.144  INFO 9400 --- [http-nio-8080-exec-3] c.f.tj.action.UserCaHistoryAction        : [UserCaHistory [Hash = -62337590, id=3, userid=256, caid=251, usertime=2019-04-25, userupdated=Thu Apr 25 11:17:07 CST 2019, spare=null, spareint=null, serialVersionUID=1]]
2019-04-26 10:27:44.144  INFO 9400 --- [http-nio-8080-exec-3] c.f.tj.action.UserCaHistoryAction        : 好友id:256
2019-04-26 10:27:44.144 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 10:27:44.144 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 184(Integer)
2019-04-26 10:27:44.145 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 10:27:44.145 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 256(Integer)
2019-04-26 10:27:44.146 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 10:27:44.146 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 10:27:44.147 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.UsermatchMapper.usermatchQuery   : ==>  Preparing: select id, zhuid, congid, userscore, userdesc, commentgood, commentbad, characteristicgood, characteristicbad, mindscore, minddesc, bodyscore, bodydesc, characterscore, characterdesc, distance, spare, spare1, spare2 , commentdesc, characteristicdesc from dt_usermatch where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:27:44.147 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.UsermatchMapper.usermatchQuery   : ==> Parameters: 251(Integer), 256(Integer), 256(Integer), 251(Integer)
2019-04-26 10:27:44.147 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UsermatchMapper.usermatchQuery   : ==>  Preparing: select id, zhuid, congid, userscore, userdesc, commentgood, commentbad, characteristicgood, characteristicbad, mindscore, minddesc, bodyscore, bodydesc, characterscore, characterdesc, distance, spare, spare1, spare2 , commentdesc, characteristicdesc from dt_usermatch where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:27:44.147 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UsermatchMapper.usermatchQuery   : ==> Parameters: 251(Integer), 184(Integer), 184(Integer), 251(Integer)
2019-04-26 10:27:44.147 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.UsermatchMapper.usermatchQuery   : <==      Total: 1
2019-04-26 10:27:44.148 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UsermatchMapper.usermatchQuery   : <==      Total: 1
2019-04-26 10:27:44.148 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.U.selectUserFriend               : ==>  Preparing: select id, user_id, friend_id, user_reation, firendtime, lookhead, sendpix, lookimages, spareint, spare, spare1 from user_friend where (user_id = ? and friend_id = ?) or (friend_id = ? AND user_id = ?) 
2019-04-26 10:27:44.149 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.U.selectUserFriend               : ==> Parameters: 251(String), 256(String), 251(String), 256(String)
2019-04-26 10:27:44.149 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.U.selectUserFriend               : ==>  Preparing: select id, user_id, friend_id, user_reation, firendtime, lookhead, sendpix, lookimages, spareint, spare, spare1 from user_friend where (user_id = ? and friend_id = ?) or (friend_id = ? AND user_id = ?) 
2019-04-26 10:27:44.149 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.U.selectUserFriend               : ==> Parameters: 251(String), 184(String), 251(String), 184(String)
2019-04-26 10:27:44.149 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.U.selectUserFriend               : <==      Total: 0
2019-04-26 10:27:44.150 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.U.selectUserFriend               : <==      Total: 1
2019-04-26 10:27:44.150 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.U.selectByUserCaHistory          : ==>  Preparing: select id, userid, caid, usertime, userupdated, spare, spareint from user_ca_history where userid = ? and caid = ?; 
2019-04-26 10:27:44.150 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.U.selectByUserCaHistory          : ==> Parameters: 251(Integer), 256(Integer)
2019-04-26 10:27:44.150 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.U.selectByUserCaHistory          : <==      Total: 0
2019-04-26 10:27:44.150  INFO 9400 --- [http-nio-8080-exec-10] c.f.t.s.impl.UserLookHistoryServiceImpl  : usermatchWithBLOBsUsermatchWithBLOBs [Hash = -568070899, commentdesc=你們倆都擁有坦率的個性，而且TA還蠻浪漫的，每天的甜蜜短訊絕對是指定動作唷～ 不過跟這種多情的人在一起還蠻有壓力的，你必須努力達到TA心目中的要求，才能維持關係，否則只好不斷提防第三者,,,,,, 說真的，你們是比較適合做朋友的一對。, characteristicdesc=· 你總是心太軟，心太軟
· 做事待人很會做表面功夫
· 人緣好，朋友多
, serialVersionUID=1]
2019-04-26 10:27:44.150  INFO 9400 --- [http-nio-8080-exec-10] c.f.t.s.impl.UserLookHistoryServiceImpl  : map{head=http://192.168.1.73:8080/184/magazine-unlock-01-2.3.1320-_D4C2962233745AAB4EC3C5C1C7C0E001.jpg, ziwei=貪狼, sex=M, userscore=56, time=2019-04-22, userid=184, age=10, DESC=努力維繫, username=郑皓}
2019-04-26 10:27:44.151  INFO 9400 --- [http-nio-8080-exec-10] c.f.t.s.impl.UserLookHistoryServiceImpl  : returnlist:[[{head=http://192.168.1.73:8080/184/magazine-unlock-01-2.3.1320-_D4C2962233745AAB4EC3C5C1C7C0E001.jpg, ziwei=貪狼, sex=M, userscore=56, time=2019-04-22, userid=184, age=10, DESC=努力維繫, username=郑皓}]]
2019-04-26 10:27:44.151  INFO 9400 --- [http-nio-8080-exec-3] c.f.tj.action.UserCaHistoryAction        : usermatchWithBLOBsUsermatchWithBLOBs [Hash = -2045538152, commentdesc=你們倆的都是大大咧咧的人，性格非常相似，喜歡、不喜歡都直話直說，從不拐彎抹角，彼此間沒有甚麼猜忌，就像好兄弟一般，能一起打電動、看球賽、把酒當歌,,,,,, 雖說這樣子的談戀愛模式比較「非主流」，卻是非常舒適的關係，不過偶爾製造一點驚喜浪漫給予對方也是必須的，懂嗎？, characteristicdesc=· 旺財
· 腦筋轉數快
· 口頭禪：我這樣說是為你好
· 膽小如鼠，沒膽做大事
, serialVersionUID=1]
2019-04-26 10:27:44.151  INFO 9400 --- [http-nio-8080-exec-3] c.f.tj.action.UserCaHistoryAction        : map{head=http://192.168.1.73:8080/256/20190425102658168538.jpg, ziwei=太陽, sex=M, userscore=77, time=2019-04-25, userid=256, age=18, DESC=一見如故, username=艾灸}
2019-04-26 10:27:44.151  INFO 9400 --- [http-nio-8080-exec-3] c.f.tj.action.UserCaHistoryAction        : 返回的参数：[[{head=http://192.168.1.73:8080/256/20190425102658168538.jpg, ziwei=太陽, sex=M, userscore=77, time=2019-04-25, userid=256, age=18, DESC=一見如故, username=艾灸}]]
2019-04-26 10:27:44.151 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 10:27:44.151 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 250(Integer)
2019-04-26 10:27:44.152 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 10:27:44.153 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UsermatchMapper.usermatchQuery   : ==>  Preparing: select id, zhuid, congid, userscore, userdesc, commentgood, commentbad, characteristicgood, characteristicbad, mindscore, minddesc, bodyscore, bodydesc, characterscore, characterdesc, distance, spare, spare1, spare2 , commentdesc, characteristicdesc from dt_usermatch where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:27:44.154 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UsermatchMapper.usermatchQuery   : ==> Parameters: 251(Integer), 250(Integer), 250(Integer), 251(Integer)
2019-04-26 10:27:44.155 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UsermatchMapper.usermatchQuery   : <==      Total: 1
2019-04-26 10:27:44.156 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.U.selectUserFriend               : ==>  Preparing: select id, user_id, friend_id, user_reation, firendtime, lookhead, sendpix, lookimages, spareint, spare, spare1 from user_friend where (user_id = ? and friend_id = ?) or (friend_id = ? AND user_id = ?) 
2019-04-26 10:27:44.156 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.U.selectUserFriend               : ==> Parameters: 251(String), 250(String), 251(String), 250(String)
2019-04-26 10:27:44.157 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.U.selectUserFriend               : <==      Total: 1
2019-04-26 10:27:44.157  INFO 9400 --- [http-nio-8080-exec-10] c.f.t.s.impl.UserLookHistoryServiceImpl  : usermatchWithBLOBsUsermatchWithBLOBs [Hash = -1390939433, commentdesc=你們兩個性格感覺是相似，都是熱情有動力的人，而他／她性格爽朗率直，看似很配，但其實又有一點大不同。因為你們一個做事對事不對人，另一個雖然會對事但也會兼顧人，所以處事對人方面就有不同的做法，人際的關係也不會一樣。你們假若一起，都會因為好多不同大小事情而吵架，而他／她爽直的對答想把場合控制在手，但對著你常常心直口快，說話不想後果的人來說，爭執小不免。還有時你會熱情很開心的找他說話聊天，但他／她就對你冷冷淡淡的，好像一團火撞上冰塊一樣，什麼熱情都會沒了吧，誰會喜歡這種感覺，剩下的可能只有怨恨，為什麼你這樣對我！, characteristicdesc=· 什麼事情都自己做才安心
· 想到什麼就做什麼，腦袋都沒想
· 不太喜歡聽別人意見
· 喜歡自己一個，脾氣硬，不喜歡讓步
, serialVersionUID=1]
2019-04-26 10:27:44.157  INFO 9400 --- [http-nio-8080-exec-10] c.f.t.s.impl.UserLookHistoryServiceImpl  : map{head=http://192.168.1.73:8080/250/magazine-unlock-01-2.3.1320-_F05D75BC727D6C92ED978B9212376471.jpg, ziwei=七殺, sex=F, userscore=71, time=2019-04-23, userid=250, age=17, DESC=郎才女貌, username=哦哦哦}
2019-04-26 10:27:44.157  INFO 9400 --- [http-nio-8080-exec-10] c.f.t.s.impl.UserLookHistoryServiceImpl  : returnlist:[[{head=http://192.168.1.73:8080/184/magazine-unlock-01-2.3.1320-_D4C2962233745AAB4EC3C5C1C7C0E001.jpg, ziwei=貪狼, sex=M, userscore=56, time=2019-04-22, userid=184, age=10, DESC=努力維繫, username=郑皓}], [{head=http://192.168.1.73:8080/250/magazine-unlock-01-2.3.1320-_F05D75BC727D6C92ED978B9212376471.jpg, ziwei=七殺, sex=F, userscore=71, time=2019-04-23, userid=250, age=17, DESC=郎才女貌, username=哦哦哦}]]
2019-04-26 10:27:44.158 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 10:27:44.158 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 256(Integer)
2019-04-26 10:27:44.159 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 10:27:44.160 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UsermatchMapper.usermatchQuery   : ==>  Preparing: select id, zhuid, congid, userscore, userdesc, commentgood, commentbad, characteristicgood, characteristicbad, mindscore, minddesc, bodyscore, bodydesc, characterscore, characterdesc, distance, spare, spare1, spare2 , commentdesc, characteristicdesc from dt_usermatch where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:27:44.160 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UsermatchMapper.usermatchQuery   : ==> Parameters: 251(Integer), 256(Integer), 256(Integer), 251(Integer)
2019-04-26 10:27:44.161 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UsermatchMapper.usermatchQuery   : <==      Total: 1
2019-04-26 10:27:44.162 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.U.selectUserFriend               : ==>  Preparing: select id, user_id, friend_id, user_reation, firendtime, lookhead, sendpix, lookimages, spareint, spare, spare1 from user_friend where (user_id = ? and friend_id = ?) or (friend_id = ? AND user_id = ?) 
2019-04-26 10:27:44.162 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.U.selectUserFriend               : ==> Parameters: 251(String), 256(String), 251(String), 256(String)
2019-04-26 10:27:44.163 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.U.selectUserFriend               : <==      Total: 0
2019-04-26 10:27:44.164 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.U.selectByUserCaHistory          : ==>  Preparing: select id, userid, caid, usertime, userupdated, spare, spareint from user_ca_history where userid = ? and caid = ?; 
2019-04-26 10:27:44.164 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.U.selectByUserCaHistory          : ==> Parameters: 251(Integer), 256(Integer)
2019-04-26 10:27:44.165 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.U.selectByUserCaHistory          : <==      Total: 0
2019-04-26 10:27:44.165  INFO 9400 --- [http-nio-8080-exec-10] c.f.t.s.impl.UserLookHistoryServiceImpl  : usermatchWithBLOBsUsermatchWithBLOBs [Hash = -2045538152, commentdesc=你們倆的都是大大咧咧的人，性格非常相似，喜歡、不喜歡都直話直說，從不拐彎抹角，彼此間沒有甚麼猜忌，就像好兄弟一般，能一起打電動、看球賽、把酒當歌,,,,,, 雖說這樣子的談戀愛模式比較「非主流」，卻是非常舒適的關係，不過偶爾製造一點驚喜浪漫給予對方也是必須的，懂嗎？, characteristicdesc=· 旺財
· 腦筋轉數快
· 口頭禪：我這樣說是為你好
· 膽小如鼠，沒膽做大事
, serialVersionUID=1]
2019-04-26 10:27:44.166  INFO 9400 --- [http-nio-8080-exec-10] c.f.t.s.impl.UserLookHistoryServiceImpl  : map{head=http://192.168.1.73:8080/256/20190425102658168538.jpg, ziwei=太陽, sex=M, userscore=77, time=2019-04-25, userid=256, age=18, DESC=一見如故, username=艾灸}
2019-04-26 10:27:44.166  INFO 9400 --- [http-nio-8080-exec-10] c.f.t.s.impl.UserLookHistoryServiceImpl  : returnlist:[[{head=http://192.168.1.73:8080/184/magazine-unlock-01-2.3.1320-_D4C2962233745AAB4EC3C5C1C7C0E001.jpg, ziwei=貪狼, sex=M, userscore=56, time=2019-04-22, userid=184, age=10, DESC=努力維繫, username=郑皓}], [{head=http://192.168.1.73:8080/250/magazine-unlock-01-2.3.1320-_F05D75BC727D6C92ED978B9212376471.jpg, ziwei=七殺, sex=F, userscore=71, time=2019-04-23, userid=250, age=17, DESC=郎才女貌, username=哦哦哦}], [{head=http://192.168.1.73:8080/256/20190425102658168538.jpg, ziwei=太陽, sex=M, userscore=77, time=2019-04-25, userid=256, age=18, DESC=一見如故, username=艾灸}]]
2019-04-26 10:27:44.166  INFO 9400 --- [http-nio-8080-exec-10] c.f.tj.action.UserLookHistoryAction      : 返回参数：[[{head=http://192.168.1.73:8080/184/magazine-unlock-01-2.3.1320-_D4C2962233745AAB4EC3C5C1C7C0E001.jpg, ziwei=貪狼, sex=M, userscore=56, time=2019-04-22, userid=184, age=10, DESC=努力維繫, username=郑皓}], [{head=http://192.168.1.73:8080/250/magazine-unlock-01-2.3.1320-_F05D75BC727D6C92ED978B9212376471.jpg, ziwei=七殺, sex=F, userscore=71, time=2019-04-23, userid=250, age=17, DESC=郎才女貌, username=哦哦哦}], [{head=http://192.168.1.73:8080/256/20190425102658168538.jpg, ziwei=太陽, sex=M, userscore=77, time=2019-04-25, userid=256, age=18, DESC=一見如故, username=艾灸}]]
2019-04-26 10:27:47.534  INFO 9400 --- [http-nio-8080-exec-8] c.foreseers.tj.action.UserCanumsAction   : 获取用户的擦字子数方法
2019-04-26 10:27:47.535 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.U.selectByUserKey                : ==>  Preparing: select id, userid, everyday, vipeveryday, nums, updated, buynums, countnums, spare, spare1, spareint from user_canums where userid = ? 
2019-04-26 10:27:47.535 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.U.selectByUserKey                : ==> Parameters: 251(Integer)
2019-04-26 10:27:47.536 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.U.selectByUserKey                : <==      Total: 1
2019-04-26 10:29:24.866 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 10:29:24.866 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 251(Integer)
2019-04-26 10:29:24.867 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 10:29:24.868 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.U.selectUserFriendList           : ==>  Preparing: select id, user_id, friend_id, user_reation, firendtime, lookhead, sendpix, lookimages, spareint, spare, spare1 from user_friend WHERE user_id = ? or friend_id = ?; 
2019-04-26 10:29:24.868 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.U.selectUserFriendList           : ==> Parameters: 251(String), 251(String)
2019-04-26 10:29:24.869 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.U.selectUserFriendList           : <==      Total: 2
2019-04-26 10:29:24.870  INFO 9400 --- [http-nio-8080-exec-8] c.f.t.s.impl.UserFriendServiceImpl       : 刚成为好友24小时，可以查看头像，和发送图片
2019-04-26 10:29:24.870 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.U.updateByPrimaryKeySelective    : ==>  Preparing: update user_friend SET lookhead = ?, sendpix = ? where id = ? 
2019-04-26 10:29:24.870 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.U.updateByPrimaryKeySelective    : ==> Parameters: 1(Integer), 1(Integer), 35(Integer)
2019-04-26 10:29:24.870 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.U.updateByPrimaryKeySelective    : <==    Updates: 1
2019-04-26 10:29:24.871  INFO 9400 --- [http-nio-8080-exec-8] c.f.t.s.impl.UserFriendServiceImpl       : 刚成为好友8小时，可以查看头像
2019-04-26 10:29:24.871 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.U.updateByPrimaryKeySelective    : ==>  Preparing: update user_friend SET lookhead = ? where id = ? 
2019-04-26 10:29:24.871 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.U.updateByPrimaryKeySelective    : ==> Parameters: 1(Integer), 35(Integer)
2019-04-26 10:29:24.871 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.U.updateByPrimaryKeySelective    : <==    Updates: 1
2019-04-26 10:29:24.878  INFO 9400 --- [http-nio-8080-exec-5] com.foreseers.tj.action.UserMatAction    : 进入推荐附近的人的方法
2019-04-26 10:29:24.878  INFO 9400 --- [http-nio-8080-exec-5] com.foreseers.tj.action.UserMatAction    : 请求参数：country:null
2019-04-26 10:29:24.878  INFO 9400 --- [http-nio-8080-exec-5] com.foreseers.tj.action.UserMatAction    : 请求参数：city:null
2019-04-26 10:29:24.878  INFO 9400 --- [http-nio-8080-exec-5] com.foreseers.tj.action.UserMatAction    : 请求参数：area:null
2019-04-26 10:29:24.878  INFO 9400 --- [http-nio-8080-exec-5] com.foreseers.tj.action.UserMatAction    : 请求参数：facebook:100002
2019-04-26 10:29:24.878  INFO 9400 --- [http-nio-8080-exec-5] com.foreseers.tj.action.UserMatAction    : 请求参数：经度:39.176924
2019-04-26 10:29:24.878  INFO 9400 --- [http-nio-8080-exec-5] com.foreseers.tj.action.UserMatAction    : 请求参数：纬度:117.133264
2019-04-26 10:29:24.878  INFO 9400 --- [http-nio-8080-exec-5] com.foreseers.tj.action.UserMatAction    : 请求参数：sex:
2019-04-26 10:29:24.878  INFO 9400 --- [http-nio-8080-exec-5] com.foreseers.tj.action.UserMatAction    : 请求参数：筛选条件年龄:12
2019-04-26 10:29:24.878  INFO 9400 --- [http-nio-8080-exec-5] com.foreseers.tj.action.UserMatAction    : 请求参数：筛选条件年龄:50
2019-04-26 10:29:24.878  INFO 9400 --- [http-nio-8080-exec-5] com.foreseers.tj.action.UserMatAction    : 请求参数：筛选条件距离:100
2019-04-26 10:29:24.879 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.updateByFaceIDSelective        : ==>  Preparing: update dt_user SET facebook = ?, lat = ?, lng = ? where facebook = ? 
2019-04-26 10:29:24.879 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.updateByFaceIDSelective        : ==> Parameters: 100002(String), 39.176924(Double), 117.133264(Double), 100002(String)
2019-04-26 10:29:24.879 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.updateByFaceIDSelective        : <==    Updates: 1
2019-04-26 10:29:24.880  INFO 9400 --- [http-nio-8080-exec-1] c.foreseers.tj.action.UserCanumsAction   : 获取用户的擦字子数方法
2019-04-26 10:29:24.881 DEBUG 9400 --- [http-nio-8080-exec-1] c.f.t.m.U.selectByUserKey                : ==>  Preparing: select id, userid, everyday, vipeveryday, nums, updated, buynums, countnums, spare, spare1, spareint from user_canums where userid = ? 
2019-04-26 10:29:24.881 DEBUG 9400 --- [http-nio-8080-exec-1] c.f.t.m.U.selectByUserKey                : ==> Parameters: 251(Integer)
2019-04-26 10:29:24.881  INFO 9400 --- [http-nio-8080-exec-5] com.foreseers.tj.action.UserMatAction    : 将个人信息更新到数据库
2019-04-26 10:29:24.881 DEBUG 9400 --- [http-nio-8080-exec-1] c.f.t.m.U.selectByUserKey                : <==      Total: 1
2019-04-26 10:29:24.882 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.tj.mapper.UserMapper.QueryUser       : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where facebook = ? 
2019-04-26 10:29:24.882 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.tj.mapper.UserMapper.QueryUser       : ==> Parameters: 100002(String)
2019-04-26 10:29:24.883 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.tj.mapper.UserMapper.QueryUser       : <==      Total: 1
2019-04-26 10:29:24.884  INFO 9400 --- [http-nio-8080-exec-2] c.foreseers.tj.action.UserCanumsAction   : 获取用户的擦字子数方法
2019-04-26 10:29:24.884 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.mapper.UserMapper.QueryUserByCity  : ==>  Preparing: select id from dt_user where reservedint >= ? and reservedint <= ? and id != ? 
2019-04-26 10:29:24.884 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.mapper.UserMapper.QueryUserByCity  : ==> Parameters: 12(Integer), 50(Integer), 251(Integer)
2019-04-26 10:29:24.884 DEBUG 9400 --- [http-nio-8080-exec-2] c.f.t.m.U.selectByUserKey                : ==>  Preparing: select id, userid, everyday, vipeveryday, nums, updated, buynums, countnums, spare, spare1, spareint from user_canums where userid = ? 
2019-04-26 10:29:24.884 DEBUG 9400 --- [http-nio-8080-exec-2] c.f.t.m.U.selectByUserKey                : ==> Parameters: 251(Integer)
2019-04-26 10:29:24.884 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.mapper.UserMapper.QueryUserByCity  : <==      Total: 4
2019-04-26 10:29:24.885  INFO 9400 --- [http-nio-8080-exec-5] com.foreseers.tj.action.UserMatAction    : idlist:[250, 254, 255, 256]
2019-04-26 10:29:24.885  INFO 9400 --- [http-nio-8080-exec-5] com.foreseers.tj.action.UserMatAction    : 通过筛选条件筛选用户
2019-04-26 10:29:24.885 DEBUG 9400 --- [http-nio-8080-exec-2] c.f.t.m.U.selectByUserKey                : <==      Total: 1
2019-04-26 10:29:24.885 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 10:29:24.885 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 250(Integer)
2019-04-26 10:29:24.886 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 10:29:24.887  INFO 9400 --- [http-nio-8080-exec-5] com.foreseers.tj.action.UserMatAction    : 经度：39.17696
2019-04-26 10:29:24.887  INFO 9400 --- [http-nio-8080-exec-5] com.foreseers.tj.action.UserMatAction    : 经度：117.133395
2019-04-26 10:29:24.887  INFO 9400 --- [http-nio-8080-exec-5] com.foreseers.tj.action.UserMatAction    : 距离：1
2019-04-26 10:29:24.888 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.updateByzhuidKeySelective      : ==>  Preparing: update dt_usermatch SET distance = ? where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:29:24.888 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.updateByzhuidKeySelective      : ==> Parameters: 1(Integer), 251(Integer), 250(Integer), 250(Integer), 251(Integer)
2019-04-26 10:29:24.888 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.updateByzhuidKeySelective      : <==    Updates: 1
2019-04-26 10:29:24.891  INFO 9400 --- [http-nio-8080-exec-5] com.foreseers.tj.action.UserMatAction    : 通过筛选条件筛选用户
2019-04-26 10:29:24.891 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 10:29:24.891 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 254(Integer)
2019-04-26 10:29:24.892 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 10:29:24.893  INFO 9400 --- [http-nio-8080-exec-5] com.foreseers.tj.action.UserMatAction    : 经度：39.17696
2019-04-26 10:29:24.893  INFO 9400 --- [http-nio-8080-exec-5] com.foreseers.tj.action.UserMatAction    : 经度：117.133395
2019-04-26 10:29:24.893  INFO 9400 --- [http-nio-8080-exec-5] com.foreseers.tj.action.UserMatAction    : 距离：1
2019-04-26 10:29:24.894 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.updateByzhuidKeySelective      : ==>  Preparing: update dt_usermatch SET distance = ? where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:29:24.894 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.updateByzhuidKeySelective      : ==> Parameters: 1(Integer), 251(Integer), 254(Integer), 254(Integer), 251(Integer)
2019-04-26 10:29:24.894 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.updateByzhuidKeySelective      : <==    Updates: 1
2019-04-26 10:29:24.896  INFO 9400 --- [http-nio-8080-exec-5] com.foreseers.tj.action.UserMatAction    : 通过筛选条件筛选用户
2019-04-26 10:29:24.897 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 10:29:24.897 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 255(Integer)
2019-04-26 10:29:24.898 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 10:29:24.898  INFO 9400 --- [http-nio-8080-exec-5] com.foreseers.tj.action.UserMatAction    : 经度：39.176995
2019-04-26 10:29:24.898  INFO 9400 --- [http-nio-8080-exec-5] com.foreseers.tj.action.UserMatAction    : 经度：117.133437
2019-04-26 10:29:24.898  INFO 9400 --- [http-nio-8080-exec-5] com.foreseers.tj.action.UserMatAction    : 距离：1
2019-04-26 10:29:24.899 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.updateByzhuidKeySelective      : ==>  Preparing: update dt_usermatch SET distance = ? where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:29:24.899 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.updateByzhuidKeySelective      : ==> Parameters: 1(Integer), 251(Integer), 255(Integer), 255(Integer), 251(Integer)
2019-04-26 10:29:24.900 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.updateByzhuidKeySelective      : <==    Updates: 1
2019-04-26 10:29:24.901  INFO 9400 --- [http-nio-8080-exec-5] com.foreseers.tj.action.UserMatAction    : 通过筛选条件筛选用户
2019-04-26 10:29:24.902 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 10:29:24.902 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 256(Integer)
2019-04-26 10:29:24.903 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 10:29:24.903  INFO 9400 --- [http-nio-8080-exec-5] com.foreseers.tj.action.UserMatAction    : 经度：39.176677
2019-04-26 10:29:24.903  INFO 9400 --- [http-nio-8080-exec-5] com.foreseers.tj.action.UserMatAction    : 经度：117.132802
2019-04-26 10:29:24.903  INFO 9400 --- [http-nio-8080-exec-5] com.foreseers.tj.action.UserMatAction    : 距离：1
2019-04-26 10:29:24.904 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.updateByzhuidKeySelective      : ==>  Preparing: update dt_usermatch SET distance = ? where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:29:24.904 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.updateByzhuidKeySelective      : ==> Parameters: 1(Integer), 251(Integer), 256(Integer), 256(Integer), 251(Integer)
2019-04-26 10:29:24.905 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.updateByzhuidKeySelective      : <==    Updates: 1
2019-04-26 10:29:24.915 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.tj.mapper.UserMapper.QueryUserByNUM  : ==>  Preparing: select id from (select * from dt_user where id != ? ORDER BY num desc LIMIT ? ) t ORDER BY RAND() LIMIT ?; 
2019-04-26 10:29:24.915 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.tj.mapper.UserMapper.QueryUserByNUM  : ==> Parameters: 251(Integer), 20(Integer), 2(Integer)
2019-04-26 10:29:24.916 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.tj.mapper.UserMapper.QueryUserByNUM  : <==      Total: 2
2019-04-26 10:29:24.917  INFO 9400 --- [http-nio-8080-exec-5] com.foreseers.tj.action.UserMatAction    : 推送的用户id为：252
2019-04-26 10:29:24.917 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 10:29:24.918 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 252(Integer)
2019-04-26 10:29:24.919 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 10:29:24.919  INFO 9400 --- [http-nio-8080-exec-5] com.foreseers.tj.action.UserMatAction    : 计算推送用户的距离：1
2019-04-26 10:29:24.919  INFO 9400 --- [http-nio-8080-exec-5] com.foreseers.tj.action.UserMatAction    : 重新计算推送的人距离
2019-04-26 10:29:24.920 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.updateByzhuidKeySelective      : ==>  Preparing: update dt_usermatch SET distance = ? where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:29:24.920 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.updateByzhuidKeySelective      : ==> Parameters: 1(Integer), 251(Integer), 252(Integer), 252(Integer), 251(Integer)
2019-04-26 10:29:24.920 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.updateByzhuidKeySelective      : <==    Updates: 1
2019-04-26 10:29:24.922 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UserDefriendMapper.getBlackList  : ==>  Preparing: select id, userid, blackid, defriendtime, updated, spare, spareint from user_defriend where userid = ? 
2019-04-26 10:29:24.923 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UserDefriendMapper.getBlackList  : ==> Parameters: 251(Integer)
2019-04-26 10:29:24.923 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UserDefriendMapper.getBlackList  : <==      Total: 0
2019-04-26 10:29:24.923  INFO 9400 --- [http-nio-8080-exec-5] com.foreseers.tj.action.UserMatAction    : 查询黑名单列表：blacks：[]
2019-04-26 10:29:24.923 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UsermatchMapper.usermatchQuery   : ==>  Preparing: select id, zhuid, congid, userscore, userdesc, commentgood, commentbad, characteristicgood, characteristicbad, mindscore, minddesc, bodyscore, bodydesc, characterscore, characterdesc, distance, spare, spare1, spare2 , commentdesc, characteristicdesc from dt_usermatch where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:29:24.923 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UsermatchMapper.usermatchQuery   : ==> Parameters: 251(Integer), 250(Integer), 250(Integer), 251(Integer)
2019-04-26 10:29:24.924 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UsermatchMapper.usermatchQuery   : <==      Total: 1
2019-04-26 10:29:24.925 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UsermatchMapper.usermatchQuery   : ==>  Preparing: select id, zhuid, congid, userscore, userdesc, commentgood, commentbad, characteristicgood, characteristicbad, mindscore, minddesc, bodyscore, bodydesc, characterscore, characterdesc, distance, spare, spare1, spare2 , commentdesc, characteristicdesc from dt_usermatch where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:29:24.925 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UsermatchMapper.usermatchQuery   : ==> Parameters: 251(Integer), 254(Integer), 254(Integer), 251(Integer)
2019-04-26 10:29:24.927 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UsermatchMapper.usermatchQuery   : <==      Total: 1
2019-04-26 10:29:24.928 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UsermatchMapper.usermatchQuery   : ==>  Preparing: select id, zhuid, congid, userscore, userdesc, commentgood, commentbad, characteristicgood, characteristicbad, mindscore, minddesc, bodyscore, bodydesc, characterscore, characterdesc, distance, spare, spare1, spare2 , commentdesc, characteristicdesc from dt_usermatch where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:29:24.928 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UsermatchMapper.usermatchQuery   : ==> Parameters: 251(Integer), 255(Integer), 255(Integer), 251(Integer)
2019-04-26 10:29:24.929 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UsermatchMapper.usermatchQuery   : <==      Total: 1
2019-04-26 10:29:24.930 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UsermatchMapper.usermatchQuery   : ==>  Preparing: select id, zhuid, congid, userscore, userdesc, commentgood, commentbad, characteristicgood, characteristicbad, mindscore, minddesc, bodyscore, bodydesc, characterscore, characterdesc, distance, spare, spare1, spare2 , commentdesc, characteristicdesc from dt_usermatch where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:29:24.930 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UsermatchMapper.usermatchQuery   : ==> Parameters: 251(Integer), 256(Integer), 256(Integer), 251(Integer)
2019-04-26 10:29:24.931 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UsermatchMapper.usermatchQuery   : <==      Total: 1
2019-04-26 10:29:24.931 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UsermatchMapper.usermatchQuery   : ==>  Preparing: select id, zhuid, congid, userscore, userdesc, commentgood, commentbad, characteristicgood, characteristicbad, mindscore, minddesc, bodyscore, bodydesc, characterscore, characterdesc, distance, spare, spare1, spare2 , commentdesc, characteristicdesc from dt_usermatch where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:29:24.931 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UsermatchMapper.usermatchQuery   : ==> Parameters: 251(Integer), 252(Integer), 252(Integer), 251(Integer)
2019-04-26 10:29:24.932 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UsermatchMapper.usermatchQuery   : <==      Total: 1
2019-04-26 10:29:24.932  INFO 9400 --- [http-nio-8080-exec-5] com.foreseers.tj.action.UserMatAction    : 命书用户ids:[]
2019-04-26 10:29:24.932  INFO 9400 --- [http-nio-8080-exec-5] com.foreseers.tj.action.UserMatAction    : 判断是否返回清晰头像
2019-04-26 10:29:24.933 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.selectUserFriend               : ==>  Preparing: select id, user_id, friend_id, user_reation, firendtime, lookhead, sendpix, lookimages, spareint, spare, spare1 from user_friend where (user_id = ? and friend_id = ?) or (friend_id = ? AND user_id = ?) 
2019-04-26 10:29:24.933 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.selectUserFriend               : ==> Parameters: 251(String), 250(String), 251(String), 250(String)
2019-04-26 10:29:24.933 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.selectUserFriend               : <==      Total: 1
2019-04-26 10:29:24.934  INFO 9400 --- [http-nio-8080-exec-5] com.foreseers.tj.action.UserMatAction    : 两人是好友关系，切可以返回清晰头像
2019-04-26 10:29:24.934 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 10:29:24.934 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 250(Integer)
2019-04-26 10:29:24.935 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 10:29:24.936 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UsermatchMapper.usermatchQuery   : ==>  Preparing: select id, zhuid, congid, userscore, userdesc, commentgood, commentbad, characteristicgood, characteristicbad, mindscore, minddesc, bodyscore, bodydesc, characterscore, characterdesc, distance, spare, spare1, spare2 , commentdesc, characteristicdesc from dt_usermatch where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:29:24.936 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UsermatchMapper.usermatchQuery   : ==> Parameters: 250(Integer), 251(Integer), 251(Integer), 250(Integer)
2019-04-26 10:29:24.937 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UsermatchMapper.usermatchQuery   : <==      Total: 1
2019-04-26 10:29:24.938 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.selectUserFriend               : ==>  Preparing: select id, user_id, friend_id, user_reation, firendtime, lookhead, sendpix, lookimages, spareint, spare, spare1 from user_friend where (user_id = ? and friend_id = ?) or (friend_id = ? AND user_id = ?) 
2019-04-26 10:29:24.938 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.selectUserFriend               : ==> Parameters: 251(String), 254(String), 251(String), 254(String)
2019-04-26 10:29:24.938 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.selectUserFriend               : <==      Total: 0
2019-04-26 10:29:24.939  INFO 9400 --- [http-nio-8080-exec-5] com.foreseers.tj.action.UserMatAction    : 两人不是好友关系，或者成为好友时间不够，判断是否使用过擦子
2019-04-26 10:29:24.939 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.selectByUserCaHistory          : ==>  Preparing: select id, userid, caid, usertime, userupdated, spare, spareint from user_ca_history where userid = ? and caid = ?; 
2019-04-26 10:29:24.939 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.selectByUserCaHistory          : ==> Parameters: 251(Integer), 254(Integer)
2019-04-26 10:29:24.940 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.selectByUserCaHistory          : <==      Total: 0
2019-04-26 10:29:24.940  INFO 9400 --- [http-nio-8080-exec-5] com.foreseers.tj.action.UserMatAction    : 没有使用过擦子，不能查看清晰头像
2019-04-26 10:29:24.940 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 10:29:24.941 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 254(Integer)
2019-04-26 10:29:24.941 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 10:29:24.942 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UsermatchMapper.usermatchQuery   : ==>  Preparing: select id, zhuid, congid, userscore, userdesc, commentgood, commentbad, characteristicgood, characteristicbad, mindscore, minddesc, bodyscore, bodydesc, characterscore, characterdesc, distance, spare, spare1, spare2 , commentdesc, characteristicdesc from dt_usermatch where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:29:24.942 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UsermatchMapper.usermatchQuery   : ==> Parameters: 254(Integer), 251(Integer), 251(Integer), 254(Integer)
2019-04-26 10:29:24.943 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UsermatchMapper.usermatchQuery   : <==      Total: 1
2019-04-26 10:29:24.943 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.selectUserFriend               : ==>  Preparing: select id, user_id, friend_id, user_reation, firendtime, lookhead, sendpix, lookimages, spareint, spare, spare1 from user_friend where (user_id = ? and friend_id = ?) or (friend_id = ? AND user_id = ?) 
2019-04-26 10:29:24.944 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.selectUserFriend               : ==> Parameters: 251(String), 255(String), 251(String), 255(String)
2019-04-26 10:29:24.944 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.selectUserFriend               : <==      Total: 0
2019-04-26 10:29:24.944  INFO 9400 --- [http-nio-8080-exec-5] com.foreseers.tj.action.UserMatAction    : 两人不是好友关系，或者成为好友时间不够，判断是否使用过擦子
2019-04-26 10:29:24.945 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.selectByUserCaHistory          : ==>  Preparing: select id, userid, caid, usertime, userupdated, spare, spareint from user_ca_history where userid = ? and caid = ?; 
2019-04-26 10:29:24.945 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.selectByUserCaHistory          : ==> Parameters: 251(Integer), 255(Integer)
2019-04-26 10:29:24.945 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.selectByUserCaHistory          : <==      Total: 0
2019-04-26 10:29:24.946  INFO 9400 --- [http-nio-8080-exec-5] com.foreseers.tj.action.UserMatAction    : 没有使用过擦子，不能查看清晰头像
2019-04-26 10:29:24.946 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 10:29:24.946 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 255(Integer)
2019-04-26 10:29:24.947 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 10:29:24.947 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UsermatchMapper.usermatchQuery   : ==>  Preparing: select id, zhuid, congid, userscore, userdesc, commentgood, commentbad, characteristicgood, characteristicbad, mindscore, minddesc, bodyscore, bodydesc, characterscore, characterdesc, distance, spare, spare1, spare2 , commentdesc, characteristicdesc from dt_usermatch where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:29:24.947 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UsermatchMapper.usermatchQuery   : ==> Parameters: 255(Integer), 251(Integer), 251(Integer), 255(Integer)
2019-04-26 10:29:24.948 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UsermatchMapper.usermatchQuery   : <==      Total: 1
2019-04-26 10:29:24.948 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.selectUserFriend               : ==>  Preparing: select id, user_id, friend_id, user_reation, firendtime, lookhead, sendpix, lookimages, spareint, spare, spare1 from user_friend where (user_id = ? and friend_id = ?) or (friend_id = ? AND user_id = ?) 
2019-04-26 10:29:24.948 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.selectUserFriend               : ==> Parameters: 251(String), 256(String), 251(String), 256(String)
2019-04-26 10:29:24.949 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.selectUserFriend               : <==      Total: 0
2019-04-26 10:29:24.949  INFO 9400 --- [http-nio-8080-exec-5] com.foreseers.tj.action.UserMatAction    : 两人不是好友关系，或者成为好友时间不够，判断是否使用过擦子
2019-04-26 10:29:24.949 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.selectByUserCaHistory          : ==>  Preparing: select id, userid, caid, usertime, userupdated, spare, spareint from user_ca_history where userid = ? and caid = ?; 
2019-04-26 10:29:24.949 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.selectByUserCaHistory          : ==> Parameters: 251(Integer), 256(Integer)
2019-04-26 10:29:24.949 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.selectByUserCaHistory          : <==      Total: 0
2019-04-26 10:29:24.950  INFO 9400 --- [http-nio-8080-exec-5] com.foreseers.tj.action.UserMatAction    : 没有使用过擦子，不能查看清晰头像
2019-04-26 10:29:24.950 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 10:29:24.950 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 256(Integer)
2019-04-26 10:29:24.951 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 10:29:24.951 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UsermatchMapper.usermatchQuery   : ==>  Preparing: select id, zhuid, congid, userscore, userdesc, commentgood, commentbad, characteristicgood, characteristicbad, mindscore, minddesc, bodyscore, bodydesc, characterscore, characterdesc, distance, spare, spare1, spare2 , commentdesc, characteristicdesc from dt_usermatch where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:29:24.951 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UsermatchMapper.usermatchQuery   : ==> Parameters: 256(Integer), 251(Integer), 251(Integer), 256(Integer)
2019-04-26 10:29:24.952 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UsermatchMapper.usermatchQuery   : <==      Total: 1
2019-04-26 10:29:24.952 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.selectUserFriend               : ==>  Preparing: select id, user_id, friend_id, user_reation, firendtime, lookhead, sendpix, lookimages, spareint, spare, spare1 from user_friend where (user_id = ? and friend_id = ?) or (friend_id = ? AND user_id = ?) 
2019-04-26 10:29:24.952 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.selectUserFriend               : ==> Parameters: 251(String), 252(String), 251(String), 252(String)
2019-04-26 10:29:24.953 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.selectUserFriend               : <==      Total: 0
2019-04-26 10:29:24.953  INFO 9400 --- [http-nio-8080-exec-5] com.foreseers.tj.action.UserMatAction    : 两人不是好友关系，或者成为好友时间不够，判断是否使用过擦子
2019-04-26 10:29:24.953 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.selectByUserCaHistory          : ==>  Preparing: select id, userid, caid, usertime, userupdated, spare, spareint from user_ca_history where userid = ? and caid = ?; 
2019-04-26 10:29:24.953 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.selectByUserCaHistory          : ==> Parameters: 251(Integer), 252(Integer)
2019-04-26 10:29:24.954 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.selectByUserCaHistory          : <==      Total: 0
2019-04-26 10:29:24.954  INFO 9400 --- [http-nio-8080-exec-5] com.foreseers.tj.action.UserMatAction    : 没有使用过擦子，不能查看清晰头像
2019-04-26 10:29:24.954 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 10:29:24.954 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 252(Integer)
2019-04-26 10:29:24.955 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 10:29:24.955 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UsermatchMapper.usermatchQuery   : ==>  Preparing: select id, zhuid, congid, userscore, userdesc, commentgood, commentbad, characteristicgood, characteristicbad, mindscore, minddesc, bodyscore, bodydesc, characterscore, characterdesc, distance, spare, spare1, spare2 , commentdesc, characteristicdesc from dt_usermatch where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:29:24.955 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UsermatchMapper.usermatchQuery   : ==> Parameters: 252(Integer), 251(Integer), 251(Integer), 252(Integer)
2019-04-26 10:29:24.956 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UsermatchMapper.usermatchQuery   : <==      Total: 1
2019-04-26 10:29:24.956  INFO 9400 --- [http-nio-8080-exec-5] com.foreseers.tj.action.UserMatAction    : 返回的参数：[com.foreseers.tj.model.ReturnUser@60809fe1, com.foreseers.tj.model.ReturnUser@4a3a3499, com.foreseers.tj.model.ReturnUser@50ac48bd, com.foreseers.tj.model.ReturnUser@477e51c5, com.foreseers.tj.model.ReturnUser@23e5a15c]
2019-04-26 10:29:24.969  INFO 9400 --- [http-nio-8080-exec-6] c.foreseers.tj.action.UserFriendAction   : 进入修改用户好友相对应权限方法
2019-04-26 10:29:24.969  INFO 9400 --- [http-nio-8080-exec-6] c.foreseers.tj.action.UserFriendAction   : 请求参数：userid：251
2019-04-26 10:29:24.969  INFO 9400 --- [http-nio-8080-exec-6] c.foreseers.tj.action.UserFriendAction   : 请求参数：friendid：250
2019-04-26 10:29:24.969  INFO 9400 --- [http-nio-8080-exec-6] c.foreseers.tj.action.UserFriendAction   : 请求参数：lookhead：1
2019-04-26 10:29:24.969  INFO 9400 --- [http-nio-8080-exec-6] c.foreseers.tj.action.UserFriendAction   : 请求参数：sendpix：1
2019-04-26 10:29:24.969  INFO 9400 --- [http-nio-8080-exec-6] c.foreseers.tj.action.UserFriendAction   : 请求参数：lookimages：0
2019-04-26 10:29:24.970 DEBUG 9400 --- [http-nio-8080-exec-6] c.f.t.m.U.selectUserFriend               : ==>  Preparing: select id, user_id, friend_id, user_reation, firendtime, lookhead, sendpix, lookimages, spareint, spare, spare1 from user_friend where (user_id = ? and friend_id = ?) or (friend_id = ? AND user_id = ?) 
2019-04-26 10:29:24.970 DEBUG 9400 --- [http-nio-8080-exec-6] c.f.t.m.U.selectUserFriend               : ==> Parameters: 251(String), 250(String), 251(String), 250(String)
2019-04-26 10:29:24.970 DEBUG 9400 --- [http-nio-8080-exec-6] c.f.t.m.U.selectUserFriend               : <==      Total: 1
2019-04-26 10:29:24.971  INFO 9400 --- [http-nio-8080-exec-6] c.foreseers.tj.action.UserFriendAction   : userFriendUserFriend [Hash = 1699412510, id=35, userId=251, friendId=250, userReation=0, firendtime=2019-04-23 15:27:23, lookhead=1, sendpix=1, lookimages=0, spareint=null, spare=null, spare1=null, serialVersionUID=1]
2019-04-26 10:29:24.971  INFO 9400 --- [http-nio-8080-exec-6] c.foreseers.tj.action.UserFriendAction   : 存在好友关系
2019-04-26 10:29:24.971  INFO 9400 --- [http-nio-8080-exec-6] c.foreseers.tj.action.UserFriendAction   : 两人是好友
2019-04-26 10:29:24.971  INFO 9400 --- [http-nio-8080-exec-6] c.foreseers.tj.action.UserFriendAction   : map{uid=35, sendpix=1, lookimages=0, lookhead=1}
2019-04-26 10:29:24.972 DEBUG 9400 --- [http-nio-8080-exec-6] c.f.t.m.U.updateByPrimaryKeySelective    : ==>  Preparing: update user_friend SET lookhead = ?, sendpix = ?, lookimages = ? where id = ? 
2019-04-26 10:29:24.972 DEBUG 9400 --- [http-nio-8080-exec-6] c.f.t.m.U.updateByPrimaryKeySelective    : ==> Parameters: 1(Integer), 1(Integer), 0(Integer), 35(Integer)
2019-04-26 10:29:24.972 DEBUG 9400 --- [http-nio-8080-exec-6] c.f.t.m.U.updateByPrimaryKeySelective    : <==    Updates: 1
2019-04-26 10:29:24.974  INFO 9400 --- [http-nio-8080-exec-6] c.foreseers.tj.action.UserFriendAction   : resultsuccess
2019-04-26 10:29:26.524  INFO 9400 --- [http-nio-8080-exec-4] c.foreseers.tj.action.UserFriendAction   : 进入查询用户好友位方法
2019-04-26 10:29:26.524  INFO 9400 --- [http-nio-8080-exec-4] c.foreseers.tj.action.UserFriendAction   : 请求参数：251
2019-04-26 10:29:26.524  INFO 9400 --- [http-nio-8080-exec-9] c.foreseers.tj.action.UserFriendAction   : 进入获得好友用户名信息方法
2019-04-26 10:29:26.524  INFO 9400 --- [http-nio-8080-exec-9] c.foreseers.tj.action.UserFriendAction   : 请求参数：userid：251
2019-04-26 10:29:26.525 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 10:29:26.526 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 251(Integer)
2019-04-26 10:29:26.526 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UserFriendMapper.selectlist      : ==>  Preparing: select friend_id from user_friend WHERE user_id = ? and user_reation = 0 UNION ALL SELECT user_id from user_friend WHERE friend_id = ? and user_reation = 0 ; 
2019-04-26 10:29:26.526 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UserFriendMapper.selectlist      : ==> Parameters: 251(String), 251(String)
2019-04-26 10:29:26.526 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UserFriendMapper.selectlist      : <==      Total: 2
2019-04-26 10:29:26.526 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 10:29:26.527  INFO 9400 --- [http-nio-8080-exec-4] c.foreseers.tj.action.UserFriendAction   : 剩余好友位：18
2019-04-26 10:29:26.527 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UserFriendMapper.selectlist      : ==>  Preparing: select friend_id from user_friend WHERE user_id = ? and user_reation = 0 UNION ALL SELECT user_id from user_friend WHERE friend_id = ? and user_reation = 0 ; 
2019-04-26 10:29:26.527 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.U.selectUserFriend               : ==>  Preparing: select id, user_id, friend_id, user_reation, firendtime, lookhead, sendpix, lookimages, spareint, spare, spare1 from user_friend where (user_id = ? and friend_id = ?) or (friend_id = ? AND user_id = ?) 
2019-04-26 10:29:26.528 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UserFriendMapper.selectlist      : ==> Parameters: 251(String), 251(String)
2019-04-26 10:29:26.528 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.U.selectUserFriend               : ==> Parameters: 251(String), 184(String), 251(String), 184(String)
2019-04-26 10:29:26.528 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UserFriendMapper.selectlist      : <==      Total: 2
2019-04-26 10:29:26.528 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.U.selectUserFriend               : <==      Total: 1
2019-04-26 10:29:26.529  INFO 9400 --- [http-nio-8080-exec-4] c.foreseers.tj.action.UserFriendAction   : 已使用好友位：2
2019-04-26 10:29:26.529  INFO 9400 --- [http-nio-8080-exec-4] c.foreseers.tj.action.UserFriendAction   : 返回参数：{friendNums=20, usenums=2}
2019-04-26 10:29:26.529 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 10:29:26.529 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 184(Integer)
2019-04-26 10:29:26.530 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 10:29:26.531 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.U.selectUserFriend               : ==>  Preparing: select id, user_id, friend_id, user_reation, firendtime, lookhead, sendpix, lookimages, spareint, spare, spare1 from user_friend where (user_id = ? and friend_id = ?) or (friend_id = ? AND user_id = ?) 
2019-04-26 10:29:26.531 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.U.selectUserFriend               : ==> Parameters: 251(String), 250(String), 251(String), 250(String)
2019-04-26 10:29:26.532 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.U.selectUserFriend               : <==      Total: 1
2019-04-26 10:29:26.533 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 10:29:26.533 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 250(Integer)
2019-04-26 10:29:26.534 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 10:29:26.535  INFO 9400 --- [http-nio-8080-exec-9] c.foreseers.tj.action.UserFriendAction   : 返回值：[{userid=184, userhead=http://192.168.1.73:8080/184/magazine-unlock-01-2.3.1320-_D4C2962233745AAB4EC3C5C1C7C0E001.jpg, username=郑皓}, {userid=250, userhead=http://192.168.1.73:8080/250/magazine-unlock-01-2.3.1320-_F05D75BC727D6C92ED978B9212376471.jpg, username=哦哦哦}]
2019-04-26 10:29:27.822  INFO 9400 --- [http-nio-8080-exec-3] c.foreseers.tj.action.UserCanumsAction   : 进入更新擦子数方法
2019-04-26 10:29:27.822 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 10:29:27.822 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 251(Integer)
2019-04-26 10:29:27.823 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 10:29:27.823 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.U.selectByUserKey                : ==>  Preparing: select id, userid, everyday, vipeveryday, nums, updated, buynums, countnums, spare, spare1, spareint from user_canums where userid = ? 
2019-04-26 10:29:27.823 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.U.selectByUserKey                : ==> Parameters: 251(Integer)
2019-04-26 10:29:27.824 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.U.selectByUserKey                : <==      Total: 1
2019-04-26 10:29:28.773  INFO 9400 --- [http-nio-8080-exec-10] c.foreseers.tj.action.UserCanumsAction   : 获取用户的擦字子数方法
2019-04-26 10:29:28.774 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.U.selectByUserKey                : ==>  Preparing: select id, userid, everyday, vipeveryday, nums, updated, buynums, countnums, spare, spare1, spareint from user_canums where userid = ? 
2019-04-26 10:29:28.774 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.U.selectByUserKey                : ==> Parameters: 251(Integer)
2019-04-26 10:29:28.775 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.U.selectByUserKey                : <==      Total: 1
2019-04-26 10:29:29.863  INFO 9400 --- [http-nio-8080-exec-7] com.foreseers.tj.action.UserAction       : 进入个人中心
2019-04-26 10:29:29.863  INFO 9400 --- [http-nio-8080-exec-7] com.foreseers.tj.action.UserAction       : 请求参数：userid251
2019-04-26 10:29:29.863 DEBUG 9400 --- [http-nio-8080-exec-7] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 10:29:29.864 DEBUG 9400 --- [http-nio-8080-exec-7] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 251(Integer)
2019-04-26 10:29:29.864 DEBUG 9400 --- [http-nio-8080-exec-7] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 10:29:29.866 DEBUG 9400 --- [http-nio-8080-exec-7] c.f.t.m.U.queryByUseridlist              : ==>  Preparing: select id, userid, image, updated, facebookid, imagename, spare, spareint from user_image where userid = ? 
2019-04-26 10:29:29.866 DEBUG 9400 --- [http-nio-8080-exec-7] c.f.t.m.U.queryByUseridlist              : ==> Parameters: 251(Integer)
2019-04-26 10:29:29.867 DEBUG 9400 --- [http-nio-8080-exec-7] c.f.t.m.U.queryByUseridlist              : <==      Total: 3
2019-04-26 10:29:29.867 DEBUG 9400 --- [http-nio-8080-exec-7] c.f.t.m.LifebookMapper.lifebookSelf      : ==>  Preparing: select id, userid, name, gender, date, time, isLeap, lunaryear, lunarmonth, lunarday, numerology, numerologymatch, fiveElements, horoscope, horoscopeid, horoscopename, horoscopeguardPlanets, horoscopeguardPlanetsDesc, horoscopeguardGod, horoscopeguardAngel, horoscopeguardCrystal, horoscopematch, zodiac, zodiacid, zodiacname, zodiacguardBuddha, zodiacdesc, zodiacmatch, bazi, bazimatch, star, starmatch, ziwei, ziweimatch, created, updated, status, spareint from dt_lifebook where userid = ? and spareint = 1; 
2019-04-26 10:29:29.867 DEBUG 9400 --- [http-nio-8080-exec-7] c.f.t.m.LifebookMapper.lifebookSelf      : ==> Parameters: 251(Integer)
2019-04-26 10:29:29.868 DEBUG 9400 --- [http-nio-8080-exec-7] c.f.t.m.LifebookMapper.lifebookSelf      : <==      Total: 1
2019-04-26 10:29:29.868  INFO 9400 --- [http-nio-8080-exec-7] com.foreseers.tj.action.UserAction       : 返回的参数：ReturnImage [countnum=3, listimage=[http://192.168.1.73:8080/251/20190425100706345755.jpg, http://192.168.1.73:8080/251/20190425100742606270.jpg, http://192.168.1.73:8080/251/20190425114903981479.jpg], age=0, vipday=0, lifeuserid=137]
2019-04-26 10:29:35.016  INFO 9400 --- [http-nio-8080-exec-8] com.foreseers.tj.action.UserMatAction    : 进入好友详情页方法
2019-04-26 10:29:35.016  INFO 9400 --- [http-nio-8080-exec-8] com.foreseers.tj.action.UserMatAction    : 请求参数：userinfoid251
2019-04-26 10:29:35.016  INFO 9400 --- [http-nio-8080-exec-8] com.foreseers.tj.action.UserMatAction    : 请求参数：userid254
2019-04-26 10:29:35.017 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.UsermatchMapper.usermatchQuery   : ==>  Preparing: select id, zhuid, congid, userscore, userdesc, commentgood, commentbad, characteristicgood, characteristicbad, mindscore, minddesc, bodyscore, bodydesc, characterscore, characterdesc, distance, spare, spare1, spare2 , commentdesc, characteristicdesc from dt_usermatch where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:29:35.018 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.UsermatchMapper.usermatchQuery   : ==> Parameters: 251(Integer), 254(Integer), 254(Integer), 251(Integer)
2019-04-26 10:29:35.018 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.UsermatchMapper.usermatchQuery   : <==      Total: 1
2019-04-26 10:29:35.019 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 10:29:35.019 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 254(Integer)
2019-04-26 10:29:35.019 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 10:29:35.020 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.U.selectUserFriend               : ==>  Preparing: select id, user_id, friend_id, user_reation, firendtime, lookhead, sendpix, lookimages, spareint, spare, spare1 from user_friend where (user_id = ? and friend_id = ?) or (friend_id = ? AND user_id = ?) 
2019-04-26 10:29:35.020 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.U.selectUserFriend               : ==> Parameters: 251(String), 254(String), 251(String), 254(String)
2019-04-26 10:29:35.020 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.U.selectUserFriend               : <==      Total: 0
2019-04-26 10:29:35.021  INFO 9400 --- [http-nio-8080-exec-8] com.foreseers.tj.action.UserMatAction    : 头像是模糊的头像，判断主用户是否擦过这个用户
2019-04-26 10:29:35.021 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.U.selectByUserCaHistory          : ==>  Preparing: select id, userid, caid, usertime, userupdated, spare, spareint from user_ca_history where userid = ? and caid = ?; 
2019-04-26 10:29:35.021 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.U.selectByUserCaHistory          : ==> Parameters: 251(Integer), 254(Integer)
2019-04-26 10:29:35.021 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.U.selectByUserCaHistory          : <==      Total: 0
2019-04-26 10:29:35.022 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.U.queryByUseridlist              : ==>  Preparing: select id, userid, image, updated, facebookid, imagename, spare, spareint from user_image where userid = ? 
2019-04-26 10:29:35.022 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.U.queryByUseridlist              : ==> Parameters: 254(Integer)
2019-04-26 10:29:35.022 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.U.queryByUseridlist              : <==      Total: 0
2019-04-26 10:29:35.023 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.LifebookMapper.lifebookSelf      : ==>  Preparing: select id, userid, name, gender, date, time, isLeap, lunaryear, lunarmonth, lunarday, numerology, numerologymatch, fiveElements, horoscope, horoscopeid, horoscopename, horoscopeguardPlanets, horoscopeguardPlanetsDesc, horoscopeguardGod, horoscopeguardAngel, horoscopeguardCrystal, horoscopematch, zodiac, zodiacid, zodiacname, zodiacguardBuddha, zodiacdesc, zodiacmatch, bazi, bazimatch, star, starmatch, ziwei, ziweimatch, created, updated, status, spareint from dt_lifebook where userid = ? and spareint = 1; 
2019-04-26 10:29:35.023 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.LifebookMapper.lifebookSelf      : ==> Parameters: 254(Integer)
2019-04-26 10:29:35.023 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.LifebookMapper.lifebookSelf      : <==      Total: 1
2019-04-26 10:29:35.024  INFO 9400 --- [http-nio-8080-exec-8] com.foreseers.tj.action.UserMatAction    : 返回值：ReturnUserInfo [age=19, num=1, sex=F, friend=1, name=而你, head=http://192.168.1.73:8080/254/1556158804951.jpg, images=[], ziwei=天機, sevenday=0, thirthday=0, lookhead=0, vip=0, userdesc=步伐一致, userscore=67, distance=1, lifeuserid=141]
2019-04-26 10:29:35.123  INFO 9400 --- [http-nio-8080-exec-1] c.f.tj.action.UserLookHistoryAction      : 进入更新谁看过我列表
2019-04-26 10:29:35.123  INFO 9400 --- [http-nio-8080-exec-1] c.f.tj.action.UserLookHistoryAction      : 请求参数：userid251
2019-04-26 10:29:35.123  INFO 9400 --- [http-nio-8080-exec-1] c.f.tj.action.UserLookHistoryAction      : 请求参数：lookid254
2019-04-26 10:29:35.123 DEBUG 9400 --- [http-nio-8080-exec-1] c.f.t.m.U.selectByUserLookHistory        : ==>  Preparing: select id, userid, lookid, looktime, lookupdated, spare, spareint from user_look_history where userid = ? and lookid = ? 
2019-04-26 10:29:35.123 DEBUG 9400 --- [http-nio-8080-exec-1] c.f.t.m.U.selectByUserLookHistory        : ==> Parameters: 251(Integer), 254(Integer)
2019-04-26 10:29:35.124 DEBUG 9400 --- [http-nio-8080-exec-1] c.f.t.m.U.selectByUserLookHistory        : <==      Total: 1
2019-04-26 10:29:35.124  INFO 9400 --- [http-nio-8080-exec-1] c.f.t.s.impl.UserLookHistoryServiceImpl  : userLookHistoryinfo:UserLookHistory [Hash = -161755403, id=110, userid=251, lookid=254, looktime=2019-04-25, lookupdated=Thu Apr 25 14:53:04 CST 2019, spare=null, spareint=null, serialVersionUID=1]
2019-04-26 10:29:37.884  INFO 9400 --- [http-nio-8080-exec-5] c.f.tj.action.UserCaHistoryAction        : 进入擦用户头像方法
2019-04-26 10:29:37.884  INFO 9400 --- [http-nio-8080-exec-5] c.f.tj.action.UserCaHistoryAction        : 请求参数：userid：251
2019-04-26 10:29:37.884  INFO 9400 --- [http-nio-8080-exec-5] c.f.tj.action.UserCaHistoryAction        : 请求参数：caid：254
2019-04-26 10:29:37.885 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.selectByUserKey                : ==>  Preparing: select id, userid, everyday, vipeveryday, nums, updated, buynums, countnums, spare, spare1, spareint from user_canums where userid = ? 
2019-04-26 10:29:37.885 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.selectByUserKey                : ==> Parameters: 251(Integer)
2019-04-26 10:29:37.885 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.selectByUserKey                : <==      Total: 1
2019-04-26 10:29:37.886 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.insertSelective                : ==>  Preparing: insert into user_ca_history ( userid, caid, usertime ) values ( ?, ?, ? ) 
2019-04-26 10:29:37.887 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.insertSelective                : ==> Parameters: 251(Integer), 254(Integer), 2019-04-26(String)
2019-04-26 10:29:37.887 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.insertSelective                : <==    Updates: 1
2019-04-26 10:29:37.887 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.insertSelective!selectKey      : ==>  Preparing: SELECT LAST_INSERT_ID() 
2019-04-26 10:29:37.887 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.insertSelective!selectKey      : ==> Parameters: 
2019-04-26 10:29:37.888 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.insertSelective!selectKey      : <==      Total: 1
2019-04-26 10:29:37.888  INFO 9400 --- [http-nio-8080-exec-5] c.f.tj.service.UserCaHistoryService      : 使用每天领的擦子数
2019-04-26 10:29:37.889 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.updateByPrimaryKeySelective    : ==>  Preparing: update user_canums SET nums = ? where id = ? 
2019-04-26 10:29:37.889 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.updateByPrimaryKeySelective    : ==> Parameters: 2(Integer), 90(Integer)
2019-04-26 10:29:37.889 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.updateByPrimaryKeySelective    : <==    Updates: 1
2019-04-26 10:29:37.893 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 10:29:37.893 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 254(Integer)
2019-04-26 10:29:37.894 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 10:29:37.895 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.updateByPrimaryKeySelective    : ==>  Preparing: update dt_user SET num = ? where id = ? 
2019-04-26 10:29:37.895 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.updateByPrimaryKeySelective    : ==> Parameters: 2(Integer), 254(Integer)
2019-04-26 10:29:37.895 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.updateByPrimaryKeySelective    : <==    Updates: 1
2019-04-26 10:29:37.943  INFO 9400 --- [http-nio-8080-exec-6] com.foreseers.tj.action.UserMatAction    : 进入好友详情页方法
2019-04-26 10:29:37.943  INFO 9400 --- [http-nio-8080-exec-6] com.foreseers.tj.action.UserMatAction    : 请求参数：userinfoid251
2019-04-26 10:29:37.943  INFO 9400 --- [http-nio-8080-exec-6] com.foreseers.tj.action.UserMatAction    : 请求参数：userid254
2019-04-26 10:29:37.944 DEBUG 9400 --- [http-nio-8080-exec-6] c.f.t.m.UsermatchMapper.usermatchQuery   : ==>  Preparing: select id, zhuid, congid, userscore, userdesc, commentgood, commentbad, characteristicgood, characteristicbad, mindscore, minddesc, bodyscore, bodydesc, characterscore, characterdesc, distance, spare, spare1, spare2 , commentdesc, characteristicdesc from dt_usermatch where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:29:37.944 DEBUG 9400 --- [http-nio-8080-exec-6] c.f.t.m.UsermatchMapper.usermatchQuery   : ==> Parameters: 251(Integer), 254(Integer), 254(Integer), 251(Integer)
2019-04-26 10:29:37.945 DEBUG 9400 --- [http-nio-8080-exec-6] c.f.t.m.UsermatchMapper.usermatchQuery   : <==      Total: 1
2019-04-26 10:29:37.945 DEBUG 9400 --- [http-nio-8080-exec-6] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 10:29:37.945 DEBUG 9400 --- [http-nio-8080-exec-6] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 254(Integer)
2019-04-26 10:29:37.946 DEBUG 9400 --- [http-nio-8080-exec-6] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 10:29:37.947 DEBUG 9400 --- [http-nio-8080-exec-6] c.f.t.m.U.selectUserFriend               : ==>  Preparing: select id, user_id, friend_id, user_reation, firendtime, lookhead, sendpix, lookimages, spareint, spare, spare1 from user_friend where (user_id = ? and friend_id = ?) or (friend_id = ? AND user_id = ?) 
2019-04-26 10:29:37.947 DEBUG 9400 --- [http-nio-8080-exec-6] c.f.t.m.U.selectUserFriend               : ==> Parameters: 251(String), 254(String), 251(String), 254(String)
2019-04-26 10:29:37.948 DEBUG 9400 --- [http-nio-8080-exec-6] c.f.t.m.U.selectUserFriend               : <==      Total: 0
2019-04-26 10:29:37.948  INFO 9400 --- [http-nio-8080-exec-6] com.foreseers.tj.action.UserMatAction    : 头像是模糊的头像，判断主用户是否擦过这个用户
2019-04-26 10:29:37.948 DEBUG 9400 --- [http-nio-8080-exec-6] c.f.t.m.U.selectByUserCaHistory          : ==>  Preparing: select id, userid, caid, usertime, userupdated, spare, spareint from user_ca_history where userid = ? and caid = ?; 
2019-04-26 10:29:37.948 DEBUG 9400 --- [http-nio-8080-exec-6] c.f.t.m.U.selectByUserCaHistory          : ==> Parameters: 251(Integer), 254(Integer)
2019-04-26 10:29:37.949 DEBUG 9400 --- [http-nio-8080-exec-6] c.f.t.m.U.selectByUserCaHistory          : <==      Total: 1
2019-04-26 10:29:37.949  INFO 9400 --- [http-nio-8080-exec-6] com.foreseers.tj.action.UserMatAction    : 当前用户擦过这个用户，返回清晰头像
2019-04-26 10:29:37.950 DEBUG 9400 --- [http-nio-8080-exec-6] c.f.t.m.U.queryByUseridlist              : ==>  Preparing: select id, userid, image, updated, facebookid, imagename, spare, spareint from user_image where userid = ? 
2019-04-26 10:29:37.950 DEBUG 9400 --- [http-nio-8080-exec-6] c.f.t.m.U.queryByUseridlist              : ==> Parameters: 254(Integer)
2019-04-26 10:29:37.950 DEBUG 9400 --- [http-nio-8080-exec-6] c.f.t.m.U.queryByUseridlist              : <==      Total: 0
2019-04-26 10:29:37.950 DEBUG 9400 --- [http-nio-8080-exec-6] c.f.t.m.LifebookMapper.lifebookSelf      : ==>  Preparing: select id, userid, name, gender, date, time, isLeap, lunaryear, lunarmonth, lunarday, numerology, numerologymatch, fiveElements, horoscope, horoscopeid, horoscopename, horoscopeguardPlanets, horoscopeguardPlanetsDesc, horoscopeguardGod, horoscopeguardAngel, horoscopeguardCrystal, horoscopematch, zodiac, zodiacid, zodiacname, zodiacguardBuddha, zodiacdesc, zodiacmatch, bazi, bazimatch, star, starmatch, ziwei, ziweimatch, created, updated, status, spareint from dt_lifebook where userid = ? and spareint = 1; 
2019-04-26 10:29:37.951 DEBUG 9400 --- [http-nio-8080-exec-6] c.f.t.m.LifebookMapper.lifebookSelf      : ==> Parameters: 254(Integer)
2019-04-26 10:29:37.951 DEBUG 9400 --- [http-nio-8080-exec-6] c.f.t.m.LifebookMapper.lifebookSelf      : <==      Total: 1
2019-04-26 10:29:37.951  INFO 9400 --- [http-nio-8080-exec-6] com.foreseers.tj.action.UserMatAction    : 返回值：ReturnUserInfo [age=19, num=2, sex=F, friend=1, name=而你, head=http://192.168.1.73:8080/254/magazine-unlock-03-2.3.1303-_ED249F0592713A84EB36C11E299D0760.jpg, images=[], ziwei=天機, sevenday=0, thirthday=0, lookhead=1, vip=0, userdesc=步伐一致, userscore=67, distance=1, lifeuserid=141]
2019-04-26 10:29:38.001  INFO 9400 --- [http-nio-8080-exec-9] c.f.tj.action.UserLookHistoryAction      : 进入更新谁看过我列表
2019-04-26 10:29:38.002  INFO 9400 --- [http-nio-8080-exec-9] c.f.tj.action.UserLookHistoryAction      : 请求参数：userid251
2019-04-26 10:29:38.002  INFO 9400 --- [http-nio-8080-exec-9] c.f.tj.action.UserLookHistoryAction      : 请求参数：lookid254
2019-04-26 10:29:38.002 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.U.selectByUserLookHistory        : ==>  Preparing: select id, userid, lookid, looktime, lookupdated, spare, spareint from user_look_history where userid = ? and lookid = ? 
2019-04-26 10:29:38.002 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.U.selectByUserLookHistory        : ==> Parameters: 251(Integer), 254(Integer)
2019-04-26 10:29:38.002 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.U.selectByUserLookHistory        : <==      Total: 1
2019-04-26 10:29:38.002  INFO 9400 --- [http-nio-8080-exec-9] c.f.t.s.impl.UserLookHistoryServiceImpl  : userLookHistoryinfo:UserLookHistory [Hash = -161755403, id=110, userid=251, lookid=254, looktime=2019-04-25, lookupdated=Thu Apr 25 14:53:04 CST 2019, spare=null, spareint=null, serialVersionUID=1]
2019-04-26 10:29:42.333  INFO 9400 --- [http-nio-8080-exec-3] com.foreseers.tj.action.UserMatAction    : 进入推荐附近的人的方法
2019-04-26 10:29:42.333  INFO 9400 --- [http-nio-8080-exec-3] com.foreseers.tj.action.UserMatAction    : 请求参数：country:null
2019-04-26 10:29:42.333  INFO 9400 --- [http-nio-8080-exec-3] com.foreseers.tj.action.UserMatAction    : 请求参数：city:null
2019-04-26 10:29:42.333  INFO 9400 --- [http-nio-8080-exec-3] com.foreseers.tj.action.UserMatAction    : 请求参数：area:null
2019-04-26 10:29:42.333  INFO 9400 --- [http-nio-8080-exec-3] com.foreseers.tj.action.UserMatAction    : 请求参数：facebook:100002
2019-04-26 10:29:42.333  INFO 9400 --- [http-nio-8080-exec-3] com.foreseers.tj.action.UserMatAction    : 请求参数：经度:39.176924
2019-04-26 10:29:42.333  INFO 9400 --- [http-nio-8080-exec-3] com.foreseers.tj.action.UserMatAction    : 请求参数：纬度:117.133264
2019-04-26 10:29:42.333  INFO 9400 --- [http-nio-8080-exec-3] com.foreseers.tj.action.UserMatAction    : 请求参数：sex:
2019-04-26 10:29:42.333  INFO 9400 --- [http-nio-8080-exec-3] com.foreseers.tj.action.UserMatAction    : 请求参数：筛选条件年龄:12
2019-04-26 10:29:42.333  INFO 9400 --- [http-nio-8080-exec-3] com.foreseers.tj.action.UserMatAction    : 请求参数：筛选条件年龄:50
2019-04-26 10:29:42.333  INFO 9400 --- [http-nio-8080-exec-3] com.foreseers.tj.action.UserMatAction    : 请求参数：筛选条件距离:100
2019-04-26 10:29:42.334  INFO 9400 --- [http-nio-8080-exec-10] c.foreseers.tj.action.UserCanumsAction   : 获取用户的擦字子数方法
2019-04-26 10:29:42.334 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.U.updateByFaceIDSelective        : ==>  Preparing: update dt_user SET facebook = ?, lat = ?, lng = ? where facebook = ? 
2019-04-26 10:29:42.334 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.U.selectByUserKey                : ==>  Preparing: select id, userid, everyday, vipeveryday, nums, updated, buynums, countnums, spare, spare1, spareint from user_canums where userid = ? 
2019-04-26 10:29:42.335 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.U.selectByUserKey                : ==> Parameters: 251(Integer)
2019-04-26 10:29:42.335 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.U.updateByFaceIDSelective        : ==> Parameters: 100002(String), 39.176924(Double), 117.133264(Double), 100002(String)
2019-04-26 10:29:42.335 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.U.updateByFaceIDSelective        : <==    Updates: 1
2019-04-26 10:29:42.335 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.U.selectByUserKey                : <==      Total: 1
2019-04-26 10:29:42.336  INFO 9400 --- [http-nio-8080-exec-3] com.foreseers.tj.action.UserMatAction    : 将个人信息更新到数据库
2019-04-26 10:29:42.336 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.tj.mapper.UserMapper.QueryUser       : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where facebook = ? 
2019-04-26 10:29:42.336 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.tj.mapper.UserMapper.QueryUser       : ==> Parameters: 100002(String)
2019-04-26 10:29:42.337 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.tj.mapper.UserMapper.QueryUser       : <==      Total: 1
2019-04-26 10:29:42.338 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.mapper.UserMapper.QueryUserByCity  : ==>  Preparing: select id from dt_user where reservedint >= ? and reservedint <= ? and id != ? 
2019-04-26 10:29:42.338 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.mapper.UserMapper.QueryUserByCity  : ==> Parameters: 12(Integer), 50(Integer), 251(Integer)
2019-04-26 10:29:42.338 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.mapper.UserMapper.QueryUserByCity  : <==      Total: 4
2019-04-26 10:29:42.339  INFO 9400 --- [http-nio-8080-exec-3] com.foreseers.tj.action.UserMatAction    : idlist:[250, 254, 255, 256]
2019-04-26 10:29:42.339  INFO 9400 --- [http-nio-8080-exec-3] com.foreseers.tj.action.UserMatAction    : 通过筛选条件筛选用户
2019-04-26 10:29:42.339 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 10:29:42.339 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 250(Integer)
2019-04-26 10:29:42.340 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 10:29:42.340  INFO 9400 --- [http-nio-8080-exec-3] com.foreseers.tj.action.UserMatAction    : 经度：39.17696
2019-04-26 10:29:42.340  INFO 9400 --- [http-nio-8080-exec-3] com.foreseers.tj.action.UserMatAction    : 经度：117.133395
2019-04-26 10:29:42.340  INFO 9400 --- [http-nio-8080-exec-3] com.foreseers.tj.action.UserMatAction    : 距离：1
2019-04-26 10:29:42.340 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.U.updateByzhuidKeySelective      : ==>  Preparing: update dt_usermatch SET distance = ? where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:29:42.340 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.U.updateByzhuidKeySelective      : ==> Parameters: 1(Integer), 251(Integer), 250(Integer), 250(Integer), 251(Integer)
2019-04-26 10:29:42.341 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.U.updateByzhuidKeySelective      : <==    Updates: 1
2019-04-26 10:29:42.344  INFO 9400 --- [http-nio-8080-exec-3] com.foreseers.tj.action.UserMatAction    : 通过筛选条件筛选用户
2019-04-26 10:29:42.344 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 10:29:42.345 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 254(Integer)
2019-04-26 10:29:42.345 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 10:29:42.346  INFO 9400 --- [http-nio-8080-exec-3] com.foreseers.tj.action.UserMatAction    : 经度：39.17696
2019-04-26 10:29:42.346  INFO 9400 --- [http-nio-8080-exec-3] com.foreseers.tj.action.UserMatAction    : 经度：117.133395
2019-04-26 10:29:42.346  INFO 9400 --- [http-nio-8080-exec-3] com.foreseers.tj.action.UserMatAction    : 距离：1
2019-04-26 10:29:42.346 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.U.updateByzhuidKeySelective      : ==>  Preparing: update dt_usermatch SET distance = ? where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:29:42.347 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.U.updateByzhuidKeySelective      : ==> Parameters: 1(Integer), 251(Integer), 254(Integer), 254(Integer), 251(Integer)
2019-04-26 10:29:42.347 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.U.updateByzhuidKeySelective      : <==    Updates: 1
2019-04-26 10:29:42.356  INFO 9400 --- [http-nio-8080-exec-3] com.foreseers.tj.action.UserMatAction    : 通过筛选条件筛选用户
2019-04-26 10:29:42.357 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 10:29:42.357 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 255(Integer)
2019-04-26 10:29:42.357 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 10:29:42.358  INFO 9400 --- [http-nio-8080-exec-3] com.foreseers.tj.action.UserMatAction    : 经度：39.176995
2019-04-26 10:29:42.358  INFO 9400 --- [http-nio-8080-exec-3] com.foreseers.tj.action.UserMatAction    : 经度：117.133437
2019-04-26 10:29:42.358  INFO 9400 --- [http-nio-8080-exec-3] com.foreseers.tj.action.UserMatAction    : 距离：1
2019-04-26 10:29:42.358 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.U.updateByzhuidKeySelective      : ==>  Preparing: update dt_usermatch SET distance = ? where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:29:42.358 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.U.updateByzhuidKeySelective      : ==> Parameters: 1(Integer), 251(Integer), 255(Integer), 255(Integer), 251(Integer)
2019-04-26 10:29:42.359 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.U.updateByzhuidKeySelective      : <==    Updates: 1
2019-04-26 10:29:42.361  INFO 9400 --- [http-nio-8080-exec-3] com.foreseers.tj.action.UserMatAction    : 通过筛选条件筛选用户
2019-04-26 10:29:42.361 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 10:29:42.361 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 256(Integer)
2019-04-26 10:29:42.362 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 10:29:42.362  INFO 9400 --- [http-nio-8080-exec-3] com.foreseers.tj.action.UserMatAction    : 经度：39.176677
2019-04-26 10:29:42.362  INFO 9400 --- [http-nio-8080-exec-3] com.foreseers.tj.action.UserMatAction    : 经度：117.132802
2019-04-26 10:29:42.362  INFO 9400 --- [http-nio-8080-exec-3] com.foreseers.tj.action.UserMatAction    : 距离：1
2019-04-26 10:29:42.362 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.U.updateByzhuidKeySelective      : ==>  Preparing: update dt_usermatch SET distance = ? where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:29:42.363 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.U.updateByzhuidKeySelective      : ==> Parameters: 1(Integer), 251(Integer), 256(Integer), 256(Integer), 251(Integer)
2019-04-26 10:29:42.363 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.U.updateByzhuidKeySelective      : <==    Updates: 1
2019-04-26 10:29:42.365 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.tj.mapper.UserMapper.QueryUserByNUM  : ==>  Preparing: select id from (select * from dt_user where id != ? ORDER BY num desc LIMIT ? ) t ORDER BY RAND() LIMIT ?; 
2019-04-26 10:29:42.365 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.tj.mapper.UserMapper.QueryUserByNUM  : ==> Parameters: 251(Integer), 20(Integer), 2(Integer)
2019-04-26 10:29:42.365 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.tj.mapper.UserMapper.QueryUserByNUM  : <==      Total: 2
2019-04-26 10:29:42.366 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.UserDefriendMapper.getBlackList  : ==>  Preparing: select id, userid, blackid, defriendtime, updated, spare, spareint from user_defriend where userid = ? 
2019-04-26 10:29:42.366 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.UserDefriendMapper.getBlackList  : ==> Parameters: 251(Integer)
2019-04-26 10:29:42.366 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.UserDefriendMapper.getBlackList  : <==      Total: 0
2019-04-26 10:29:42.366  INFO 9400 --- [http-nio-8080-exec-3] com.foreseers.tj.action.UserMatAction    : 查询黑名单列表：blacks：[]
2019-04-26 10:29:42.366 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.UsermatchMapper.usermatchQuery   : ==>  Preparing: select id, zhuid, congid, userscore, userdesc, commentgood, commentbad, characteristicgood, characteristicbad, mindscore, minddesc, bodyscore, bodydesc, characterscore, characterdesc, distance, spare, spare1, spare2 , commentdesc, characteristicdesc from dt_usermatch where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:29:42.366 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.UsermatchMapper.usermatchQuery   : ==> Parameters: 251(Integer), 250(Integer), 250(Integer), 251(Integer)
2019-04-26 10:29:42.367 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.UsermatchMapper.usermatchQuery   : <==      Total: 1
2019-04-26 10:29:42.367 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.UsermatchMapper.usermatchQuery   : ==>  Preparing: select id, zhuid, congid, userscore, userdesc, commentgood, commentbad, characteristicgood, characteristicbad, mindscore, minddesc, bodyscore, bodydesc, characterscore, characterdesc, distance, spare, spare1, spare2 , commentdesc, characteristicdesc from dt_usermatch where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:29:42.368 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.UsermatchMapper.usermatchQuery   : ==> Parameters: 251(Integer), 254(Integer), 254(Integer), 251(Integer)
2019-04-26 10:29:42.368 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.UsermatchMapper.usermatchQuery   : <==      Total: 1
2019-04-26 10:29:42.368 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.UsermatchMapper.usermatchQuery   : ==>  Preparing: select id, zhuid, congid, userscore, userdesc, commentgood, commentbad, characteristicgood, characteristicbad, mindscore, minddesc, bodyscore, bodydesc, characterscore, characterdesc, distance, spare, spare1, spare2 , commentdesc, characteristicdesc from dt_usermatch where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:29:42.369 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.UsermatchMapper.usermatchQuery   : ==> Parameters: 251(Integer), 255(Integer), 255(Integer), 251(Integer)
2019-04-26 10:29:42.369 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.UsermatchMapper.usermatchQuery   : <==      Total: 1
2019-04-26 10:29:42.370 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.UsermatchMapper.usermatchQuery   : ==>  Preparing: select id, zhuid, congid, userscore, userdesc, commentgood, commentbad, characteristicgood, characteristicbad, mindscore, minddesc, bodyscore, bodydesc, characterscore, characterdesc, distance, spare, spare1, spare2 , commentdesc, characteristicdesc from dt_usermatch where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:29:42.370 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.UsermatchMapper.usermatchQuery   : ==> Parameters: 251(Integer), 256(Integer), 256(Integer), 251(Integer)
2019-04-26 10:29:42.370 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.UsermatchMapper.usermatchQuery   : <==      Total: 1
2019-04-26 10:29:42.370  INFO 9400 --- [http-nio-8080-exec-3] com.foreseers.tj.action.UserMatAction    : 命书用户ids:[]
2019-04-26 10:29:42.370  INFO 9400 --- [http-nio-8080-exec-3] com.foreseers.tj.action.UserMatAction    : 判断是否返回清晰头像
2019-04-26 10:29:42.371 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.U.selectUserFriend               : ==>  Preparing: select id, user_id, friend_id, user_reation, firendtime, lookhead, sendpix, lookimages, spareint, spare, spare1 from user_friend where (user_id = ? and friend_id = ?) or (friend_id = ? AND user_id = ?) 
2019-04-26 10:29:42.371 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.U.selectUserFriend               : ==> Parameters: 251(String), 250(String), 251(String), 250(String)
2019-04-26 10:29:42.371 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.U.selectUserFriend               : <==      Total: 1
2019-04-26 10:29:42.372  INFO 9400 --- [http-nio-8080-exec-3] com.foreseers.tj.action.UserMatAction    : 两人是好友关系，切可以返回清晰头像
2019-04-26 10:29:42.372 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 10:29:42.372 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 250(Integer)
2019-04-26 10:29:42.373 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 10:29:42.373 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.UsermatchMapper.usermatchQuery   : ==>  Preparing: select id, zhuid, congid, userscore, userdesc, commentgood, commentbad, characteristicgood, characteristicbad, mindscore, minddesc, bodyscore, bodydesc, characterscore, characterdesc, distance, spare, spare1, spare2 , commentdesc, characteristicdesc from dt_usermatch where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:29:42.373 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.UsermatchMapper.usermatchQuery   : ==> Parameters: 250(Integer), 251(Integer), 251(Integer), 250(Integer)
2019-04-26 10:29:42.374 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.UsermatchMapper.usermatchQuery   : <==      Total: 1
2019-04-26 10:29:42.375 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.U.selectUserFriend               : ==>  Preparing: select id, user_id, friend_id, user_reation, firendtime, lookhead, sendpix, lookimages, spareint, spare, spare1 from user_friend where (user_id = ? and friend_id = ?) or (friend_id = ? AND user_id = ?) 
2019-04-26 10:29:42.375 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.U.selectUserFriend               : ==> Parameters: 251(String), 254(String), 251(String), 254(String)
2019-04-26 10:29:42.375 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.U.selectUserFriend               : <==      Total: 0
2019-04-26 10:29:42.376  INFO 9400 --- [http-nio-8080-exec-3] com.foreseers.tj.action.UserMatAction    : 两人不是好友关系，或者成为好友时间不够，判断是否使用过擦子
2019-04-26 10:29:42.376 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.U.selectByUserCaHistory          : ==>  Preparing: select id, userid, caid, usertime, userupdated, spare, spareint from user_ca_history where userid = ? and caid = ?; 
2019-04-26 10:29:42.376 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.U.selectByUserCaHistory          : ==> Parameters: 251(Integer), 254(Integer)
2019-04-26 10:29:42.376 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.U.selectByUserCaHistory          : <==      Total: 1
2019-04-26 10:29:42.377  INFO 9400 --- [http-nio-8080-exec-3] com.foreseers.tj.action.UserMatAction    : 使用过擦子，返回清晰头像
2019-04-26 10:29:42.377  INFO 9400 --- [http-nio-8080-exec-3] com.foreseers.tj.action.UserMatAction    : 没有使用过擦子，不能查看清晰头像
2019-04-26 10:29:42.377 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 10:29:42.377 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 254(Integer)
2019-04-26 10:29:42.377 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 10:29:42.378 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.UsermatchMapper.usermatchQuery   : ==>  Preparing: select id, zhuid, congid, userscore, userdesc, commentgood, commentbad, characteristicgood, characteristicbad, mindscore, minddesc, bodyscore, bodydesc, characterscore, characterdesc, distance, spare, spare1, spare2 , commentdesc, characteristicdesc from dt_usermatch where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:29:42.378 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.UsermatchMapper.usermatchQuery   : ==> Parameters: 254(Integer), 251(Integer), 251(Integer), 254(Integer)
2019-04-26 10:29:42.379 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.UsermatchMapper.usermatchQuery   : <==      Total: 1
2019-04-26 10:29:42.379 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.U.selectUserFriend               : ==>  Preparing: select id, user_id, friend_id, user_reation, firendtime, lookhead, sendpix, lookimages, spareint, spare, spare1 from user_friend where (user_id = ? and friend_id = ?) or (friend_id = ? AND user_id = ?) 
2019-04-26 10:29:42.379 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.U.selectUserFriend               : ==> Parameters: 251(String), 255(String), 251(String), 255(String)
2019-04-26 10:29:42.380 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.U.selectUserFriend               : <==      Total: 0
2019-04-26 10:29:42.380  INFO 9400 --- [http-nio-8080-exec-3] com.foreseers.tj.action.UserMatAction    : 两人不是好友关系，或者成为好友时间不够，判断是否使用过擦子
2019-04-26 10:29:42.380 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.U.selectByUserCaHistory          : ==>  Preparing: select id, userid, caid, usertime, userupdated, spare, spareint from user_ca_history where userid = ? and caid = ?; 
2019-04-26 10:29:42.380 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.U.selectByUserCaHistory          : ==> Parameters: 251(Integer), 255(Integer)
2019-04-26 10:29:42.380 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.U.selectByUserCaHistory          : <==      Total: 0
2019-04-26 10:29:42.381  INFO 9400 --- [http-nio-8080-exec-3] com.foreseers.tj.action.UserMatAction    : 没有使用过擦子，不能查看清晰头像
2019-04-26 10:29:42.381 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 10:29:42.381 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 255(Integer)
2019-04-26 10:29:42.381 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 10:29:42.382 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.UsermatchMapper.usermatchQuery   : ==>  Preparing: select id, zhuid, congid, userscore, userdesc, commentgood, commentbad, characteristicgood, characteristicbad, mindscore, minddesc, bodyscore, bodydesc, characterscore, characterdesc, distance, spare, spare1, spare2 , commentdesc, characteristicdesc from dt_usermatch where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:29:42.382 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.UsermatchMapper.usermatchQuery   : ==> Parameters: 255(Integer), 251(Integer), 251(Integer), 255(Integer)
2019-04-26 10:29:42.382 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.UsermatchMapper.usermatchQuery   : <==      Total: 1
2019-04-26 10:29:42.382 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.U.selectUserFriend               : ==>  Preparing: select id, user_id, friend_id, user_reation, firendtime, lookhead, sendpix, lookimages, spareint, spare, spare1 from user_friend where (user_id = ? and friend_id = ?) or (friend_id = ? AND user_id = ?) 
2019-04-26 10:29:42.382 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.U.selectUserFriend               : ==> Parameters: 251(String), 256(String), 251(String), 256(String)
2019-04-26 10:29:42.383 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.U.selectUserFriend               : <==      Total: 0
2019-04-26 10:29:42.383  INFO 9400 --- [http-nio-8080-exec-3] com.foreseers.tj.action.UserMatAction    : 两人不是好友关系，或者成为好友时间不够，判断是否使用过擦子
2019-04-26 10:29:42.383 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.U.selectByUserCaHistory          : ==>  Preparing: select id, userid, caid, usertime, userupdated, spare, spareint from user_ca_history where userid = ? and caid = ?; 
2019-04-26 10:29:42.383 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.U.selectByUserCaHistory          : ==> Parameters: 251(Integer), 256(Integer)
2019-04-26 10:29:42.383 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.U.selectByUserCaHistory          : <==      Total: 0
2019-04-26 10:29:42.384  INFO 9400 --- [http-nio-8080-exec-3] com.foreseers.tj.action.UserMatAction    : 没有使用过擦子，不能查看清晰头像
2019-04-26 10:29:42.384 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 10:29:42.384 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 256(Integer)
2019-04-26 10:29:42.384 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 10:29:42.385 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.UsermatchMapper.usermatchQuery   : ==>  Preparing: select id, zhuid, congid, userscore, userdesc, commentgood, commentbad, characteristicgood, characteristicbad, mindscore, minddesc, bodyscore, bodydesc, characterscore, characterdesc, distance, spare, spare1, spare2 , commentdesc, characteristicdesc from dt_usermatch where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:29:42.385 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.UsermatchMapper.usermatchQuery   : ==> Parameters: 256(Integer), 251(Integer), 251(Integer), 256(Integer)
2019-04-26 10:29:42.385 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.UsermatchMapper.usermatchQuery   : <==      Total: 1
2019-04-26 10:29:42.385  INFO 9400 --- [http-nio-8080-exec-3] com.foreseers.tj.action.UserMatAction    : 返回的参数：[com.foreseers.tj.model.ReturnUser@17741e86, com.foreseers.tj.model.ReturnUser@7520e5aa, com.foreseers.tj.model.ReturnUser@1e9eaeb9, com.foreseers.tj.model.ReturnUser@2c1d6f40]
2019-04-26 10:29:42.441  INFO 9400 --- [http-nio-8080-exec-7] c.foreseers.tj.action.UserCanumsAction   : 获取用户的擦字子数方法
2019-04-26 10:29:42.441 DEBUG 9400 --- [http-nio-8080-exec-7] c.f.t.m.U.selectByUserKey                : ==>  Preparing: select id, userid, everyday, vipeveryday, nums, updated, buynums, countnums, spare, spare1, spareint from user_canums where userid = ? 
2019-04-26 10:29:42.441 DEBUG 9400 --- [http-nio-8080-exec-7] c.f.t.m.U.selectByUserKey                : ==> Parameters: 251(Integer)
2019-04-26 10:29:42.442 DEBUG 9400 --- [http-nio-8080-exec-7] c.f.t.m.U.selectByUserKey                : <==      Total: 1
2019-04-26 10:29:44.829  INFO 9400 --- [http-nio-8080-exec-5] com.foreseers.tj.action.UserMatAction    : 进入好友详情页方法
2019-04-26 10:29:44.829  INFO 9400 --- [http-nio-8080-exec-5] com.foreseers.tj.action.UserMatAction    : 请求参数：userinfoid251
2019-04-26 10:29:44.829  INFO 9400 --- [http-nio-8080-exec-5] com.foreseers.tj.action.UserMatAction    : 请求参数：userid254
2019-04-26 10:29:44.830 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UsermatchMapper.usermatchQuery   : ==>  Preparing: select id, zhuid, congid, userscore, userdesc, commentgood, commentbad, characteristicgood, characteristicbad, mindscore, minddesc, bodyscore, bodydesc, characterscore, characterdesc, distance, spare, spare1, spare2 , commentdesc, characteristicdesc from dt_usermatch where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:29:44.830 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UsermatchMapper.usermatchQuery   : ==> Parameters: 251(Integer), 254(Integer), 254(Integer), 251(Integer)
2019-04-26 10:29:44.830 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UsermatchMapper.usermatchQuery   : <==      Total: 1
2019-04-26 10:29:44.831 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 10:29:44.831 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 254(Integer)
2019-04-26 10:29:44.832 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 10:29:44.832 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.selectUserFriend               : ==>  Preparing: select id, user_id, friend_id, user_reation, firendtime, lookhead, sendpix, lookimages, spareint, spare, spare1 from user_friend where (user_id = ? and friend_id = ?) or (friend_id = ? AND user_id = ?) 
2019-04-26 10:29:44.832 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.selectUserFriend               : ==> Parameters: 251(String), 254(String), 251(String), 254(String)
2019-04-26 10:29:44.833 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.selectUserFriend               : <==      Total: 0
2019-04-26 10:29:44.833  INFO 9400 --- [http-nio-8080-exec-5] com.foreseers.tj.action.UserMatAction    : 头像是模糊的头像，判断主用户是否擦过这个用户
2019-04-26 10:29:44.834 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.selectByUserCaHistory          : ==>  Preparing: select id, userid, caid, usertime, userupdated, spare, spareint from user_ca_history where userid = ? and caid = ?; 
2019-04-26 10:29:44.834 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.selectByUserCaHistory          : ==> Parameters: 251(Integer), 254(Integer)
2019-04-26 10:29:44.834 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.selectByUserCaHistory          : <==      Total: 1
2019-04-26 10:29:44.835  INFO 9400 --- [http-nio-8080-exec-5] com.foreseers.tj.action.UserMatAction    : 当前用户擦过这个用户，返回清晰头像
2019-04-26 10:29:44.835 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.queryByUseridlist              : ==>  Preparing: select id, userid, image, updated, facebookid, imagename, spare, spareint from user_image where userid = ? 
2019-04-26 10:29:44.835 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.queryByUseridlist              : ==> Parameters: 254(Integer)
2019-04-26 10:29:44.836 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.queryByUseridlist              : <==      Total: 0
2019-04-26 10:29:44.836 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.LifebookMapper.lifebookSelf      : ==>  Preparing: select id, userid, name, gender, date, time, isLeap, lunaryear, lunarmonth, lunarday, numerology, numerologymatch, fiveElements, horoscope, horoscopeid, horoscopename, horoscopeguardPlanets, horoscopeguardPlanetsDesc, horoscopeguardGod, horoscopeguardAngel, horoscopeguardCrystal, horoscopematch, zodiac, zodiacid, zodiacname, zodiacguardBuddha, zodiacdesc, zodiacmatch, bazi, bazimatch, star, starmatch, ziwei, ziweimatch, created, updated, status, spareint from dt_lifebook where userid = ? and spareint = 1; 
2019-04-26 10:29:44.836 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.LifebookMapper.lifebookSelf      : ==> Parameters: 254(Integer)
2019-04-26 10:29:44.837 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.LifebookMapper.lifebookSelf      : <==      Total: 1
2019-04-26 10:29:44.837  INFO 9400 --- [http-nio-8080-exec-5] com.foreseers.tj.action.UserMatAction    : 返回值：ReturnUserInfo [age=19, num=2, sex=F, friend=1, name=而你, head=http://192.168.1.73:8080/254/magazine-unlock-03-2.3.1303-_ED249F0592713A84EB36C11E299D0760.jpg, images=[], ziwei=天機, sevenday=0, thirthday=0, lookhead=1, vip=0, userdesc=步伐一致, userscore=67, distance=1, lifeuserid=141]
2019-04-26 10:29:44.905  INFO 9400 --- [http-nio-8080-exec-6] c.f.tj.action.UserLookHistoryAction      : 进入更新谁看过我列表
2019-04-26 10:29:44.905  INFO 9400 --- [http-nio-8080-exec-6] c.f.tj.action.UserLookHistoryAction      : 请求参数：userid251
2019-04-26 10:29:44.905  INFO 9400 --- [http-nio-8080-exec-6] c.f.tj.action.UserLookHistoryAction      : 请求参数：lookid254
2019-04-26 10:29:44.906 DEBUG 9400 --- [http-nio-8080-exec-6] c.f.t.m.U.selectByUserLookHistory        : ==>  Preparing: select id, userid, lookid, looktime, lookupdated, spare, spareint from user_look_history where userid = ? and lookid = ? 
2019-04-26 10:29:44.906 DEBUG 9400 --- [http-nio-8080-exec-6] c.f.t.m.U.selectByUserLookHistory        : ==> Parameters: 251(Integer), 254(Integer)
2019-04-26 10:29:44.906 DEBUG 9400 --- [http-nio-8080-exec-6] c.f.t.m.U.selectByUserLookHistory        : <==      Total: 1
2019-04-26 10:29:44.906  INFO 9400 --- [http-nio-8080-exec-6] c.f.t.s.impl.UserLookHistoryServiceImpl  : userLookHistoryinfo:UserLookHistory [Hash = -161755403, id=110, userid=251, lookid=254, looktime=2019-04-25, lookupdated=Thu Apr 25 14:53:04 CST 2019, spare=null, spareint=null, serialVersionUID=1]
2019-04-26 10:29:47.146  INFO 9400 --- [http-nio-8080-exec-9] com.foreseers.tj.action.UserMatAction    : 进入推荐附近的人的方法
2019-04-26 10:29:47.147  INFO 9400 --- [http-nio-8080-exec-9] com.foreseers.tj.action.UserMatAction    : 请求参数：country:null
2019-04-26 10:29:47.147  INFO 9400 --- [http-nio-8080-exec-9] com.foreseers.tj.action.UserMatAction    : 请求参数：city:null
2019-04-26 10:29:47.147  INFO 9400 --- [http-nio-8080-exec-9] com.foreseers.tj.action.UserMatAction    : 请求参数：area:null
2019-04-26 10:29:47.147  INFO 9400 --- [http-nio-8080-exec-9] com.foreseers.tj.action.UserMatAction    : 请求参数：facebook:100002
2019-04-26 10:29:47.147  INFO 9400 --- [http-nio-8080-exec-9] com.foreseers.tj.action.UserMatAction    : 请求参数：经度:39.176924
2019-04-26 10:29:47.147  INFO 9400 --- [http-nio-8080-exec-9] com.foreseers.tj.action.UserMatAction    : 请求参数：纬度:117.133264
2019-04-26 10:29:47.147  INFO 9400 --- [http-nio-8080-exec-9] com.foreseers.tj.action.UserMatAction    : 请求参数：sex:
2019-04-26 10:29:47.147  INFO 9400 --- [http-nio-8080-exec-9] com.foreseers.tj.action.UserMatAction    : 请求参数：筛选条件年龄:12
2019-04-26 10:29:47.147  INFO 9400 --- [http-nio-8080-exec-9] com.foreseers.tj.action.UserMatAction    : 请求参数：筛选条件年龄:50
2019-04-26 10:29:47.147  INFO 9400 --- [http-nio-8080-exec-9] com.foreseers.tj.action.UserMatAction    : 请求参数：筛选条件距离:100
2019-04-26 10:29:47.148 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.U.updateByFaceIDSelective        : ==>  Preparing: update dt_user SET facebook = ?, lat = ?, lng = ? where facebook = ? 
2019-04-26 10:29:47.148 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.U.updateByFaceIDSelective        : ==> Parameters: 100002(String), 39.176924(Double), 117.133264(Double), 100002(String)
2019-04-26 10:29:47.148 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.U.updateByFaceIDSelective        : <==    Updates: 1
2019-04-26 10:29:47.149  INFO 9400 --- [http-nio-8080-exec-9] com.foreseers.tj.action.UserMatAction    : 将个人信息更新到数据库
2019-04-26 10:29:47.149  INFO 9400 --- [http-nio-8080-exec-4] c.foreseers.tj.action.UserCanumsAction   : 获取用户的擦字子数方法
2019-04-26 10:29:47.149 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.tj.mapper.UserMapper.QueryUser       : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where facebook = ? 
2019-04-26 10:29:47.150 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.tj.mapper.UserMapper.QueryUser       : ==> Parameters: 100002(String)
2019-04-26 10:29:47.150 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.U.selectByUserKey                : ==>  Preparing: select id, userid, everyday, vipeveryday, nums, updated, buynums, countnums, spare, spare1, spareint from user_canums where userid = ? 
2019-04-26 10:29:47.150 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.U.selectByUserKey                : ==> Parameters: 251(Integer)
2019-04-26 10:29:47.151 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.tj.mapper.UserMapper.QueryUser       : <==      Total: 1
2019-04-26 10:29:47.151  INFO 9400 --- [http-nio-8080-exec-10] c.foreseers.tj.action.UserCanumsAction   : 获取用户的擦字子数方法
2019-04-26 10:29:47.151 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.U.selectByUserKey                : <==      Total: 1
2019-04-26 10:29:47.151 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.U.selectByUserKey                : ==>  Preparing: select id, userid, everyday, vipeveryday, nums, updated, buynums, countnums, spare, spare1, spareint from user_canums where userid = ? 
2019-04-26 10:29:47.151 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.U.selectByUserKey                : ==> Parameters: 251(Integer)
2019-04-26 10:29:47.152 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.mapper.UserMapper.QueryUserByCity  : ==>  Preparing: select id from dt_user where reservedint >= ? and reservedint <= ? and id != ? 
2019-04-26 10:29:47.152 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.mapper.UserMapper.QueryUserByCity  : ==> Parameters: 12(Integer), 50(Integer), 251(Integer)
2019-04-26 10:29:47.152 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.mapper.UserMapper.QueryUserByCity  : <==      Total: 4
2019-04-26 10:29:47.153  INFO 9400 --- [http-nio-8080-exec-9] com.foreseers.tj.action.UserMatAction    : idlist:[250, 254, 255, 256]
2019-04-26 10:29:47.153  INFO 9400 --- [http-nio-8080-exec-9] com.foreseers.tj.action.UserMatAction    : 通过筛选条件筛选用户
2019-04-26 10:29:47.153 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 10:29:47.153 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.U.selectByUserKey                : <==      Total: 1
2019-04-26 10:29:47.153 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 250(Integer)
2019-04-26 10:29:47.154 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 10:29:47.154  INFO 9400 --- [http-nio-8080-exec-9] com.foreseers.tj.action.UserMatAction    : 经度：39.17696
2019-04-26 10:29:47.155  INFO 9400 --- [http-nio-8080-exec-9] com.foreseers.tj.action.UserMatAction    : 经度：117.133395
2019-04-26 10:29:47.155  INFO 9400 --- [http-nio-8080-exec-9] com.foreseers.tj.action.UserMatAction    : 距离：1
2019-04-26 10:29:47.155 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.U.updateByzhuidKeySelective      : ==>  Preparing: update dt_usermatch SET distance = ? where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:29:47.155 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.U.updateByzhuidKeySelective      : ==> Parameters: 1(Integer), 251(Integer), 250(Integer), 250(Integer), 251(Integer)
2019-04-26 10:29:47.155 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.U.updateByzhuidKeySelective      : <==    Updates: 1
2019-04-26 10:29:47.159  INFO 9400 --- [http-nio-8080-exec-9] com.foreseers.tj.action.UserMatAction    : 通过筛选条件筛选用户
2019-04-26 10:29:47.159 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 10:29:47.159 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 254(Integer)
2019-04-26 10:29:47.160 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 10:29:47.160  INFO 9400 --- [http-nio-8080-exec-9] com.foreseers.tj.action.UserMatAction    : 经度：39.17696
2019-04-26 10:29:47.160  INFO 9400 --- [http-nio-8080-exec-9] com.foreseers.tj.action.UserMatAction    : 经度：117.133395
2019-04-26 10:29:47.161  INFO 9400 --- [http-nio-8080-exec-9] com.foreseers.tj.action.UserMatAction    : 距离：1
2019-04-26 10:29:47.162 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.U.updateByzhuidKeySelective      : ==>  Preparing: update dt_usermatch SET distance = ? where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:29:47.163 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.U.updateByzhuidKeySelective      : ==> Parameters: 1(Integer), 251(Integer), 254(Integer), 254(Integer), 251(Integer)
2019-04-26 10:29:47.163 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.U.updateByzhuidKeySelective      : <==    Updates: 1
2019-04-26 10:29:47.165  INFO 9400 --- [http-nio-8080-exec-9] com.foreseers.tj.action.UserMatAction    : 通过筛选条件筛选用户
2019-04-26 10:29:47.165 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 10:29:47.165 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 255(Integer)
2019-04-26 10:29:47.166 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 10:29:47.166  INFO 9400 --- [http-nio-8080-exec-9] com.foreseers.tj.action.UserMatAction    : 经度：39.176995
2019-04-26 10:29:47.167  INFO 9400 --- [http-nio-8080-exec-9] com.foreseers.tj.action.UserMatAction    : 经度：117.133437
2019-04-26 10:29:47.167  INFO 9400 --- [http-nio-8080-exec-9] com.foreseers.tj.action.UserMatAction    : 距离：1
2019-04-26 10:29:47.167 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.U.updateByzhuidKeySelective      : ==>  Preparing: update dt_usermatch SET distance = ? where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:29:47.167 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.U.updateByzhuidKeySelective      : ==> Parameters: 1(Integer), 251(Integer), 255(Integer), 255(Integer), 251(Integer)
2019-04-26 10:29:47.167 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.U.updateByzhuidKeySelective      : <==    Updates: 1
2019-04-26 10:29:47.169  INFO 9400 --- [http-nio-8080-exec-9] com.foreseers.tj.action.UserMatAction    : 通过筛选条件筛选用户
2019-04-26 10:29:47.169 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 10:29:47.169 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 256(Integer)
2019-04-26 10:29:47.170 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 10:29:47.170  INFO 9400 --- [http-nio-8080-exec-9] com.foreseers.tj.action.UserMatAction    : 经度：39.176677
2019-04-26 10:29:47.170  INFO 9400 --- [http-nio-8080-exec-9] com.foreseers.tj.action.UserMatAction    : 经度：117.132802
2019-04-26 10:29:47.170  INFO 9400 --- [http-nio-8080-exec-9] com.foreseers.tj.action.UserMatAction    : 距离：1
2019-04-26 10:29:47.171 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.U.updateByzhuidKeySelective      : ==>  Preparing: update dt_usermatch SET distance = ? where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:29:47.171 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.U.updateByzhuidKeySelective      : ==> Parameters: 1(Integer), 251(Integer), 256(Integer), 256(Integer), 251(Integer)
2019-04-26 10:29:47.171 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.U.updateByzhuidKeySelective      : <==    Updates: 1
2019-04-26 10:29:47.173 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.tj.mapper.UserMapper.QueryUserByNUM  : ==>  Preparing: select id from (select * from dt_user where id != ? ORDER BY num desc LIMIT ? ) t ORDER BY RAND() LIMIT ?; 
2019-04-26 10:29:47.173 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.tj.mapper.UserMapper.QueryUserByNUM  : ==> Parameters: 251(Integer), 20(Integer), 2(Integer)
2019-04-26 10:29:47.174 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.tj.mapper.UserMapper.QueryUserByNUM  : <==      Total: 2
2019-04-26 10:29:47.174  INFO 9400 --- [http-nio-8080-exec-9] com.foreseers.tj.action.UserMatAction    : 推送的用户id为：184
2019-04-26 10:29:47.175 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 10:29:47.175 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 184(Integer)
2019-04-26 10:29:47.175 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 10:29:47.175  INFO 9400 --- [http-nio-8080-exec-9] com.foreseers.tj.action.UserMatAction    : 计算推送用户的距离：1
2019-04-26 10:29:47.175  INFO 9400 --- [http-nio-8080-exec-9] com.foreseers.tj.action.UserMatAction    : 重新计算推送的人距离
2019-04-26 10:29:47.176 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.U.updateByzhuidKeySelective      : ==>  Preparing: update dt_usermatch SET distance = ? where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:29:47.176 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.U.updateByzhuidKeySelective      : ==> Parameters: 1(Integer), 251(Integer), 184(Integer), 184(Integer), 251(Integer)
2019-04-26 10:29:47.176 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.U.updateByzhuidKeySelective      : <==    Updates: 1
2019-04-26 10:29:47.178  INFO 9400 --- [http-nio-8080-exec-9] com.foreseers.tj.action.UserMatAction    : 推送的用户id为：252
2019-04-26 10:29:47.178 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 10:29:47.178 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 252(Integer)
2019-04-26 10:29:47.179 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 10:29:47.179  INFO 9400 --- [http-nio-8080-exec-9] com.foreseers.tj.action.UserMatAction    : 计算推送用户的距离：1
2019-04-26 10:29:47.179  INFO 9400 --- [http-nio-8080-exec-9] com.foreseers.tj.action.UserMatAction    : 重新计算推送的人距离
2019-04-26 10:29:47.180 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.U.updateByzhuidKeySelective      : ==>  Preparing: update dt_usermatch SET distance = ? where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:29:47.180 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.U.updateByzhuidKeySelective      : ==> Parameters: 1(Integer), 251(Integer), 252(Integer), 252(Integer), 251(Integer)
2019-04-26 10:29:47.180 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.U.updateByzhuidKeySelective      : <==    Updates: 1
2019-04-26 10:29:47.182 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UserDefriendMapper.getBlackList  : ==>  Preparing: select id, userid, blackid, defriendtime, updated, spare, spareint from user_defriend where userid = ? 
2019-04-26 10:29:47.182 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UserDefriendMapper.getBlackList  : ==> Parameters: 251(Integer)
2019-04-26 10:29:47.182 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UserDefriendMapper.getBlackList  : <==      Total: 0
2019-04-26 10:29:47.182  INFO 9400 --- [http-nio-8080-exec-9] com.foreseers.tj.action.UserMatAction    : 查询黑名单列表：blacks：[]
2019-04-26 10:29:47.182 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UsermatchMapper.usermatchQuery   : ==>  Preparing: select id, zhuid, congid, userscore, userdesc, commentgood, commentbad, characteristicgood, characteristicbad, mindscore, minddesc, bodyscore, bodydesc, characterscore, characterdesc, distance, spare, spare1, spare2 , commentdesc, characteristicdesc from dt_usermatch where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:29:47.182 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UsermatchMapper.usermatchQuery   : ==> Parameters: 251(Integer), 250(Integer), 250(Integer), 251(Integer)
2019-04-26 10:29:47.183 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UsermatchMapper.usermatchQuery   : <==      Total: 1
2019-04-26 10:29:47.183 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UsermatchMapper.usermatchQuery   : ==>  Preparing: select id, zhuid, congid, userscore, userdesc, commentgood, commentbad, characteristicgood, characteristicbad, mindscore, minddesc, bodyscore, bodydesc, characterscore, characterdesc, distance, spare, spare1, spare2 , commentdesc, characteristicdesc from dt_usermatch where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:29:47.183 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UsermatchMapper.usermatchQuery   : ==> Parameters: 251(Integer), 254(Integer), 254(Integer), 251(Integer)
2019-04-26 10:29:47.184 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UsermatchMapper.usermatchQuery   : <==      Total: 1
2019-04-26 10:29:47.184 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UsermatchMapper.usermatchQuery   : ==>  Preparing: select id, zhuid, congid, userscore, userdesc, commentgood, commentbad, characteristicgood, characteristicbad, mindscore, minddesc, bodyscore, bodydesc, characterscore, characterdesc, distance, spare, spare1, spare2 , commentdesc, characteristicdesc from dt_usermatch where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:29:47.185 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UsermatchMapper.usermatchQuery   : ==> Parameters: 251(Integer), 255(Integer), 255(Integer), 251(Integer)
2019-04-26 10:29:47.185 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UsermatchMapper.usermatchQuery   : <==      Total: 1
2019-04-26 10:29:47.186 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UsermatchMapper.usermatchQuery   : ==>  Preparing: select id, zhuid, congid, userscore, userdesc, commentgood, commentbad, characteristicgood, characteristicbad, mindscore, minddesc, bodyscore, bodydesc, characterscore, characterdesc, distance, spare, spare1, spare2 , commentdesc, characteristicdesc from dt_usermatch where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:29:47.186 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UsermatchMapper.usermatchQuery   : ==> Parameters: 251(Integer), 256(Integer), 256(Integer), 251(Integer)
2019-04-26 10:29:47.186 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UsermatchMapper.usermatchQuery   : <==      Total: 1
2019-04-26 10:29:47.187 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UsermatchMapper.usermatchQuery   : ==>  Preparing: select id, zhuid, congid, userscore, userdesc, commentgood, commentbad, characteristicgood, characteristicbad, mindscore, minddesc, bodyscore, bodydesc, characterscore, characterdesc, distance, spare, spare1, spare2 , commentdesc, characteristicdesc from dt_usermatch where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:29:47.187 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UsermatchMapper.usermatchQuery   : ==> Parameters: 251(Integer), 184(Integer), 184(Integer), 251(Integer)
2019-04-26 10:29:47.187 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UsermatchMapper.usermatchQuery   : <==      Total: 1
2019-04-26 10:29:47.188 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UsermatchMapper.usermatchQuery   : ==>  Preparing: select id, zhuid, congid, userscore, userdesc, commentgood, commentbad, characteristicgood, characteristicbad, mindscore, minddesc, bodyscore, bodydesc, characterscore, characterdesc, distance, spare, spare1, spare2 , commentdesc, characteristicdesc from dt_usermatch where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:29:47.188 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UsermatchMapper.usermatchQuery   : ==> Parameters: 251(Integer), 252(Integer), 252(Integer), 251(Integer)
2019-04-26 10:29:47.189 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UsermatchMapper.usermatchQuery   : <==      Total: 1
2019-04-26 10:29:47.189  INFO 9400 --- [http-nio-8080-exec-9] com.foreseers.tj.action.UserMatAction    : 命书用户ids:[]
2019-04-26 10:29:47.189  INFO 9400 --- [http-nio-8080-exec-9] com.foreseers.tj.action.UserMatAction    : 判断是否返回清晰头像
2019-04-26 10:29:47.189 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.U.selectUserFriend               : ==>  Preparing: select id, user_id, friend_id, user_reation, firendtime, lookhead, sendpix, lookimages, spareint, spare, spare1 from user_friend where (user_id = ? and friend_id = ?) or (friend_id = ? AND user_id = ?) 
2019-04-26 10:29:47.189 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.U.selectUserFriend               : ==> Parameters: 251(String), 250(String), 251(String), 250(String)
2019-04-26 10:29:47.189 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.U.selectUserFriend               : <==      Total: 1
2019-04-26 10:29:47.190  INFO 9400 --- [http-nio-8080-exec-9] com.foreseers.tj.action.UserMatAction    : 两人是好友关系，切可以返回清晰头像
2019-04-26 10:29:47.190 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 10:29:47.190 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 250(Integer)
2019-04-26 10:29:47.190 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 10:29:47.191 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UsermatchMapper.usermatchQuery   : ==>  Preparing: select id, zhuid, congid, userscore, userdesc, commentgood, commentbad, characteristicgood, characteristicbad, mindscore, minddesc, bodyscore, bodydesc, characterscore, characterdesc, distance, spare, spare1, spare2 , commentdesc, characteristicdesc from dt_usermatch where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:29:47.191 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UsermatchMapper.usermatchQuery   : ==> Parameters: 250(Integer), 251(Integer), 251(Integer), 250(Integer)
2019-04-26 10:29:47.192 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UsermatchMapper.usermatchQuery   : <==      Total: 1
2019-04-26 10:29:47.192 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.U.selectUserFriend               : ==>  Preparing: select id, user_id, friend_id, user_reation, firendtime, lookhead, sendpix, lookimages, spareint, spare, spare1 from user_friend where (user_id = ? and friend_id = ?) or (friend_id = ? AND user_id = ?) 
2019-04-26 10:29:47.192 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.U.selectUserFriend               : ==> Parameters: 251(String), 254(String), 251(String), 254(String)
2019-04-26 10:29:47.192 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.U.selectUserFriend               : <==      Total: 0
2019-04-26 10:29:47.193  INFO 9400 --- [http-nio-8080-exec-9] com.foreseers.tj.action.UserMatAction    : 两人不是好友关系，或者成为好友时间不够，判断是否使用过擦子
2019-04-26 10:29:47.193 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.U.selectByUserCaHistory          : ==>  Preparing: select id, userid, caid, usertime, userupdated, spare, spareint from user_ca_history where userid = ? and caid = ?; 
2019-04-26 10:29:47.193 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.U.selectByUserCaHistory          : ==> Parameters: 251(Integer), 254(Integer)
2019-04-26 10:29:47.193 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.U.selectByUserCaHistory          : <==      Total: 1
2019-04-26 10:29:47.194  INFO 9400 --- [http-nio-8080-exec-9] com.foreseers.tj.action.UserMatAction    : 使用过擦子，返回清晰头像
2019-04-26 10:29:47.194  INFO 9400 --- [http-nio-8080-exec-9] com.foreseers.tj.action.UserMatAction    : 没有使用过擦子，不能查看清晰头像
2019-04-26 10:29:47.194 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 10:29:47.194 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 254(Integer)
2019-04-26 10:29:47.194 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 10:29:47.195 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UsermatchMapper.usermatchQuery   : ==>  Preparing: select id, zhuid, congid, userscore, userdesc, commentgood, commentbad, characteristicgood, characteristicbad, mindscore, minddesc, bodyscore, bodydesc, characterscore, characterdesc, distance, spare, spare1, spare2 , commentdesc, characteristicdesc from dt_usermatch where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:29:47.195 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UsermatchMapper.usermatchQuery   : ==> Parameters: 254(Integer), 251(Integer), 251(Integer), 254(Integer)
2019-04-26 10:29:47.196 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UsermatchMapper.usermatchQuery   : <==      Total: 1
2019-04-26 10:29:47.197 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.U.selectUserFriend               : ==>  Preparing: select id, user_id, friend_id, user_reation, firendtime, lookhead, sendpix, lookimages, spareint, spare, spare1 from user_friend where (user_id = ? and friend_id = ?) or (friend_id = ? AND user_id = ?) 
2019-04-26 10:29:47.197 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.U.selectUserFriend               : ==> Parameters: 251(String), 255(String), 251(String), 255(String)
2019-04-26 10:29:47.198 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.U.selectUserFriend               : <==      Total: 0
2019-04-26 10:29:47.198  INFO 9400 --- [http-nio-8080-exec-9] com.foreseers.tj.action.UserMatAction    : 两人不是好友关系，或者成为好友时间不够，判断是否使用过擦子
2019-04-26 10:29:47.198 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.U.selectByUserCaHistory          : ==>  Preparing: select id, userid, caid, usertime, userupdated, spare, spareint from user_ca_history where userid = ? and caid = ?; 
2019-04-26 10:29:47.198 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.U.selectByUserCaHistory          : ==> Parameters: 251(Integer), 255(Integer)
2019-04-26 10:29:47.198 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.U.selectByUserCaHistory          : <==      Total: 0
2019-04-26 10:29:47.199  INFO 9400 --- [http-nio-8080-exec-9] com.foreseers.tj.action.UserMatAction    : 没有使用过擦子，不能查看清晰头像
2019-04-26 10:29:47.199 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 10:29:47.199 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 255(Integer)
2019-04-26 10:29:47.200 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 10:29:47.200 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UsermatchMapper.usermatchQuery   : ==>  Preparing: select id, zhuid, congid, userscore, userdesc, commentgood, commentbad, characteristicgood, characteristicbad, mindscore, minddesc, bodyscore, bodydesc, characterscore, characterdesc, distance, spare, spare1, spare2 , commentdesc, characteristicdesc from dt_usermatch where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:29:47.200 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UsermatchMapper.usermatchQuery   : ==> Parameters: 255(Integer), 251(Integer), 251(Integer), 255(Integer)
2019-04-26 10:29:47.201 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UsermatchMapper.usermatchQuery   : <==      Total: 1
2019-04-26 10:29:47.201 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.U.selectUserFriend               : ==>  Preparing: select id, user_id, friend_id, user_reation, firendtime, lookhead, sendpix, lookimages, spareint, spare, spare1 from user_friend where (user_id = ? and friend_id = ?) or (friend_id = ? AND user_id = ?) 
2019-04-26 10:29:47.201 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.U.selectUserFriend               : ==> Parameters: 251(String), 256(String), 251(String), 256(String)
2019-04-26 10:29:47.202 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.U.selectUserFriend               : <==      Total: 0
2019-04-26 10:29:47.202  INFO 9400 --- [http-nio-8080-exec-9] com.foreseers.tj.action.UserMatAction    : 两人不是好友关系，或者成为好友时间不够，判断是否使用过擦子
2019-04-26 10:29:47.202 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.U.selectByUserCaHistory          : ==>  Preparing: select id, userid, caid, usertime, userupdated, spare, spareint from user_ca_history where userid = ? and caid = ?; 
2019-04-26 10:29:47.202 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.U.selectByUserCaHistory          : ==> Parameters: 251(Integer), 256(Integer)
2019-04-26 10:29:47.203 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.U.selectByUserCaHistory          : <==      Total: 0
2019-04-26 10:29:47.203  INFO 9400 --- [http-nio-8080-exec-9] com.foreseers.tj.action.UserMatAction    : 没有使用过擦子，不能查看清晰头像
2019-04-26 10:29:47.203 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 10:29:47.203 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 256(Integer)
2019-04-26 10:29:47.204 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 10:29:47.204 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UsermatchMapper.usermatchQuery   : ==>  Preparing: select id, zhuid, congid, userscore, userdesc, commentgood, commentbad, characteristicgood, characteristicbad, mindscore, minddesc, bodyscore, bodydesc, characterscore, characterdesc, distance, spare, spare1, spare2 , commentdesc, characteristicdesc from dt_usermatch where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:29:47.204 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UsermatchMapper.usermatchQuery   : ==> Parameters: 256(Integer), 251(Integer), 251(Integer), 256(Integer)
2019-04-26 10:29:47.205 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UsermatchMapper.usermatchQuery   : <==      Total: 1
2019-04-26 10:29:47.205 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.U.selectUserFriend               : ==>  Preparing: select id, user_id, friend_id, user_reation, firendtime, lookhead, sendpix, lookimages, spareint, spare, spare1 from user_friend where (user_id = ? and friend_id = ?) or (friend_id = ? AND user_id = ?) 
2019-04-26 10:29:47.205 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.U.selectUserFriend               : ==> Parameters: 251(String), 184(String), 251(String), 184(String)
2019-04-26 10:29:47.205 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.U.selectUserFriend               : <==      Total: 1
2019-04-26 10:29:47.206  INFO 9400 --- [http-nio-8080-exec-9] com.foreseers.tj.action.UserMatAction    : 两人是好友关系，切可以返回清晰头像
2019-04-26 10:29:47.206 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 10:29:47.206 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 184(Integer)
2019-04-26 10:29:47.207 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 10:29:47.207 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UsermatchMapper.usermatchQuery   : ==>  Preparing: select id, zhuid, congid, userscore, userdesc, commentgood, commentbad, characteristicgood, characteristicbad, mindscore, minddesc, bodyscore, bodydesc, characterscore, characterdesc, distance, spare, spare1, spare2 , commentdesc, characteristicdesc from dt_usermatch where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:29:47.207 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UsermatchMapper.usermatchQuery   : ==> Parameters: 184(Integer), 251(Integer), 251(Integer), 184(Integer)
2019-04-26 10:29:47.208 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UsermatchMapper.usermatchQuery   : <==      Total: 1
2019-04-26 10:29:47.208 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.U.selectUserFriend               : ==>  Preparing: select id, user_id, friend_id, user_reation, firendtime, lookhead, sendpix, lookimages, spareint, spare, spare1 from user_friend where (user_id = ? and friend_id = ?) or (friend_id = ? AND user_id = ?) 
2019-04-26 10:29:47.208 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.U.selectUserFriend               : ==> Parameters: 251(String), 252(String), 251(String), 252(String)
2019-04-26 10:29:47.209 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.U.selectUserFriend               : <==      Total: 0
2019-04-26 10:29:47.209  INFO 9400 --- [http-nio-8080-exec-9] com.foreseers.tj.action.UserMatAction    : 两人不是好友关系，或者成为好友时间不够，判断是否使用过擦子
2019-04-26 10:29:47.209 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.U.selectByUserCaHistory          : ==>  Preparing: select id, userid, caid, usertime, userupdated, spare, spareint from user_ca_history where userid = ? and caid = ?; 
2019-04-26 10:29:47.209 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.U.selectByUserCaHistory          : ==> Parameters: 251(Integer), 252(Integer)
2019-04-26 10:29:47.209 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.U.selectByUserCaHistory          : <==      Total: 0
2019-04-26 10:29:47.210  INFO 9400 --- [http-nio-8080-exec-9] com.foreseers.tj.action.UserMatAction    : 没有使用过擦子，不能查看清晰头像
2019-04-26 10:29:47.210 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 10:29:47.210 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 252(Integer)
2019-04-26 10:29:47.211 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 10:29:47.211 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UsermatchMapper.usermatchQuery   : ==>  Preparing: select id, zhuid, congid, userscore, userdesc, commentgood, commentbad, characteristicgood, characteristicbad, mindscore, minddesc, bodyscore, bodydesc, characterscore, characterdesc, distance, spare, spare1, spare2 , commentdesc, characteristicdesc from dt_usermatch where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:29:47.211 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UsermatchMapper.usermatchQuery   : ==> Parameters: 252(Integer), 251(Integer), 251(Integer), 252(Integer)
2019-04-26 10:29:47.212 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.UsermatchMapper.usermatchQuery   : <==      Total: 1
2019-04-26 10:29:47.212  INFO 9400 --- [http-nio-8080-exec-9] com.foreseers.tj.action.UserMatAction    : 返回的参数：[com.foreseers.tj.model.ReturnUser@4bf5ae25, com.foreseers.tj.model.ReturnUser@439de49d, com.foreseers.tj.model.ReturnUser@4de9221a, com.foreseers.tj.model.ReturnUser@2bbcf037, com.foreseers.tj.model.ReturnUser@4ddef7e3, com.foreseers.tj.model.ReturnUser@614b5bc9]
2019-04-26 10:29:48.536  INFO 9400 --- [http-nio-8080-exec-1] c.foreseers.tj.action.UserFriendAction   : 进入查询用户好友位方法
2019-04-26 10:29:48.536  INFO 9400 --- [http-nio-8080-exec-1] c.foreseers.tj.action.UserFriendAction   : 请求参数：251
2019-04-26 10:29:48.536  INFO 9400 --- [http-nio-8080-exec-5] c.foreseers.tj.action.UserFriendAction   : 进入获得好友用户名信息方法
2019-04-26 10:29:48.536  INFO 9400 --- [http-nio-8080-exec-5] c.foreseers.tj.action.UserFriendAction   : 请求参数：userid：251
2019-04-26 10:29:48.537 DEBUG 9400 --- [http-nio-8080-exec-1] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 10:29:48.537 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UserFriendMapper.selectlist      : ==>  Preparing: select friend_id from user_friend WHERE user_id = ? and user_reation = 0 UNION ALL SELECT user_id from user_friend WHERE friend_id = ? and user_reation = 0 ; 
2019-04-26 10:29:48.537 DEBUG 9400 --- [http-nio-8080-exec-1] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 251(Integer)
2019-04-26 10:29:48.537 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UserFriendMapper.selectlist      : ==> Parameters: 251(String), 251(String)
2019-04-26 10:29:48.538 DEBUG 9400 --- [http-nio-8080-exec-1] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 10:29:48.538 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UserFriendMapper.selectlist      : <==      Total: 2
2019-04-26 10:29:48.538  INFO 9400 --- [http-nio-8080-exec-1] c.foreseers.tj.action.UserFriendAction   : 剩余好友位：18
2019-04-26 10:29:48.539 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.selectUserFriend               : ==>  Preparing: select id, user_id, friend_id, user_reation, firendtime, lookhead, sendpix, lookimages, spareint, spare, spare1 from user_friend where (user_id = ? and friend_id = ?) or (friend_id = ? AND user_id = ?) 
2019-04-26 10:29:48.539 DEBUG 9400 --- [http-nio-8080-exec-1] c.f.t.m.UserFriendMapper.selectlist      : ==>  Preparing: select friend_id from user_friend WHERE user_id = ? and user_reation = 0 UNION ALL SELECT user_id from user_friend WHERE friend_id = ? and user_reation = 0 ; 
2019-04-26 10:29:48.539 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.selectUserFriend               : ==> Parameters: 251(String), 184(String), 251(String), 184(String)
2019-04-26 10:29:48.539 DEBUG 9400 --- [http-nio-8080-exec-1] c.f.t.m.UserFriendMapper.selectlist      : ==> Parameters: 251(String), 251(String)
2019-04-26 10:29:48.539 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.selectUserFriend               : <==      Total: 1
2019-04-26 10:29:48.539 DEBUG 9400 --- [http-nio-8080-exec-1] c.f.t.m.UserFriendMapper.selectlist      : <==      Total: 2
2019-04-26 10:29:48.540  INFO 9400 --- [http-nio-8080-exec-1] c.foreseers.tj.action.UserFriendAction   : 已使用好友位：2
2019-04-26 10:29:48.540  INFO 9400 --- [http-nio-8080-exec-1] c.foreseers.tj.action.UserFriendAction   : 返回参数：{friendNums=20, usenums=2}
2019-04-26 10:29:48.540 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 10:29:48.541 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 184(Integer)
2019-04-26 10:29:48.541 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 10:29:48.542 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.selectUserFriend               : ==>  Preparing: select id, user_id, friend_id, user_reation, firendtime, lookhead, sendpix, lookimages, spareint, spare, spare1 from user_friend where (user_id = ? and friend_id = ?) or (friend_id = ? AND user_id = ?) 
2019-04-26 10:29:48.542 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.selectUserFriend               : ==> Parameters: 251(String), 250(String), 251(String), 250(String)
2019-04-26 10:29:48.543 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.U.selectUserFriend               : <==      Total: 1
2019-04-26 10:29:48.544 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 10:29:48.544 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 250(Integer)
2019-04-26 10:29:48.544 DEBUG 9400 --- [http-nio-8080-exec-5] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 10:29:48.545  INFO 9400 --- [http-nio-8080-exec-5] c.foreseers.tj.action.UserFriendAction   : 返回值：[{userid=184, userhead=http://192.168.1.73:8080/184/magazine-unlock-01-2.3.1320-_D4C2962233745AAB4EC3C5C1C7C0E001.jpg, username=郑皓}, {userid=250, userhead=http://192.168.1.73:8080/250/magazine-unlock-01-2.3.1320-_F05D75BC727D6C92ED978B9212376471.jpg, username=哦哦哦}]
2019-04-26 10:29:53.653  INFO 9400 --- [http-nio-8080-exec-6] com.foreseers.tj.action.UserMatAction    : 进入好友详情页方法
2019-04-26 10:29:53.653  INFO 9400 --- [http-nio-8080-exec-6] com.foreseers.tj.action.UserMatAction    : 请求参数：userinfoid251
2019-04-26 10:29:53.653  INFO 9400 --- [http-nio-8080-exec-6] com.foreseers.tj.action.UserMatAction    : 请求参数：userid254
2019-04-26 10:29:53.654 DEBUG 9400 --- [http-nio-8080-exec-6] c.f.t.m.UsermatchMapper.usermatchQuery   : ==>  Preparing: select id, zhuid, congid, userscore, userdesc, commentgood, commentbad, characteristicgood, characteristicbad, mindscore, minddesc, bodyscore, bodydesc, characterscore, characterdesc, distance, spare, spare1, spare2 , commentdesc, characteristicdesc from dt_usermatch where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:29:53.654 DEBUG 9400 --- [http-nio-8080-exec-6] c.f.t.m.UsermatchMapper.usermatchQuery   : ==> Parameters: 251(Integer), 254(Integer), 254(Integer), 251(Integer)
2019-04-26 10:29:53.655 DEBUG 9400 --- [http-nio-8080-exec-6] c.f.t.m.UsermatchMapper.usermatchQuery   : <==      Total: 1
2019-04-26 10:29:53.656 DEBUG 9400 --- [http-nio-8080-exec-6] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 10:29:53.656 DEBUG 9400 --- [http-nio-8080-exec-6] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 254(Integer)
2019-04-26 10:29:53.656 DEBUG 9400 --- [http-nio-8080-exec-6] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 10:29:53.657 DEBUG 9400 --- [http-nio-8080-exec-6] c.f.t.m.U.selectUserFriend               : ==>  Preparing: select id, user_id, friend_id, user_reation, firendtime, lookhead, sendpix, lookimages, spareint, spare, spare1 from user_friend where (user_id = ? and friend_id = ?) or (friend_id = ? AND user_id = ?) 
2019-04-26 10:29:53.657 DEBUG 9400 --- [http-nio-8080-exec-6] c.f.t.m.U.selectUserFriend               : ==> Parameters: 251(String), 254(String), 251(String), 254(String)
2019-04-26 10:29:53.657 DEBUG 9400 --- [http-nio-8080-exec-6] c.f.t.m.U.selectUserFriend               : <==      Total: 0
2019-04-26 10:29:53.658  INFO 9400 --- [http-nio-8080-exec-6] com.foreseers.tj.action.UserMatAction    : 头像是模糊的头像，判断主用户是否擦过这个用户
2019-04-26 10:29:53.658 DEBUG 9400 --- [http-nio-8080-exec-6] c.f.t.m.U.selectByUserCaHistory          : ==>  Preparing: select id, userid, caid, usertime, userupdated, spare, spareint from user_ca_history where userid = ? and caid = ?; 
2019-04-26 10:29:53.658 DEBUG 9400 --- [http-nio-8080-exec-6] c.f.t.m.U.selectByUserCaHistory          : ==> Parameters: 251(Integer), 254(Integer)
2019-04-26 10:29:53.659 DEBUG 9400 --- [http-nio-8080-exec-6] c.f.t.m.U.selectByUserCaHistory          : <==      Total: 1
2019-04-26 10:29:53.659  INFO 9400 --- [http-nio-8080-exec-6] com.foreseers.tj.action.UserMatAction    : 当前用户擦过这个用户，返回清晰头像
2019-04-26 10:29:53.659 DEBUG 9400 --- [http-nio-8080-exec-6] c.f.t.m.U.queryByUseridlist              : ==>  Preparing: select id, userid, image, updated, facebookid, imagename, spare, spareint from user_image where userid = ? 
2019-04-26 10:29:53.659 DEBUG 9400 --- [http-nio-8080-exec-6] c.f.t.m.U.queryByUseridlist              : ==> Parameters: 254(Integer)
2019-04-26 10:29:53.660 DEBUG 9400 --- [http-nio-8080-exec-6] c.f.t.m.U.queryByUseridlist              : <==      Total: 0
2019-04-26 10:29:53.660 DEBUG 9400 --- [http-nio-8080-exec-6] c.f.t.m.LifebookMapper.lifebookSelf      : ==>  Preparing: select id, userid, name, gender, date, time, isLeap, lunaryear, lunarmonth, lunarday, numerology, numerologymatch, fiveElements, horoscope, horoscopeid, horoscopename, horoscopeguardPlanets, horoscopeguardPlanetsDesc, horoscopeguardGod, horoscopeguardAngel, horoscopeguardCrystal, horoscopematch, zodiac, zodiacid, zodiacname, zodiacguardBuddha, zodiacdesc, zodiacmatch, bazi, bazimatch, star, starmatch, ziwei, ziweimatch, created, updated, status, spareint from dt_lifebook where userid = ? and spareint = 1; 
2019-04-26 10:29:53.660 DEBUG 9400 --- [http-nio-8080-exec-6] c.f.t.m.LifebookMapper.lifebookSelf      : ==> Parameters: 254(Integer)
2019-04-26 10:29:53.661 DEBUG 9400 --- [http-nio-8080-exec-6] c.f.t.m.LifebookMapper.lifebookSelf      : <==      Total: 1
2019-04-26 10:29:53.661  INFO 9400 --- [http-nio-8080-exec-6] com.foreseers.tj.action.UserMatAction    : 返回值：ReturnUserInfo [age=19, num=2, sex=F, friend=1, name=而你, head=http://192.168.1.73:8080/254/magazine-unlock-03-2.3.1303-_ED249F0592713A84EB36C11E299D0760.jpg, images=[], ziwei=天機, sevenday=0, thirthday=0, lookhead=1, vip=0, userdesc=步伐一致, userscore=67, distance=1, lifeuserid=141]
2019-04-26 10:29:53.729  INFO 9400 --- [http-nio-8080-exec-4] c.f.tj.action.UserLookHistoryAction      : 进入更新谁看过我列表
2019-04-26 10:29:53.729  INFO 9400 --- [http-nio-8080-exec-4] c.f.tj.action.UserLookHistoryAction      : 请求参数：userid251
2019-04-26 10:29:53.729  INFO 9400 --- [http-nio-8080-exec-4] c.f.tj.action.UserLookHistoryAction      : 请求参数：lookid254
2019-04-26 10:29:53.730 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.U.selectByUserLookHistory        : ==>  Preparing: select id, userid, lookid, looktime, lookupdated, spare, spareint from user_look_history where userid = ? and lookid = ? 
2019-04-26 10:29:53.730 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.U.selectByUserLookHistory        : ==> Parameters: 251(Integer), 254(Integer)
2019-04-26 10:29:53.730 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.U.selectByUserLookHistory        : <==      Total: 1
2019-04-26 10:29:53.730  INFO 9400 --- [http-nio-8080-exec-4] c.f.t.s.impl.UserLookHistoryServiceImpl  : userLookHistoryinfo:UserLookHistory [Hash = -161755403, id=110, userid=251, lookid=254, looktime=2019-04-25, lookupdated=Thu Apr 25 14:53:04 CST 2019, spare=null, spareint=null, serialVersionUID=1]
2019-04-26 10:29:55.910  INFO 9400 --- [http-nio-8080-exec-10] com.foreseers.tj.action.UserMatAction    : 进入推荐附近的人的方法
2019-04-26 10:29:55.910  INFO 9400 --- [http-nio-8080-exec-10] com.foreseers.tj.action.UserMatAction    : 请求参数：country:null
2019-04-26 10:29:55.910  INFO 9400 --- [http-nio-8080-exec-10] com.foreseers.tj.action.UserMatAction    : 请求参数：city:null
2019-04-26 10:29:55.910  INFO 9400 --- [http-nio-8080-exec-10] com.foreseers.tj.action.UserMatAction    : 请求参数：area:null
2019-04-26 10:29:55.910  INFO 9400 --- [http-nio-8080-exec-10] com.foreseers.tj.action.UserMatAction    : 请求参数：facebook:100002
2019-04-26 10:29:55.910  INFO 9400 --- [http-nio-8080-exec-10] com.foreseers.tj.action.UserMatAction    : 请求参数：经度:39.176924
2019-04-26 10:29:55.910  INFO 9400 --- [http-nio-8080-exec-10] com.foreseers.tj.action.UserMatAction    : 请求参数：纬度:117.133264
2019-04-26 10:29:55.910  INFO 9400 --- [http-nio-8080-exec-10] com.foreseers.tj.action.UserMatAction    : 请求参数：sex:
2019-04-26 10:29:55.910  INFO 9400 --- [http-nio-8080-exec-10] com.foreseers.tj.action.UserMatAction    : 请求参数：筛选条件年龄:12
2019-04-26 10:29:55.910  INFO 9400 --- [http-nio-8080-exec-10] com.foreseers.tj.action.UserMatAction    : 请求参数：筛选条件年龄:50
2019-04-26 10:29:55.910  INFO 9400 --- [http-nio-8080-exec-10] com.foreseers.tj.action.UserMatAction    : 请求参数：筛选条件距离:100
2019-04-26 10:29:55.911 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.U.updateByFaceIDSelective        : ==>  Preparing: update dt_user SET facebook = ?, lat = ?, lng = ? where facebook = ? 
2019-04-26 10:29:55.911 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.U.updateByFaceIDSelective        : ==> Parameters: 100002(String), 39.176924(Double), 117.133264(Double), 100002(String)
2019-04-26 10:29:55.912 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.U.updateByFaceIDSelective        : <==    Updates: 1
2019-04-26 10:29:55.912  INFO 9400 --- [http-nio-8080-exec-10] com.foreseers.tj.action.UserMatAction    : 将个人信息更新到数据库
2019-04-26 10:29:55.912 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.tj.mapper.UserMapper.QueryUser       : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where facebook = ? 
2019-04-26 10:29:55.913 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.tj.mapper.UserMapper.QueryUser       : ==> Parameters: 100002(String)
2019-04-26 10:29:55.913 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.tj.mapper.UserMapper.QueryUser       : <==      Total: 1
2019-04-26 10:29:55.914 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.mapper.UserMapper.QueryUserByCity  : ==>  Preparing: select id from dt_user where reservedint >= ? and reservedint <= ? and id != ? 
2019-04-26 10:29:55.914 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.mapper.UserMapper.QueryUserByCity  : ==> Parameters: 12(Integer), 50(Integer), 251(Integer)
2019-04-26 10:29:55.915  INFO 9400 --- [http-nio-8080-exec-9] c.foreseers.tj.action.UserCanumsAction   : 获取用户的擦字子数方法
2019-04-26 10:29:55.915 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.mapper.UserMapper.QueryUserByCity  : <==      Total: 4
2019-04-26 10:29:55.916 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.U.selectByUserKey                : ==>  Preparing: select id, userid, everyday, vipeveryday, nums, updated, buynums, countnums, spare, spare1, spareint from user_canums where userid = ? 
2019-04-26 10:29:55.916  INFO 9400 --- [http-nio-8080-exec-10] com.foreseers.tj.action.UserMatAction    : idlist:[250, 254, 255, 256]
2019-04-26 10:29:55.916  INFO 9400 --- [http-nio-8080-exec-10] com.foreseers.tj.action.UserMatAction    : 通过筛选条件筛选用户
2019-04-26 10:29:55.916 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.U.selectByUserKey                : ==> Parameters: 251(Integer)
2019-04-26 10:29:55.916 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 10:29:55.916 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 250(Integer)
2019-04-26 10:29:55.916 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.U.selectByUserKey                : <==      Total: 1
2019-04-26 10:29:55.917 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 10:29:55.917  INFO 9400 --- [http-nio-8080-exec-10] com.foreseers.tj.action.UserMatAction    : 经度：39.17696
2019-04-26 10:29:55.917  INFO 9400 --- [http-nio-8080-exec-10] com.foreseers.tj.action.UserMatAction    : 经度：117.133395
2019-04-26 10:29:55.917  INFO 9400 --- [http-nio-8080-exec-10] com.foreseers.tj.action.UserMatAction    : 距离：1
2019-04-26 10:29:55.918 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.U.updateByzhuidKeySelective      : ==>  Preparing: update dt_usermatch SET distance = ? where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:29:55.918 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.U.updateByzhuidKeySelective      : ==> Parameters: 1(Integer), 251(Integer), 250(Integer), 250(Integer), 251(Integer)
2019-04-26 10:29:55.918 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.U.updateByzhuidKeySelective      : <==    Updates: 1
2019-04-26 10:29:55.920  INFO 9400 --- [http-nio-8080-exec-3] c.foreseers.tj.action.UserCanumsAction   : 获取用户的擦字子数方法
2019-04-26 10:29:55.921 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.U.selectByUserKey                : ==>  Preparing: select id, userid, everyday, vipeveryday, nums, updated, buynums, countnums, spare, spare1, spareint from user_canums where userid = ? 
2019-04-26 10:29:55.921 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.U.selectByUserKey                : ==> Parameters: 251(Integer)
2019-04-26 10:29:55.922  INFO 9400 --- [http-nio-8080-exec-10] com.foreseers.tj.action.UserMatAction    : 通过筛选条件筛选用户
2019-04-26 10:29:55.922 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.U.selectByUserKey                : <==      Total: 1
2019-04-26 10:29:55.922 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 10:29:55.923 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 254(Integer)
2019-04-26 10:29:55.924 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 10:29:55.925  INFO 9400 --- [http-nio-8080-exec-10] com.foreseers.tj.action.UserMatAction    : 经度：39.17696
2019-04-26 10:29:55.925  INFO 9400 --- [http-nio-8080-exec-10] com.foreseers.tj.action.UserMatAction    : 经度：117.133395
2019-04-26 10:29:55.925  INFO 9400 --- [http-nio-8080-exec-10] com.foreseers.tj.action.UserMatAction    : 距离：1
2019-04-26 10:29:55.925 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.U.updateByzhuidKeySelective      : ==>  Preparing: update dt_usermatch SET distance = ? where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:29:55.926 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.U.updateByzhuidKeySelective      : ==> Parameters: 1(Integer), 251(Integer), 254(Integer), 254(Integer), 251(Integer)
2019-04-26 10:29:55.926 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.U.updateByzhuidKeySelective      : <==    Updates: 1
2019-04-26 10:29:55.928  INFO 9400 --- [http-nio-8080-exec-10] com.foreseers.tj.action.UserMatAction    : 通过筛选条件筛选用户
2019-04-26 10:29:55.928 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 10:29:55.928 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 255(Integer)
2019-04-26 10:29:55.929 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 10:29:55.929  INFO 9400 --- [http-nio-8080-exec-10] com.foreseers.tj.action.UserMatAction    : 经度：39.176995
2019-04-26 10:29:55.929  INFO 9400 --- [http-nio-8080-exec-10] com.foreseers.tj.action.UserMatAction    : 经度：117.133437
2019-04-26 10:29:55.929  INFO 9400 --- [http-nio-8080-exec-10] com.foreseers.tj.action.UserMatAction    : 距离：1
2019-04-26 10:29:55.929 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.U.updateByzhuidKeySelective      : ==>  Preparing: update dt_usermatch SET distance = ? where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:29:55.930 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.U.updateByzhuidKeySelective      : ==> Parameters: 1(Integer), 251(Integer), 255(Integer), 255(Integer), 251(Integer)
2019-04-26 10:29:55.930 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.U.updateByzhuidKeySelective      : <==    Updates: 1
2019-04-26 10:29:55.932  INFO 9400 --- [http-nio-8080-exec-10] com.foreseers.tj.action.UserMatAction    : 通过筛选条件筛选用户
2019-04-26 10:29:55.932 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 10:29:55.932 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 256(Integer)
2019-04-26 10:29:55.933 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 10:29:55.933  INFO 9400 --- [http-nio-8080-exec-10] com.foreseers.tj.action.UserMatAction    : 经度：39.176677
2019-04-26 10:29:55.933  INFO 9400 --- [http-nio-8080-exec-10] com.foreseers.tj.action.UserMatAction    : 经度：117.132802
2019-04-26 10:29:55.933  INFO 9400 --- [http-nio-8080-exec-10] com.foreseers.tj.action.UserMatAction    : 距离：1
2019-04-26 10:29:55.934 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.U.updateByzhuidKeySelective      : ==>  Preparing: update dt_usermatch SET distance = ? where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:29:55.934 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.U.updateByzhuidKeySelective      : ==> Parameters: 1(Integer), 251(Integer), 256(Integer), 256(Integer), 251(Integer)
2019-04-26 10:29:55.934 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.U.updateByzhuidKeySelective      : <==    Updates: 1
2019-04-26 10:29:55.937 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.tj.mapper.UserMapper.QueryUserByNUM  : ==>  Preparing: select id from (select * from dt_user where id != ? ORDER BY num desc LIMIT ? ) t ORDER BY RAND() LIMIT ?; 
2019-04-26 10:29:55.937 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.tj.mapper.UserMapper.QueryUserByNUM  : ==> Parameters: 251(Integer), 20(Integer), 2(Integer)
2019-04-26 10:29:55.938 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.tj.mapper.UserMapper.QueryUserByNUM  : <==      Total: 2
2019-04-26 10:29:55.939  INFO 9400 --- [http-nio-8080-exec-10] com.foreseers.tj.action.UserMatAction    : 推送的用户id为：252
2019-04-26 10:29:55.939 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 10:29:55.939 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 252(Integer)
2019-04-26 10:29:55.940 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 10:29:55.941  INFO 9400 --- [http-nio-8080-exec-10] com.foreseers.tj.action.UserMatAction    : 计算推送用户的距离：1
2019-04-26 10:29:55.941  INFO 9400 --- [http-nio-8080-exec-10] com.foreseers.tj.action.UserMatAction    : 重新计算推送的人距离
2019-04-26 10:29:55.941 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.U.updateByzhuidKeySelective      : ==>  Preparing: update dt_usermatch SET distance = ? where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:29:55.942 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.U.updateByzhuidKeySelective      : ==> Parameters: 1(Integer), 251(Integer), 252(Integer), 252(Integer), 251(Integer)
2019-04-26 10:29:55.942 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.U.updateByzhuidKeySelective      : <==    Updates: 1
2019-04-26 10:29:55.944 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UserDefriendMapper.getBlackList  : ==>  Preparing: select id, userid, blackid, defriendtime, updated, spare, spareint from user_defriend where userid = ? 
2019-04-26 10:29:55.944 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UserDefriendMapper.getBlackList  : ==> Parameters: 251(Integer)
2019-04-26 10:29:55.944 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UserDefriendMapper.getBlackList  : <==      Total: 0
2019-04-26 10:29:55.944  INFO 9400 --- [http-nio-8080-exec-10] com.foreseers.tj.action.UserMatAction    : 查询黑名单列表：blacks：[]
2019-04-26 10:29:55.945 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UsermatchMapper.usermatchQuery   : ==>  Preparing: select id, zhuid, congid, userscore, userdesc, commentgood, commentbad, characteristicgood, characteristicbad, mindscore, minddesc, bodyscore, bodydesc, characterscore, characterdesc, distance, spare, spare1, spare2 , commentdesc, characteristicdesc from dt_usermatch where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:29:55.945 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UsermatchMapper.usermatchQuery   : ==> Parameters: 251(Integer), 250(Integer), 250(Integer), 251(Integer)
2019-04-26 10:29:55.946 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UsermatchMapper.usermatchQuery   : <==      Total: 1
2019-04-26 10:29:55.946 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UsermatchMapper.usermatchQuery   : ==>  Preparing: select id, zhuid, congid, userscore, userdesc, commentgood, commentbad, characteristicgood, characteristicbad, mindscore, minddesc, bodyscore, bodydesc, characterscore, characterdesc, distance, spare, spare1, spare2 , commentdesc, characteristicdesc from dt_usermatch where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:29:55.947 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UsermatchMapper.usermatchQuery   : ==> Parameters: 251(Integer), 254(Integer), 254(Integer), 251(Integer)
2019-04-26 10:29:55.947 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UsermatchMapper.usermatchQuery   : <==      Total: 1
2019-04-26 10:29:55.948 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UsermatchMapper.usermatchQuery   : ==>  Preparing: select id, zhuid, congid, userscore, userdesc, commentgood, commentbad, characteristicgood, characteristicbad, mindscore, minddesc, bodyscore, bodydesc, characterscore, characterdesc, distance, spare, spare1, spare2 , commentdesc, characteristicdesc from dt_usermatch where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:29:55.948 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UsermatchMapper.usermatchQuery   : ==> Parameters: 251(Integer), 255(Integer), 255(Integer), 251(Integer)
2019-04-26 10:29:55.949 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UsermatchMapper.usermatchQuery   : <==      Total: 1
2019-04-26 10:29:55.950 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UsermatchMapper.usermatchQuery   : ==>  Preparing: select id, zhuid, congid, userscore, userdesc, commentgood, commentbad, characteristicgood, characteristicbad, mindscore, minddesc, bodyscore, bodydesc, characterscore, characterdesc, distance, spare, spare1, spare2 , commentdesc, characteristicdesc from dt_usermatch where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:29:55.950 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UsermatchMapper.usermatchQuery   : ==> Parameters: 251(Integer), 256(Integer), 256(Integer), 251(Integer)
2019-04-26 10:29:55.951 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UsermatchMapper.usermatchQuery   : <==      Total: 1
2019-04-26 10:29:55.952 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UsermatchMapper.usermatchQuery   : ==>  Preparing: select id, zhuid, congid, userscore, userdesc, commentgood, commentbad, characteristicgood, characteristicbad, mindscore, minddesc, bodyscore, bodydesc, characterscore, characterdesc, distance, spare, spare1, spare2 , commentdesc, characteristicdesc from dt_usermatch where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:29:55.952 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UsermatchMapper.usermatchQuery   : ==> Parameters: 251(Integer), 252(Integer), 252(Integer), 251(Integer)
2019-04-26 10:29:55.952 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UsermatchMapper.usermatchQuery   : <==      Total: 1
2019-04-26 10:29:55.953  INFO 9400 --- [http-nio-8080-exec-10] com.foreseers.tj.action.UserMatAction    : 命书用户ids:[]
2019-04-26 10:29:55.953  INFO 9400 --- [http-nio-8080-exec-10] com.foreseers.tj.action.UserMatAction    : 判断是否返回清晰头像
2019-04-26 10:29:55.953 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.U.selectUserFriend               : ==>  Preparing: select id, user_id, friend_id, user_reation, firendtime, lookhead, sendpix, lookimages, spareint, spare, spare1 from user_friend where (user_id = ? and friend_id = ?) or (friend_id = ? AND user_id = ?) 
2019-04-26 10:29:55.953 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.U.selectUserFriend               : ==> Parameters: 251(String), 250(String), 251(String), 250(String)
2019-04-26 10:29:55.953 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.U.selectUserFriend               : <==      Total: 1
2019-04-26 10:29:55.954  INFO 9400 --- [http-nio-8080-exec-10] com.foreseers.tj.action.UserMatAction    : 两人是好友关系，切可以返回清晰头像
2019-04-26 10:29:55.954 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 10:29:55.954 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 250(Integer)
2019-04-26 10:29:55.955 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 10:29:55.955 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UsermatchMapper.usermatchQuery   : ==>  Preparing: select id, zhuid, congid, userscore, userdesc, commentgood, commentbad, characteristicgood, characteristicbad, mindscore, minddesc, bodyscore, bodydesc, characterscore, characterdesc, distance, spare, spare1, spare2 , commentdesc, characteristicdesc from dt_usermatch where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:29:55.955 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UsermatchMapper.usermatchQuery   : ==> Parameters: 250(Integer), 251(Integer), 251(Integer), 250(Integer)
2019-04-26 10:29:55.956 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UsermatchMapper.usermatchQuery   : <==      Total: 1
2019-04-26 10:29:55.957 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.U.selectUserFriend               : ==>  Preparing: select id, user_id, friend_id, user_reation, firendtime, lookhead, sendpix, lookimages, spareint, spare, spare1 from user_friend where (user_id = ? and friend_id = ?) or (friend_id = ? AND user_id = ?) 
2019-04-26 10:29:55.957 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.U.selectUserFriend               : ==> Parameters: 251(String), 254(String), 251(String), 254(String)
2019-04-26 10:29:55.957 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.U.selectUserFriend               : <==      Total: 0
2019-04-26 10:29:55.958  INFO 9400 --- [http-nio-8080-exec-10] com.foreseers.tj.action.UserMatAction    : 两人不是好友关系，或者成为好友时间不够，判断是否使用过擦子
2019-04-26 10:29:55.958 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.U.selectByUserCaHistory          : ==>  Preparing: select id, userid, caid, usertime, userupdated, spare, spareint from user_ca_history where userid = ? and caid = ?; 
2019-04-26 10:29:55.958 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.U.selectByUserCaHistory          : ==> Parameters: 251(Integer), 254(Integer)
2019-04-26 10:29:55.959 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.U.selectByUserCaHistory          : <==      Total: 1
2019-04-26 10:29:55.959  INFO 9400 --- [http-nio-8080-exec-10] com.foreseers.tj.action.UserMatAction    : 使用过擦子，返回清晰头像
2019-04-26 10:29:55.959  INFO 9400 --- [http-nio-8080-exec-10] com.foreseers.tj.action.UserMatAction    : 没有使用过擦子，不能查看清晰头像
2019-04-26 10:29:55.959 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 10:29:55.959 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 254(Integer)
2019-04-26 10:29:55.960 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 10:29:55.961 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UsermatchMapper.usermatchQuery   : ==>  Preparing: select id, zhuid, congid, userscore, userdesc, commentgood, commentbad, characteristicgood, characteristicbad, mindscore, minddesc, bodyscore, bodydesc, characterscore, characterdesc, distance, spare, spare1, spare2 , commentdesc, characteristicdesc from dt_usermatch where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:29:55.961 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UsermatchMapper.usermatchQuery   : ==> Parameters: 254(Integer), 251(Integer), 251(Integer), 254(Integer)
2019-04-26 10:29:55.962 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UsermatchMapper.usermatchQuery   : <==      Total: 1
2019-04-26 10:29:55.962 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.U.selectUserFriend               : ==>  Preparing: select id, user_id, friend_id, user_reation, firendtime, lookhead, sendpix, lookimages, spareint, spare, spare1 from user_friend where (user_id = ? and friend_id = ?) or (friend_id = ? AND user_id = ?) 
2019-04-26 10:29:55.963 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.U.selectUserFriend               : ==> Parameters: 251(String), 255(String), 251(String), 255(String)
2019-04-26 10:29:55.963 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.U.selectUserFriend               : <==      Total: 0
2019-04-26 10:29:55.963  INFO 9400 --- [http-nio-8080-exec-10] com.foreseers.tj.action.UserMatAction    : 两人不是好友关系，或者成为好友时间不够，判断是否使用过擦子
2019-04-26 10:29:55.963 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.U.selectByUserCaHistory          : ==>  Preparing: select id, userid, caid, usertime, userupdated, spare, spareint from user_ca_history where userid = ? and caid = ?; 
2019-04-26 10:29:55.963 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.U.selectByUserCaHistory          : ==> Parameters: 251(Integer), 255(Integer)
2019-04-26 10:29:55.964 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.U.selectByUserCaHistory          : <==      Total: 0
2019-04-26 10:29:55.964  INFO 9400 --- [http-nio-8080-exec-10] com.foreseers.tj.action.UserMatAction    : 没有使用过擦子，不能查看清晰头像
2019-04-26 10:29:55.964 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 10:29:55.964 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 255(Integer)
2019-04-26 10:29:55.965 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 10:29:55.965 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UsermatchMapper.usermatchQuery   : ==>  Preparing: select id, zhuid, congid, userscore, userdesc, commentgood, commentbad, characteristicgood, characteristicbad, mindscore, minddesc, bodyscore, bodydesc, characterscore, characterdesc, distance, spare, spare1, spare2 , commentdesc, characteristicdesc from dt_usermatch where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:29:55.965 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UsermatchMapper.usermatchQuery   : ==> Parameters: 255(Integer), 251(Integer), 251(Integer), 255(Integer)
2019-04-26 10:29:55.966 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UsermatchMapper.usermatchQuery   : <==      Total: 1
2019-04-26 10:29:55.966 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.U.selectUserFriend               : ==>  Preparing: select id, user_id, friend_id, user_reation, firendtime, lookhead, sendpix, lookimages, spareint, spare, spare1 from user_friend where (user_id = ? and friend_id = ?) or (friend_id = ? AND user_id = ?) 
2019-04-26 10:29:55.966 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.U.selectUserFriend               : ==> Parameters: 251(String), 256(String), 251(String), 256(String)
2019-04-26 10:29:55.967 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.U.selectUserFriend               : <==      Total: 0
2019-04-26 10:29:55.967  INFO 9400 --- [http-nio-8080-exec-10] com.foreseers.tj.action.UserMatAction    : 两人不是好友关系，或者成为好友时间不够，判断是否使用过擦子
2019-04-26 10:29:55.967 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.U.selectByUserCaHistory          : ==>  Preparing: select id, userid, caid, usertime, userupdated, spare, spareint from user_ca_history where userid = ? and caid = ?; 
2019-04-26 10:29:55.967 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.U.selectByUserCaHistory          : ==> Parameters: 251(Integer), 256(Integer)
2019-04-26 10:29:55.967 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.U.selectByUserCaHistory          : <==      Total: 0
2019-04-26 10:29:55.968  INFO 9400 --- [http-nio-8080-exec-10] com.foreseers.tj.action.UserMatAction    : 没有使用过擦子，不能查看清晰头像
2019-04-26 10:29:55.968 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 10:29:55.968 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 256(Integer)
2019-04-26 10:29:55.968 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 10:29:55.969 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UsermatchMapper.usermatchQuery   : ==>  Preparing: select id, zhuid, congid, userscore, userdesc, commentgood, commentbad, characteristicgood, characteristicbad, mindscore, minddesc, bodyscore, bodydesc, characterscore, characterdesc, distance, spare, spare1, spare2 , commentdesc, characteristicdesc from dt_usermatch where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:29:55.969 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UsermatchMapper.usermatchQuery   : ==> Parameters: 256(Integer), 251(Integer), 251(Integer), 256(Integer)
2019-04-26 10:29:55.969 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UsermatchMapper.usermatchQuery   : <==      Total: 1
2019-04-26 10:29:55.970 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.U.selectUserFriend               : ==>  Preparing: select id, user_id, friend_id, user_reation, firendtime, lookhead, sendpix, lookimages, spareint, spare, spare1 from user_friend where (user_id = ? and friend_id = ?) or (friend_id = ? AND user_id = ?) 
2019-04-26 10:29:55.970 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.U.selectUserFriend               : ==> Parameters: 251(String), 252(String), 251(String), 252(String)
2019-04-26 10:29:55.970 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.U.selectUserFriend               : <==      Total: 0
2019-04-26 10:29:55.970  INFO 9400 --- [http-nio-8080-exec-10] com.foreseers.tj.action.UserMatAction    : 两人不是好友关系，或者成为好友时间不够，判断是否使用过擦子
2019-04-26 10:29:55.971 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.U.selectByUserCaHistory          : ==>  Preparing: select id, userid, caid, usertime, userupdated, spare, spareint from user_ca_history where userid = ? and caid = ?; 
2019-04-26 10:29:55.971 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.U.selectByUserCaHistory          : ==> Parameters: 251(Integer), 252(Integer)
2019-04-26 10:29:55.971 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.U.selectByUserCaHistory          : <==      Total: 0
2019-04-26 10:29:55.971  INFO 9400 --- [http-nio-8080-exec-10] com.foreseers.tj.action.UserMatAction    : 没有使用过擦子，不能查看清晰头像
2019-04-26 10:29:55.972 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 10:29:55.972 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 252(Integer)
2019-04-26 10:29:55.972 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 10:29:55.973 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UsermatchMapper.usermatchQuery   : ==>  Preparing: select id, zhuid, congid, userscore, userdesc, commentgood, commentbad, characteristicgood, characteristicbad, mindscore, minddesc, bodyscore, bodydesc, characterscore, characterdesc, distance, spare, spare1, spare2 , commentdesc, characteristicdesc from dt_usermatch where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 10:29:55.973 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UsermatchMapper.usermatchQuery   : ==> Parameters: 252(Integer), 251(Integer), 251(Integer), 252(Integer)
2019-04-26 10:29:55.973 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UsermatchMapper.usermatchQuery   : <==      Total: 1
2019-04-26 10:29:55.974  INFO 9400 --- [http-nio-8080-exec-10] com.foreseers.tj.action.UserMatAction    : 返回的参数：[com.foreseers.tj.model.ReturnUser@222b9fc0, com.foreseers.tj.model.ReturnUser@2b046d8d, com.foreseers.tj.model.ReturnUser@5662e2dd, com.foreseers.tj.model.ReturnUser@1e641eeb, com.foreseers.tj.model.ReturnUser@604f5778]
2019-04-26 11:07:35.616 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 11:07:35.616 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 251(Integer)
2019-04-26 11:07:35.617 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 11:07:35.618 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.U.selectUserFriendList           : ==>  Preparing: select id, user_id, friend_id, user_reation, firendtime, lookhead, sendpix, lookimages, spareint, spare, spare1 from user_friend WHERE user_id = ? or friend_id = ?; 
2019-04-26 11:07:35.618 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.U.selectUserFriendList           : ==> Parameters: 251(String), 251(String)
2019-04-26 11:07:35.619 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.U.selectUserFriendList           : <==      Total: 2
2019-04-26 11:07:35.619  INFO 9400 --- [http-nio-8080-exec-3] c.f.t.s.impl.UserFriendServiceImpl       : 刚成为好友24小时，可以查看头像，和发送图片
2019-04-26 11:07:35.619 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.U.updateByPrimaryKeySelective    : ==>  Preparing: update user_friend SET lookhead = ?, sendpix = ? where id = ? 
2019-04-26 11:07:35.619 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.U.updateByPrimaryKeySelective    : ==> Parameters: 1(Integer), 1(Integer), 35(Integer)
2019-04-26 11:07:35.619 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.U.updateByPrimaryKeySelective    : <==    Updates: 1
2019-04-26 11:07:35.619  INFO 9400 --- [http-nio-8080-exec-3] c.f.t.s.impl.UserFriendServiceImpl       : 刚成为好友8小时，可以查看头像
2019-04-26 11:07:35.620 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.U.updateByPrimaryKeySelective    : ==>  Preparing: update user_friend SET lookhead = ? where id = ? 
2019-04-26 11:07:35.620 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.U.updateByPrimaryKeySelective    : ==> Parameters: 1(Integer), 35(Integer)
2019-04-26 11:07:35.620 DEBUG 9400 --- [http-nio-8080-exec-3] c.f.t.m.U.updateByPrimaryKeySelective    : <==    Updates: 1
2019-04-26 11:07:35.657  INFO 9400 --- [http-nio-8080-exec-10] c.foreseers.tj.action.UserCanumsAction   : 进入更新擦子数方法
2019-04-26 11:07:35.658 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 11:07:35.658 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 251(Integer)
2019-04-26 11:07:35.658 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 11:07:35.659 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.U.selectByUserKey                : ==>  Preparing: select id, userid, everyday, vipeveryday, nums, updated, buynums, countnums, spare, spare1, spareint from user_canums where userid = ? 
2019-04-26 11:07:35.659 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.U.selectByUserKey                : ==> Parameters: 251(Integer)
2019-04-26 11:07:35.660 DEBUG 9400 --- [http-nio-8080-exec-10] c.f.t.m.U.selectByUserKey                : <==      Total: 1
2019-04-26 11:07:35.758  INFO 9400 --- [http-nio-8080-exec-8] com.foreseers.tj.action.UserMatAction    : 进入推荐附近的人的方法
2019-04-26 11:07:35.759  INFO 9400 --- [http-nio-8080-exec-8] com.foreseers.tj.action.UserMatAction    : 请求参数：country:null
2019-04-26 11:07:35.759  INFO 9400 --- [http-nio-8080-exec-8] com.foreseers.tj.action.UserMatAction    : 请求参数：city:null
2019-04-26 11:07:35.759  INFO 9400 --- [http-nio-8080-exec-8] com.foreseers.tj.action.UserMatAction    : 请求参数：area:null
2019-04-26 11:07:35.759  INFO 9400 --- [http-nio-8080-exec-8] com.foreseers.tj.action.UserMatAction    : 请求参数：facebook:100002
2019-04-26 11:07:35.759  INFO 9400 --- [http-nio-8080-exec-8] com.foreseers.tj.action.UserMatAction    : 请求参数：经度:39.177394
2019-04-26 11:07:35.759  INFO 9400 --- [http-nio-8080-exec-8] com.foreseers.tj.action.UserMatAction    : 请求参数：纬度:117.131589
2019-04-26 11:07:35.759  INFO 9400 --- [http-nio-8080-exec-8] com.foreseers.tj.action.UserMatAction    : 请求参数：sex:
2019-04-26 11:07:35.759  INFO 9400 --- [http-nio-8080-exec-8] com.foreseers.tj.action.UserMatAction    : 请求参数：筛选条件年龄:12
2019-04-26 11:07:35.759  INFO 9400 --- [http-nio-8080-exec-8] com.foreseers.tj.action.UserMatAction    : 请求参数：筛选条件年龄:50
2019-04-26 11:07:35.759  INFO 9400 --- [http-nio-8080-exec-8] com.foreseers.tj.action.UserMatAction    : 请求参数：筛选条件距离:100
2019-04-26 11:07:35.759 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.U.updateByFaceIDSelective        : ==>  Preparing: update dt_user SET facebook = ?, lat = ?, lng = ? where facebook = ? 
2019-04-26 11:07:35.759 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.U.updateByFaceIDSelective        : ==> Parameters: 100002(String), 39.177394(Double), 117.131589(Double), 100002(String)
2019-04-26 11:07:35.760 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.U.updateByFaceIDSelective        : <==    Updates: 1
2019-04-26 11:07:35.763  INFO 9400 --- [http-nio-8080-exec-8] com.foreseers.tj.action.UserMatAction    : 将个人信息更新到数据库
2019-04-26 11:07:35.763 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.tj.mapper.UserMapper.QueryUser       : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where facebook = ? 
2019-04-26 11:07:35.763 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.tj.mapper.UserMapper.QueryUser       : ==> Parameters: 100002(String)
2019-04-26 11:07:35.764 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.tj.mapper.UserMapper.QueryUser       : <==      Total: 1
2019-04-26 11:07:35.764 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.mapper.UserMapper.QueryUserByCity  : ==>  Preparing: select id from dt_user where reservedint >= ? and reservedint <= ? and id != ? 
2019-04-26 11:07:35.764 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.mapper.UserMapper.QueryUserByCity  : ==> Parameters: 12(Integer), 50(Integer), 251(Integer)
2019-04-26 11:07:35.765 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.mapper.UserMapper.QueryUserByCity  : <==      Total: 4
2019-04-26 11:07:35.765  INFO 9400 --- [http-nio-8080-exec-8] com.foreseers.tj.action.UserMatAction    : idlist:[250, 254, 255, 256]
2019-04-26 11:07:35.765  INFO 9400 --- [http-nio-8080-exec-8] com.foreseers.tj.action.UserMatAction    : 通过筛选条件筛选用户
2019-04-26 11:07:35.765 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 11:07:35.765 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 250(Integer)
2019-04-26 11:07:35.765 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 11:07:35.766  INFO 9400 --- [http-nio-8080-exec-8] com.foreseers.tj.action.UserMatAction    : 经度：39.17696
2019-04-26 11:07:35.766  INFO 9400 --- [http-nio-8080-exec-8] com.foreseers.tj.action.UserMatAction    : 经度：117.133395
2019-04-26 11:07:35.766  INFO 9400 --- [http-nio-8080-exec-8] com.foreseers.tj.action.UserMatAction    : 距离：1
2019-04-26 11:07:35.766 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.U.updateByzhuidKeySelective      : ==>  Preparing: update dt_usermatch SET distance = ? where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 11:07:35.766 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.U.updateByzhuidKeySelective      : ==> Parameters: 1(Integer), 251(Integer), 250(Integer), 250(Integer), 251(Integer)
2019-04-26 11:07:35.767 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.U.updateByzhuidKeySelective      : <==    Updates: 1
2019-04-26 11:07:35.768  INFO 9400 --- [http-nio-8080-exec-8] com.foreseers.tj.action.UserMatAction    : 通过筛选条件筛选用户
2019-04-26 11:07:35.768 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 11:07:35.768 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 254(Integer)
2019-04-26 11:07:35.769 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 11:07:35.769  INFO 9400 --- [http-nio-8080-exec-8] com.foreseers.tj.action.UserMatAction    : 经度：39.17696
2019-04-26 11:07:35.769  INFO 9400 --- [http-nio-8080-exec-8] com.foreseers.tj.action.UserMatAction    : 经度：117.133395
2019-04-26 11:07:35.769  INFO 9400 --- [http-nio-8080-exec-8] com.foreseers.tj.action.UserMatAction    : 距离：1
2019-04-26 11:07:35.769 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.U.updateByzhuidKeySelective      : ==>  Preparing: update dt_usermatch SET distance = ? where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 11:07:35.770 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.U.updateByzhuidKeySelective      : ==> Parameters: 1(Integer), 251(Integer), 254(Integer), 254(Integer), 251(Integer)
2019-04-26 11:07:35.770 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.U.updateByzhuidKeySelective      : <==    Updates: 1
2019-04-26 11:07:35.771  INFO 9400 --- [http-nio-8080-exec-8] com.foreseers.tj.action.UserMatAction    : 通过筛选条件筛选用户
2019-04-26 11:07:35.771 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 11:07:35.771 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 255(Integer)
2019-04-26 11:07:35.772 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 11:07:35.772  INFO 9400 --- [http-nio-8080-exec-8] com.foreseers.tj.action.UserMatAction    : 经度：39.176995
2019-04-26 11:07:35.772  INFO 9400 --- [http-nio-8080-exec-8] com.foreseers.tj.action.UserMatAction    : 经度：117.133437
2019-04-26 11:07:35.772  INFO 9400 --- [http-nio-8080-exec-8] com.foreseers.tj.action.UserMatAction    : 距离：1
2019-04-26 11:07:35.772 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.U.updateByzhuidKeySelective      : ==>  Preparing: update dt_usermatch SET distance = ? where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 11:07:35.773 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.U.updateByzhuidKeySelective      : ==> Parameters: 1(Integer), 251(Integer), 255(Integer), 255(Integer), 251(Integer)
2019-04-26 11:07:35.773 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.U.updateByzhuidKeySelective      : <==    Updates: 1
2019-04-26 11:07:35.774  INFO 9400 --- [http-nio-8080-exec-8] com.foreseers.tj.action.UserMatAction    : 通过筛选条件筛选用户
2019-04-26 11:07:35.775 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 11:07:35.775 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 256(Integer)
2019-04-26 11:07:35.775 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 11:07:35.775  INFO 9400 --- [http-nio-8080-exec-8] com.foreseers.tj.action.UserMatAction    : 经度：39.176677
2019-04-26 11:07:35.776  INFO 9400 --- [http-nio-8080-exec-8] com.foreseers.tj.action.UserMatAction    : 经度：117.132802
2019-04-26 11:07:35.776  INFO 9400 --- [http-nio-8080-exec-8] com.foreseers.tj.action.UserMatAction    : 距离：1
2019-04-26 11:07:35.776 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.U.updateByzhuidKeySelective      : ==>  Preparing: update dt_usermatch SET distance = ? where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 11:07:35.776 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.U.updateByzhuidKeySelective      : ==> Parameters: 1(Integer), 251(Integer), 256(Integer), 256(Integer), 251(Integer)
2019-04-26 11:07:35.776 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.U.updateByzhuidKeySelective      : <==    Updates: 1
2019-04-26 11:07:35.777  INFO 9400 --- [http-nio-8080-exec-2] c.foreseers.tj.action.UserCanumsAction   : 获取用户的擦字子数方法
2019-04-26 11:07:35.778  INFO 9400 --- [http-nio-8080-exec-7] c.foreseers.tj.action.UserCanumsAction   : 获取用户的擦字子数方法
2019-04-26 11:07:35.779 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.tj.mapper.UserMapper.QueryUserByNUM  : ==>  Preparing: select id from (select * from dt_user where id != ? ORDER BY num desc LIMIT ? ) t ORDER BY RAND() LIMIT ?; 
2019-04-26 11:07:35.779 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.tj.mapper.UserMapper.QueryUserByNUM  : ==> Parameters: 251(Integer), 20(Integer), 2(Integer)
2019-04-26 11:07:35.779 DEBUG 9400 --- [http-nio-8080-exec-7] c.f.t.m.U.selectByUserKey                : ==>  Preparing: select id, userid, everyday, vipeveryday, nums, updated, buynums, countnums, spare, spare1, spareint from user_canums where userid = ? 
2019-04-26 11:07:35.779 DEBUG 9400 --- [http-nio-8080-exec-2] c.f.t.m.U.selectByUserKey                : ==>  Preparing: select id, userid, everyday, vipeveryday, nums, updated, buynums, countnums, spare, spare1, spareint from user_canums where userid = ? 
2019-04-26 11:07:35.779 DEBUG 9400 --- [http-nio-8080-exec-7] c.f.t.m.U.selectByUserKey                : ==> Parameters: 251(Integer)
2019-04-26 11:07:35.779 DEBUG 9400 --- [http-nio-8080-exec-2] c.f.t.m.U.selectByUserKey                : ==> Parameters: 251(Integer)
2019-04-26 11:07:35.780 DEBUG 9400 --- [http-nio-8080-exec-2] c.f.t.m.U.selectByUserKey                : <==      Total: 1
2019-04-26 11:07:35.780 DEBUG 9400 --- [http-nio-8080-exec-7] c.f.t.m.U.selectByUserKey                : <==      Total: 1
2019-04-26 11:07:35.780 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.tj.mapper.UserMapper.QueryUserByNUM  : <==      Total: 2
2019-04-26 11:07:35.780 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.UserDefriendMapper.getBlackList  : ==>  Preparing: select id, userid, blackid, defriendtime, updated, spare, spareint from user_defriend where userid = ? 
2019-04-26 11:07:35.780 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.UserDefriendMapper.getBlackList  : ==> Parameters: 251(Integer)
2019-04-26 11:07:35.780 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.UserDefriendMapper.getBlackList  : <==      Total: 0
2019-04-26 11:07:35.781  INFO 9400 --- [http-nio-8080-exec-8] com.foreseers.tj.action.UserMatAction    : 查询黑名单列表：blacks：[]
2019-04-26 11:07:35.781 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.UsermatchMapper.usermatchQuery   : ==>  Preparing: select id, zhuid, congid, userscore, userdesc, commentgood, commentbad, characteristicgood, characteristicbad, mindscore, minddesc, bodyscore, bodydesc, characterscore, characterdesc, distance, spare, spare1, spare2 , commentdesc, characteristicdesc from dt_usermatch where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 11:07:35.781 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.UsermatchMapper.usermatchQuery   : ==> Parameters: 251(Integer), 250(Integer), 250(Integer), 251(Integer)
2019-04-26 11:07:35.781 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.UsermatchMapper.usermatchQuery   : <==      Total: 1
2019-04-26 11:07:35.782 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.UsermatchMapper.usermatchQuery   : ==>  Preparing: select id, zhuid, congid, userscore, userdesc, commentgood, commentbad, characteristicgood, characteristicbad, mindscore, minddesc, bodyscore, bodydesc, characterscore, characterdesc, distance, spare, spare1, spare2 , commentdesc, characteristicdesc from dt_usermatch where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 11:07:35.782 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.UsermatchMapper.usermatchQuery   : ==> Parameters: 251(Integer), 254(Integer), 254(Integer), 251(Integer)
2019-04-26 11:07:35.782 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.UsermatchMapper.usermatchQuery   : <==      Total: 1
2019-04-26 11:07:35.783 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.UsermatchMapper.usermatchQuery   : ==>  Preparing: select id, zhuid, congid, userscore, userdesc, commentgood, commentbad, characteristicgood, characteristicbad, mindscore, minddesc, bodyscore, bodydesc, characterscore, characterdesc, distance, spare, spare1, spare2 , commentdesc, characteristicdesc from dt_usermatch where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 11:07:35.783 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.UsermatchMapper.usermatchQuery   : ==> Parameters: 251(Integer), 255(Integer), 255(Integer), 251(Integer)
2019-04-26 11:07:35.783 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.UsermatchMapper.usermatchQuery   : <==      Total: 1
2019-04-26 11:07:35.784 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.UsermatchMapper.usermatchQuery   : ==>  Preparing: select id, zhuid, congid, userscore, userdesc, commentgood, commentbad, characteristicgood, characteristicbad, mindscore, minddesc, bodyscore, bodydesc, characterscore, characterdesc, distance, spare, spare1, spare2 , commentdesc, characteristicdesc from dt_usermatch where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 11:07:35.784 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.UsermatchMapper.usermatchQuery   : ==> Parameters: 251(Integer), 256(Integer), 256(Integer), 251(Integer)
2019-04-26 11:07:35.784 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.UsermatchMapper.usermatchQuery   : <==      Total: 1
2019-04-26 11:07:35.784  INFO 9400 --- [http-nio-8080-exec-8] com.foreseers.tj.action.UserMatAction    : 命书用户ids:[]
2019-04-26 11:07:35.785  INFO 9400 --- [http-nio-8080-exec-8] com.foreseers.tj.action.UserMatAction    : 判断是否返回清晰头像
2019-04-26 11:07:35.785 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.U.selectUserFriend               : ==>  Preparing: select id, user_id, friend_id, user_reation, firendtime, lookhead, sendpix, lookimages, spareint, spare, spare1 from user_friend where (user_id = ? and friend_id = ?) or (friend_id = ? AND user_id = ?) 
2019-04-26 11:07:35.785 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.U.selectUserFriend               : ==> Parameters: 251(String), 250(String), 251(String), 250(String)
2019-04-26 11:07:35.785 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.U.selectUserFriend               : <==      Total: 1
2019-04-26 11:07:35.785  INFO 9400 --- [http-nio-8080-exec-8] com.foreseers.tj.action.UserMatAction    : 两人是好友关系，切可以返回清晰头像
2019-04-26 11:07:35.785 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 11:07:35.785 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 250(Integer)
2019-04-26 11:07:35.786 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 11:07:35.786 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.UsermatchMapper.usermatchQuery   : ==>  Preparing: select id, zhuid, congid, userscore, userdesc, commentgood, commentbad, characteristicgood, characteristicbad, mindscore, minddesc, bodyscore, bodydesc, characterscore, characterdesc, distance, spare, spare1, spare2 , commentdesc, characteristicdesc from dt_usermatch where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 11:07:35.786 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.UsermatchMapper.usermatchQuery   : ==> Parameters: 250(Integer), 251(Integer), 251(Integer), 250(Integer)
2019-04-26 11:07:35.787 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.UsermatchMapper.usermatchQuery   : <==      Total: 1
2019-04-26 11:07:35.787 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.U.selectUserFriend               : ==>  Preparing: select id, user_id, friend_id, user_reation, firendtime, lookhead, sendpix, lookimages, spareint, spare, spare1 from user_friend where (user_id = ? and friend_id = ?) or (friend_id = ? AND user_id = ?) 
2019-04-26 11:07:35.787 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.U.selectUserFriend               : ==> Parameters: 251(String), 254(String), 251(String), 254(String)
2019-04-26 11:07:35.787 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.U.selectUserFriend               : <==      Total: 0
2019-04-26 11:07:35.788  INFO 9400 --- [http-nio-8080-exec-8] com.foreseers.tj.action.UserMatAction    : 两人不是好友关系，或者成为好友时间不够，判断是否使用过擦子
2019-04-26 11:07:35.788 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.U.selectByUserCaHistory          : ==>  Preparing: select id, userid, caid, usertime, userupdated, spare, spareint from user_ca_history where userid = ? and caid = ?; 
2019-04-26 11:07:35.788 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.U.selectByUserCaHistory          : ==> Parameters: 251(Integer), 254(Integer)
2019-04-26 11:07:35.788 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.U.selectByUserCaHistory          : <==      Total: 1
2019-04-26 11:07:35.789  INFO 9400 --- [http-nio-8080-exec-8] com.foreseers.tj.action.UserMatAction    : 使用过擦子，返回清晰头像
2019-04-26 11:07:35.789  INFO 9400 --- [http-nio-8080-exec-8] com.foreseers.tj.action.UserMatAction    : 没有使用过擦子，不能查看清晰头像
2019-04-26 11:07:35.789 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 11:07:35.789 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 254(Integer)
2019-04-26 11:07:35.789 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 11:07:35.790 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.UsermatchMapper.usermatchQuery   : ==>  Preparing: select id, zhuid, congid, userscore, userdesc, commentgood, commentbad, characteristicgood, characteristicbad, mindscore, minddesc, bodyscore, bodydesc, characterscore, characterdesc, distance, spare, spare1, spare2 , commentdesc, characteristicdesc from dt_usermatch where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 11:07:35.790 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.UsermatchMapper.usermatchQuery   : ==> Parameters: 254(Integer), 251(Integer), 251(Integer), 254(Integer)
2019-04-26 11:07:35.790 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.UsermatchMapper.usermatchQuery   : <==      Total: 1
2019-04-26 11:07:35.791 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.U.selectUserFriend               : ==>  Preparing: select id, user_id, friend_id, user_reation, firendtime, lookhead, sendpix, lookimages, spareint, spare, spare1 from user_friend where (user_id = ? and friend_id = ?) or (friend_id = ? AND user_id = ?) 
2019-04-26 11:07:35.791 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.U.selectUserFriend               : ==> Parameters: 251(String), 255(String), 251(String), 255(String)
2019-04-26 11:07:35.791 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.U.selectUserFriend               : <==      Total: 0
2019-04-26 11:07:35.791  INFO 9400 --- [http-nio-8080-exec-8] com.foreseers.tj.action.UserMatAction    : 两人不是好友关系，或者成为好友时间不够，判断是否使用过擦子
2019-04-26 11:07:35.791 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.U.selectByUserCaHistory          : ==>  Preparing: select id, userid, caid, usertime, userupdated, spare, spareint from user_ca_history where userid = ? and caid = ?; 
2019-04-26 11:07:35.792 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.U.selectByUserCaHistory          : ==> Parameters: 251(Integer), 255(Integer)
2019-04-26 11:07:35.792 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.U.selectByUserCaHistory          : <==      Total: 0
2019-04-26 11:07:35.792  INFO 9400 --- [http-nio-8080-exec-8] com.foreseers.tj.action.UserMatAction    : 没有使用过擦子，不能查看清晰头像
2019-04-26 11:07:35.793 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 11:07:35.793 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 255(Integer)
2019-04-26 11:07:35.793 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 11:07:35.794 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.UsermatchMapper.usermatchQuery   : ==>  Preparing: select id, zhuid, congid, userscore, userdesc, commentgood, commentbad, characteristicgood, characteristicbad, mindscore, minddesc, bodyscore, bodydesc, characterscore, characterdesc, distance, spare, spare1, spare2 , commentdesc, characteristicdesc from dt_usermatch where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 11:07:35.794 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.UsermatchMapper.usermatchQuery   : ==> Parameters: 255(Integer), 251(Integer), 251(Integer), 255(Integer)
2019-04-26 11:07:35.794 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.UsermatchMapper.usermatchQuery   : <==      Total: 1
2019-04-26 11:07:35.794 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.U.selectUserFriend               : ==>  Preparing: select id, user_id, friend_id, user_reation, firendtime, lookhead, sendpix, lookimages, spareint, spare, spare1 from user_friend where (user_id = ? and friend_id = ?) or (friend_id = ? AND user_id = ?) 
2019-04-26 11:07:35.795 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.U.selectUserFriend               : ==> Parameters: 251(String), 256(String), 251(String), 256(String)
2019-04-26 11:07:35.795 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.U.selectUserFriend               : <==      Total: 0
2019-04-26 11:07:35.795  INFO 9400 --- [http-nio-8080-exec-8] com.foreseers.tj.action.UserMatAction    : 两人不是好友关系，或者成为好友时间不够，判断是否使用过擦子
2019-04-26 11:07:35.795 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.U.selectByUserCaHistory          : ==>  Preparing: select id, userid, caid, usertime, userupdated, spare, spareint from user_ca_history where userid = ? and caid = ?; 
2019-04-26 11:07:35.795 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.U.selectByUserCaHistory          : ==> Parameters: 251(Integer), 256(Integer)
2019-04-26 11:07:35.795 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.U.selectByUserCaHistory          : <==      Total: 0
2019-04-26 11:07:35.796  INFO 9400 --- [http-nio-8080-exec-8] com.foreseers.tj.action.UserMatAction    : 没有使用过擦子，不能查看清晰头像
2019-04-26 11:07:35.796 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 11:07:35.796 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 256(Integer)
2019-04-26 11:07:35.796 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 11:07:35.797 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.UsermatchMapper.usermatchQuery   : ==>  Preparing: select id, zhuid, congid, userscore, userdesc, commentgood, commentbad, characteristicgood, characteristicbad, mindscore, minddesc, bodyscore, bodydesc, characterscore, characterdesc, distance, spare, spare1, spare2 , commentdesc, characteristicdesc from dt_usermatch where (zhuid = ? and congid = ?) or (zhuid = ? and congid = ?) 
2019-04-26 11:07:35.797 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.UsermatchMapper.usermatchQuery   : ==> Parameters: 256(Integer), 251(Integer), 251(Integer), 256(Integer)
2019-04-26 11:07:35.797 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.UsermatchMapper.usermatchQuery   : <==      Total: 1
2019-04-26 11:07:35.797  INFO 9400 --- [http-nio-8080-exec-8] com.foreseers.tj.action.UserMatAction    : 返回的参数：[com.foreseers.tj.model.ReturnUser@147dcb13, com.foreseers.tj.model.ReturnUser@67747975, com.foreseers.tj.model.ReturnUser@58e39d6b, com.foreseers.tj.model.ReturnUser@1325c70b]
2019-04-26 11:07:36.486  INFO 9400 --- [http-nio-8080-exec-1] c.foreseers.tj.action.UserFriendAction   : 进入修改用户好友相对应权限方法
2019-04-26 11:07:36.486  INFO 9400 --- [http-nio-8080-exec-1] c.foreseers.tj.action.UserFriendAction   : 请求参数：userid：251
2019-04-26 11:07:36.486  INFO 9400 --- [http-nio-8080-exec-1] c.foreseers.tj.action.UserFriendAction   : 请求参数：friendid：250
2019-04-26 11:07:36.486  INFO 9400 --- [http-nio-8080-exec-1] c.foreseers.tj.action.UserFriendAction   : 请求参数：lookhead：1
2019-04-26 11:07:36.486  INFO 9400 --- [http-nio-8080-exec-1] c.foreseers.tj.action.UserFriendAction   : 请求参数：sendpix：1
2019-04-26 11:07:36.486  INFO 9400 --- [http-nio-8080-exec-1] c.foreseers.tj.action.UserFriendAction   : 请求参数：lookimages：0
2019-04-26 11:07:36.486 DEBUG 9400 --- [http-nio-8080-exec-1] c.f.t.m.U.selectUserFriend               : ==>  Preparing: select id, user_id, friend_id, user_reation, firendtime, lookhead, sendpix, lookimages, spareint, spare, spare1 from user_friend where (user_id = ? and friend_id = ?) or (friend_id = ? AND user_id = ?) 
2019-04-26 11:07:36.486 DEBUG 9400 --- [http-nio-8080-exec-1] c.f.t.m.U.selectUserFriend               : ==> Parameters: 251(String), 250(String), 251(String), 250(String)
2019-04-26 11:07:36.487 DEBUG 9400 --- [http-nio-8080-exec-1] c.f.t.m.U.selectUserFriend               : <==      Total: 1
2019-04-26 11:07:36.487  INFO 9400 --- [http-nio-8080-exec-1] c.foreseers.tj.action.UserFriendAction   : userFriendUserFriend [Hash = 1699412510, id=35, userId=251, friendId=250, userReation=0, firendtime=2019-04-23 15:27:23, lookhead=1, sendpix=1, lookimages=0, spareint=null, spare=null, spare1=null, serialVersionUID=1]
2019-04-26 11:07:36.487  INFO 9400 --- [http-nio-8080-exec-1] c.foreseers.tj.action.UserFriendAction   : 存在好友关系
2019-04-26 11:07:36.487  INFO 9400 --- [http-nio-8080-exec-1] c.foreseers.tj.action.UserFriendAction   : 两人是好友
2019-04-26 11:07:36.487  INFO 9400 --- [http-nio-8080-exec-1] c.foreseers.tj.action.UserFriendAction   : map{uid=35, sendpix=1, lookimages=0, lookhead=1}
2019-04-26 11:07:36.488 DEBUG 9400 --- [http-nio-8080-exec-1] c.f.t.m.U.updateByPrimaryKeySelective    : ==>  Preparing: update user_friend SET lookhead = ?, sendpix = ?, lookimages = ? where id = ? 
2019-04-26 11:07:36.488 DEBUG 9400 --- [http-nio-8080-exec-1] c.f.t.m.U.updateByPrimaryKeySelective    : ==> Parameters: 1(Integer), 1(Integer), 0(Integer), 35(Integer)
2019-04-26 11:07:36.488 DEBUG 9400 --- [http-nio-8080-exec-1] c.f.t.m.U.updateByPrimaryKeySelective    : <==    Updates: 1
2019-04-26 11:07:36.499  INFO 9400 --- [http-nio-8080-exec-1] c.foreseers.tj.action.UserFriendAction   : resultsuccess
2019-04-26 11:07:37.819  INFO 9400 --- [http-nio-8080-exec-6] com.foreseers.tj.action.UserAction       : 进入个人中心
2019-04-26 11:07:37.819  INFO 9400 --- [http-nio-8080-exec-6] com.foreseers.tj.action.UserAction       : 请求参数：userid251
2019-04-26 11:07:37.820 DEBUG 9400 --- [http-nio-8080-exec-6] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 11:07:37.820 DEBUG 9400 --- [http-nio-8080-exec-6] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 251(Integer)
2019-04-26 11:07:37.820 DEBUG 9400 --- [http-nio-8080-exec-6] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 11:07:37.821 DEBUG 9400 --- [http-nio-8080-exec-6] c.f.t.m.U.queryByUseridlist              : ==>  Preparing: select id, userid, image, updated, facebookid, imagename, spare, spareint from user_image where userid = ? 
2019-04-26 11:07:37.821 DEBUG 9400 --- [http-nio-8080-exec-6] c.f.t.m.U.queryByUseridlist              : ==> Parameters: 251(Integer)
2019-04-26 11:07:37.822 DEBUG 9400 --- [http-nio-8080-exec-6] c.f.t.m.U.queryByUseridlist              : <==      Total: 3
2019-04-26 11:07:37.822 DEBUG 9400 --- [http-nio-8080-exec-6] c.f.t.m.LifebookMapper.lifebookSelf      : ==>  Preparing: select id, userid, name, gender, date, time, isLeap, lunaryear, lunarmonth, lunarday, numerology, numerologymatch, fiveElements, horoscope, horoscopeid, horoscopename, horoscopeguardPlanets, horoscopeguardPlanetsDesc, horoscopeguardGod, horoscopeguardAngel, horoscopeguardCrystal, horoscopematch, zodiac, zodiacid, zodiacname, zodiacguardBuddha, zodiacdesc, zodiacmatch, bazi, bazimatch, star, starmatch, ziwei, ziweimatch, created, updated, status, spareint from dt_lifebook where userid = ? and spareint = 1; 
2019-04-26 11:07:37.822 DEBUG 9400 --- [http-nio-8080-exec-6] c.f.t.m.LifebookMapper.lifebookSelf      : ==> Parameters: 251(Integer)
2019-04-26 11:07:37.823 DEBUG 9400 --- [http-nio-8080-exec-6] c.f.t.m.LifebookMapper.lifebookSelf      : <==      Total: 1
2019-04-26 11:07:37.823  INFO 9400 --- [http-nio-8080-exec-6] com.foreseers.tj.action.UserAction       : 返回的参数：ReturnImage [countnum=3, listimage=[http://192.168.1.73:8080/251/20190425100706345755.jpg, http://192.168.1.73:8080/251/20190425100742606270.jpg, http://192.168.1.73:8080/251/20190425114903981479.jpg], age=0, vipday=0, lifeuserid=137]
2019-04-26 11:07:59.018  INFO 9400 --- [http-nio-8080-exec-9] c.foreseers.tj.action.UserCanumsAction   : 获取用户的擦字子数方法
2019-04-26 11:07:59.018 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.U.selectByUserKey                : ==>  Preparing: select id, userid, everyday, vipeveryday, nums, updated, buynums, countnums, spare, spare1, spareint from user_canums where userid = ? 
2019-04-26 11:07:59.019 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.U.selectByUserKey                : ==> Parameters: 251(Integer)
2019-04-26 11:07:59.019 DEBUG 9400 --- [http-nio-8080-exec-9] c.f.t.m.U.selectByUserKey                : <==      Total: 1
2019-04-26 11:07:59.206  INFO 9400 --- [http-nio-8080-exec-4] com.foreseers.tj.action.UserAction       : 用户头像上传方法
2019-04-26 11:07:59.206  INFO 9400 --- [http-nio-8080-exec-4] com.foreseers.tj.action.UserAction       : 请求信息：userid:251
2019-04-26 11:07:59.206  INFO 9400 --- [http-nio-8080-exec-4] com.foreseers.tj.action.UserAction       : 配置文件中头像地址：e:/dt/head/
2019-04-26 11:07:59.206  INFO 9400 --- [http-nio-8080-exec-4] com.foreseers.tj.action.UserAction       : 最终头像上传地址：e:/dt/head/251
2019-04-26 11:07:59.207 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UserMapper.selectByPrimaryKey    : ==>  Preparing: select id, username, sex, date, time, zone, facebook, num, head, picture, vip, viptime, city, bazi, zodiac, xingzuo, ziwei, area, country, lat, lng, spare, spare1, updatetime, obligate, numerology, userstar, reservedint, reservedvar, reservedvar1, cat1 from dt_user where id = ? 
2019-04-26 11:07:59.207 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UserMapper.selectByPrimaryKey    : ==> Parameters: 251(Integer)
2019-04-26 11:07:59.207 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.UserMapper.selectByPrimaryKey    : <==      Total: 1
2019-04-26 11:07:59.208  INFO 9400 --- [http-nio-8080-exec-4] com.foreseers.tj.action.UserAction       : userhead：http://192.168.1.73:8080/251/1556159870033.jpg
2019-04-26 11:07:59.208  INFO 9400 --- [http-nio-8080-exec-4] com.foreseers.tj.action.UserAction       : 删除头像
2019-04-26 11:07:59.208  INFO 9400 --- [http-nio-8080-exec-4] com.foreseers.tj.action.UserAction       : 1556159870033.jpg
2019-04-26 11:07:59.218  INFO 9400 --- [http-nio-8080-exec-4] com.foreseers.tj.action.UserAction       : 删除模糊头像
2019-04-26 11:07:59.271  INFO 9400 --- [http-nio-8080-exec-4] com.foreseers.tj.action.UserAction       : name1556248088335.jpg
2019-04-26 11:07:59.271  INFO 9400 --- [http-nio-8080-exec-4] com.foreseers.tj.action.UserAction       : 保存图片的地址：e:\dt\head\251/1556248088335.jpg
2019-04-26 11:07:59.271  INFO 9400 --- [http-nio-8080-exec-4] com.foreseers.tj.action.UserAction       : 保存到数据库的地址：http://192.168.1.73:8080/251/1556248088335.jpg
2019-04-26 11:07:59.384  INFO 9400 --- [http-nio-8080-exec-4] com.foreseers.tj.action.UserAction       : 压缩后的图片的长宽：720````````1280
2019-04-26 11:07:59.427  INFO 9400 --- [http-nio-8080-exec-4] com.foreseers.tj.action.UserAction       : 图片resize完成
2019-04-26 11:07:59.450  INFO 9400 --- [http-nio-8080-exec-4] c.f.tj.service.impl.UserServiceImpl      : 压缩图片方法
2019-04-26 11:07:59.450  INFO 9400 --- [http-nio-8080-exec-4] c.f.tj.service.impl.UserServiceImpl      : 图片路径：e:\dt\head\251/1556248088335.jpg
2019-04-26 11:07:59.450  INFO 9400 --- [http-nio-8080-exec-4] c.f.tj.service.impl.UserServiceImpl      : imagepath:e:/dt/head/251
2019-04-26 11:07:59.599  INFO 9400 --- [http-nio-8080-exec-4] c.f.tj.service.impl.UserServiceImpl      : 压缩成功
2019-04-26 11:08:01.045  INFO 9400 --- [http-nio-8080-exec-4] c.f.tj.service.impl.UserServiceImpl      : imagepath:e:/dt/head/251/20190426110801751086.jpg
2019-04-26 11:08:01.076 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.U.updateByPrimaryKeySelective    : ==>  Preparing: update dt_user SET head = ?, picture = ? where id = ? 
2019-04-26 11:08:01.076 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.U.updateByPrimaryKeySelective    : ==> Parameters: http://192.168.1.73:8080/251/1556248088335.jpg(String), http://192.168.1.73:8080/251/20190426110801751086.jpg(String), 251(Integer)
2019-04-26 11:08:01.076 DEBUG 9400 --- [http-nio-8080-exec-4] c.f.t.m.U.updateByPrimaryKeySelective    : <==    Updates: 1
2019-04-26 11:08:01.108  INFO 9400 --- [http-nio-8080-exec-4] com.foreseers.tj.action.UserAction       : 返回值：User [Hash = -1278216578, id=251, username=null, sex=null, date=null, time=null, zone=null, facebook=null, num=null, head=http://192.168.1.73:8080/251/1556248088335.jpg, picture=http://192.168.1.73:8080/251/20190426110801751086.jpg, vip=null, viptime=null, city=null, bazi=null, zodiac=null, xingzuo=null, ziwei=null, area=null, country=null, lat=null, lng=null, spare=null, spare1=null, updatetime=null, obligate=null, numerology=null, userstar=null, reservedint=null, reservedvar=null, reservedvar1=null, cat1=null, serialVersionUID=1]
2019-04-26 11:16:27.756  INFO 9400 --- [http-nio-8080-exec-8] c.foreseers.tj.action.UserCanumsAction   : 获取用户的擦字子数方法
2019-04-26 11:16:27.757 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.U.selectByUserKey                : ==>  Preparing: select id, userid, everyday, vipeveryday, nums, updated, buynums, countnums, spare, spare1, spareint from user_canums where userid = ? 
2019-04-26 11:16:27.757 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.U.selectByUserKey                : ==> Parameters: 251(Integer)
2019-04-26 11:16:27.757 DEBUG 9400 --- [http-nio-8080-exec-8] c.f.t.m.U.selectByUserKey                : <==      Total: 1
2019-04-26 11:31:08.297  INFO 9400 --- [RMI TCP Connection(2)-127.0.0.1] inMXBeanRegistrar$SpringApplicationAdmin : Application shutdown requested.
2019-04-26 11:31:08.299  INFO 9400 --- [RMI TCP Connection(2)-127.0.0.1] o.s.s.c.ThreadPoolTaskScheduler          : Shutting down ExecutorService 'taskScheduler'
2019-04-26 11:31:08.299  INFO 9400 --- [RMI TCP Connection(2)-127.0.0.1] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2019-04-26 11:31:08.300  INFO 9400 --- [RMI TCP Connection(2)-127.0.0.1] com.zaxxer.hikari.HikariDataSource       : localhost - Shutdown initiated...
2019-04-26 11:31:08.303  INFO 9400 --- [RMI TCP Connection(2)-127.0.0.1] com.zaxxer.hikari.HikariDataSource       : localhost - Shutdown completed.
