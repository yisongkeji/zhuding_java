<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.foreseers.tj.mapper.LifebookDetailMapper">
  <resultMap id="BaseResultMap" type="com.foreseers.tj.model.LifebookDetail">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="icon" jdbcType="VARCHAR" property="icon" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="lifeuserid" jdbcType="INTEGER" property="lifeuserid" />
    <result column="created" jdbcType="VARCHAR" property="created" />
    <result column="updated" jdbcType="TIMESTAMP" property="updated" />
    <result column="spare" jdbcType="VARCHAR" property="spare" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.foreseers.tj.model.LifebookDetail">
    <result column="comment" jdbcType="LONGVARCHAR" property="comment" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, title,comment, icon, name, lifeuserid, created, updated, spare
  </sql>
  <sql id="Blob_Column_List">
    comment
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.foreseers.tj.model.LifebookDetailExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from lifebook_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.foreseers.tj.model.LifebookDetailExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from lifebook_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  
 <!-- 通过lifeid和name查询 --> 
  <select id="selectByLifeuserid" parameterType="com.foreseers.tj.model.LifebookDetail" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from lifebook_detail
	where lifeuserid = #{lifeuserid,jdbcType=INTEGER} and name = #{name,jdbcType=VARCHAR}
  </select>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from lifebook_detail
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from lifebook_detail
    where id = #{id,jdbcType=INTEGER}
  </delete>
 
 <!-- 删除命书用户算命信息 --> 
 <delete id="deletelifeUser" parameterType="java.lang.Integer">
    delete from lifebook_detail
    where lifeuserid = #{lifeuserid,jdbcType=INTEGER}
  </delete>
  
  <delete id="deleteByExample" parameterType="com.foreseers.tj.model.LifebookDetailExample">
    delete from lifebook_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.foreseers.tj.model.LifebookDetail">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into lifebook_detail (title, icon, name, 
      lifeuserid, created, updated, 
      spare, comment)
    values (#{title,jdbcType=VARCHAR}, #{icon,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{lifeuserid,jdbcType=INTEGER}, #{created,jdbcType=VARCHAR}, #{updated,jdbcType=TIMESTAMP}, 
      #{spare,jdbcType=VARCHAR}, #{comment,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.foreseers.tj.model.LifebookDetail">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into lifebook_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="title != null">
        title,
      </if>
      <if test="icon != null">
        icon,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="lifeuserid != null">
        lifeuserid,
      </if>
      <if test="created != null">
        created,
      </if>
      <if test="updated != null">
        updated,
      </if>
      <if test="spare != null">
        spare,
      </if>
      <if test="comment != null">
        comment,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="icon != null">
        #{icon,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="lifeuserid != null">
        #{lifeuserid,jdbcType=INTEGER},
      </if>
      <if test="created != null">
        #{created,jdbcType=VARCHAR},
      </if>
      <if test="updated != null">
        #{updated,jdbcType=TIMESTAMP},
      </if>
      <if test="spare != null">
        #{spare,jdbcType=VARCHAR},
      </if>
      <if test="comment != null">
        #{comment,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.foreseers.tj.model.LifebookDetailExample" resultType="java.lang.Long">
    select count(*) from lifebook_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update lifebook_detail
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.icon != null">
        icon = #{record.icon,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.lifeuserid != null">
        lifeuserid = #{record.lifeuserid,jdbcType=INTEGER},
      </if>
      <if test="record.created != null">
        created = #{record.created,jdbcType=VARCHAR},
      </if>
      <if test="record.updated != null">
        updated = #{record.updated,jdbcType=TIMESTAMP},
      </if>
      <if test="record.spare != null">
        spare = #{record.spare,jdbcType=VARCHAR},
      </if>
      <if test="record.comment != null">
        comment = #{record.comment,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update lifebook_detail
    set id = #{record.id,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      icon = #{record.icon,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      lifeuserid = #{record.lifeuserid,jdbcType=INTEGER},
      created = #{record.created,jdbcType=VARCHAR},
      updated = #{record.updated,jdbcType=TIMESTAMP},
      spare = #{record.spare,jdbcType=VARCHAR},
      comment = #{record.comment,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update lifebook_detail
    set id = #{record.id,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      icon = #{record.icon,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      lifeuserid = #{record.lifeuserid,jdbcType=INTEGER},
      created = #{record.created,jdbcType=VARCHAR},
      updated = #{record.updated,jdbcType=TIMESTAMP},
      spare = #{record.spare,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.foreseers.tj.model.LifebookDetail">
    update lifebook_detail
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="icon != null">
        icon = #{icon,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="lifeuserid != null">
        lifeuserid = #{lifeuserid,jdbcType=INTEGER},
      </if>
      <if test="created != null">
        created = #{created,jdbcType=VARCHAR},
      </if>
      <if test="updated != null">
        updated = #{updated,jdbcType=TIMESTAMP},
      </if>
      <if test="spare != null">
        spare = #{spare,jdbcType=VARCHAR},
      </if>
      <if test="comment != null">
        comment = #{comment,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.foreseers.tj.model.LifebookDetail">
    update lifebook_detail
    set title = #{title,jdbcType=VARCHAR},
      icon = #{icon,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      lifeuserid = #{lifeuserid,jdbcType=INTEGER},
      created = #{created,jdbcType=VARCHAR},
      updated = #{updated,jdbcType=TIMESTAMP},
      spare = #{spare,jdbcType=VARCHAR},
      comment = #{comment,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.foreseers.tj.model.LifebookDetail">
    update lifebook_detail
    set title = #{title,jdbcType=VARCHAR},
      icon = #{icon,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      lifeuserid = #{lifeuserid,jdbcType=INTEGER},
      created = #{created,jdbcType=VARCHAR},
      updated = #{updated,jdbcType=TIMESTAMP},
      spare = #{spare,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>